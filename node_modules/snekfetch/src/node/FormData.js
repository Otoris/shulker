const path = require('path');
const mime = require('./mime');

class FormData ***REMOVED***
  constructor() ***REMOVED***
    this.boundary = `--snekfetch--$***REMOVED***Math.random().toString().slice(2, 7)***REMOVED***`;
    this.buffers = [];
  ***REMOVED***

  append(name, data, filename) ***REMOVED***
    if (typeof data === 'undefined')
      return;
    let str = `\r\n--$***REMOVED***this.boundary***REMOVED***\r\nContent-Disposition: form-data; name="$***REMOVED***name***REMOVED***"`;
    let mimetype = null;
    if (filename) ***REMOVED***
      str += `; filename="$***REMOVED***filename***REMOVED***"`;
      mimetype = 'application/octet-stream';
      const extname = path.extname(filename).slice(1);
      if (extname)
        mimetype = mime.lookup(extname);
    ***REMOVED***

    if (data instanceof Buffer) ***REMOVED***
      mimetype = mime.buffer(data);
    ***REMOVED*** else if (typeof data === 'object') ***REMOVED***
      mimetype = 'application/json';
      data = Buffer.from(JSON.stringify(data));
    ***REMOVED*** else ***REMOVED***
      data = Buffer.from(String(data));
    ***REMOVED***

    if (mimetype)
      str += `\r\nContent-Type: $***REMOVED***mimetype***REMOVED***`;
    this.buffers.push(Buffer.from(`$***REMOVED***str***REMOVED***\r\n\r\n`));
    this.buffers.push(data);
  ***REMOVED***

  getBoundary() ***REMOVED***
    return this.boundary;
  ***REMOVED***

  end() ***REMOVED***
    return Buffer.concat([...this.buffers, Buffer.from(`\r\n--$***REMOVED***this.boundary***REMOVED***--`)]);
  ***REMOVED***

  get length() ***REMOVED***
    return this.buffers.reduce((sum, b) => sum + Buffer.byteLength(b), 0);
  ***REMOVED***
***REMOVED***

module.exports = FormData;
