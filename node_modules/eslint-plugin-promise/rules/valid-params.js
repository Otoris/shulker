'use strict'

const getDocsUrl = require('./lib/get-docs-url')
const isPromise = require('./lib/is-promise')

module.exports = ***REMOVED***
  meta: ***REMOVED***
    docs: ***REMOVED***
      description:
        'Ensures the proper number of arguments are passed to Promise functions',
      url: getDocsUrl('valid-params')
    ***REMOVED***
  ***REMOVED***,
  create(context) ***REMOVED***
    return ***REMOVED***
      CallExpression(node) ***REMOVED***
        if (!isPromise(node)) ***REMOVED***
          return
        ***REMOVED***

        const name = node.callee.property.name
        const numArgs = node.arguments.length

        switch (name) ***REMOVED***
          case 'resolve':
          case 'reject':
            if (numArgs > 1) ***REMOVED***
              context.report(***REMOVED***
                node,
                message:
                  'Promise.***REMOVED******REMOVED*** name ***REMOVED******REMOVED***() requires 0 or 1 arguments, but received ***REMOVED******REMOVED*** numArgs ***REMOVED******REMOVED***',
                data: ***REMOVED*** name, numArgs ***REMOVED***
              ***REMOVED***)
            ***REMOVED***
            break
          case 'then':
            if (numArgs < 1 || numArgs > 2) ***REMOVED***
              context.report(***REMOVED***
                node,
                message:
                  'Promise.***REMOVED******REMOVED*** name ***REMOVED******REMOVED***() requires 1 or 2 arguments, but received ***REMOVED******REMOVED*** numArgs ***REMOVED******REMOVED***',
                data: ***REMOVED*** name, numArgs ***REMOVED***
              ***REMOVED***)
            ***REMOVED***
            break
          case 'race':
          case 'all':
          case 'catch':
          case 'finally':
            if (numArgs !== 1) ***REMOVED***
              context.report(***REMOVED***
                node,
                message:
                  'Promise.***REMOVED******REMOVED*** name ***REMOVED******REMOVED***() requires 1 argument, but received ***REMOVED******REMOVED*** numArgs ***REMOVED******REMOVED***',
                data: ***REMOVED*** name, numArgs ***REMOVED***
              ***REMOVED***)
            ***REMOVED***
            break
          default:
            break
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***
***REMOVED***
