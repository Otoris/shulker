/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved. 
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0  
 
THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, 
MERCHANTABLITY OR NON-INFRINGEMENT. 
 
See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */


"use strict";
var fs = require("fs");
function pipeExists(name) ***REMOVED***
    try ***REMOVED***
        fs.statSync(name);
        return true;
    ***REMOVED***
    catch (e) ***REMOVED***
        return false;
    ***REMOVED***
***REMOVED***
function createCancellationToken(args) ***REMOVED***
    var cancellationPipeName;
    for (var i = 0; i < args.length - 1; i++) ***REMOVED***
        if (args[i] === "--cancellationPipeName") ***REMOVED***
            cancellationPipeName = args[i + 1];
            break;
        ***REMOVED***
    ***REMOVED***
    if (!cancellationPipeName) ***REMOVED***
        return ***REMOVED***
            isCancellationRequested: function () ***REMOVED*** return false; ***REMOVED***,
            setRequest: function (_requestId) ***REMOVED*** return void 0; ***REMOVED***,
            resetRequest: function (_requestId) ***REMOVED*** return void 0; ***REMOVED***
        ***REMOVED***;
    ***REMOVED***
    if (cancellationPipeName.charAt(cancellationPipeName.length - 1) === "*") ***REMOVED***
        var namePrefix_1 = cancellationPipeName.slice(0, -1);
        if (namePrefix_1.length === 0 || namePrefix_1.indexOf("*") >= 0) ***REMOVED***
            throw new Error("Invalid name for template cancellation pipe: it should have length greater than 2 characters and contain only one '*'.");
        ***REMOVED***
        var perRequestPipeName_1;
        var currentRequestId_1;
        return ***REMOVED***
            isCancellationRequested: function () ***REMOVED*** return perRequestPipeName_1 !== undefined && pipeExists(perRequestPipeName_1); ***REMOVED***,
            setRequest: function (requestId) ***REMOVED***
                currentRequestId_1 = requestId;
                perRequestPipeName_1 = namePrefix_1 + requestId;
            ***REMOVED***,
            resetRequest: function (requestId) ***REMOVED***
                if (currentRequestId_1 !== requestId) ***REMOVED***
                    throw new Error("Mismatched request id, expected " + currentRequestId_1 + ", actual " + requestId);
                ***REMOVED***
                perRequestPipeName_1 = undefined;
            ***REMOVED***
        ***REMOVED***;
    ***REMOVED***
    else ***REMOVED***
        return ***REMOVED***
            isCancellationRequested: function () ***REMOVED*** return pipeExists(cancellationPipeName); ***REMOVED***,
            setRequest: function (_requestId) ***REMOVED*** return void 0; ***REMOVED***,
            resetRequest: function (_requestId) ***REMOVED*** return void 0; ***REMOVED***
        ***REMOVED***;
    ***REMOVED***
***REMOVED***
module.exports = createCancellationToken;
//# sourceMappingURL=cancellationToken.js.map