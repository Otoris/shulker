'use strict';

var test = require('tape');
var hasSymbols = require('has-symbols')();

var OwnPropertyKeys = require('../../helpers/OwnPropertyKeys');
var defineProperty = require('./defineProperty');

test('OwnPropertyKeys', function (t) ***REMOVED***
	t.deepEqual(OwnPropertyKeys(***REMOVED*** a: 1, b: 2 ***REMOVED***).sort(), ['a', 'b'].sort(), 'returns own string keys');

	t.test('Symbols', ***REMOVED*** skip: !hasSymbols ***REMOVED***, function (st) ***REMOVED***
		var o = ***REMOVED*** a: 1 ***REMOVED***;
		var sym = Symbol();
		o[sym] = 2;

		st.deepEqual(OwnPropertyKeys(o), ['a', sym], 'returns own string and symbol keys');

		st.end();
	***REMOVED***);

	t.test('non-enumerables', ***REMOVED*** skip: !defineProperty.oDP ***REMOVED***, function (st) ***REMOVED***
		var o = ***REMOVED*** a: 1, b: 42, c: NaN ***REMOVED***;
		defineProperty(o, 'b', ***REMOVED*** enumerable: false, value: 42 ***REMOVED***);
		defineProperty(o, 'c', ***REMOVED*** enumerable: false, get: function () ***REMOVED*** return NaN; ***REMOVED*** ***REMOVED***);

		if (hasSymbols) ***REMOVED***
			defineProperty(o, 'd', ***REMOVED*** enumerable: false, value: true ***REMOVED***);
			defineProperty(o, 'e', ***REMOVED*** enumerable: false, get: function () ***REMOVED*** return true; ***REMOVED*** ***REMOVED***);
		***REMOVED***

		st.deepEqual(
			OwnPropertyKeys(o).sort(),
			(hasSymbols ? ['a', 'b', 'c', 'd', 'e'] : ['a', 'b', 'c']).sort(),
			'returns non-enumerable own keys, including accessors and symbols if available'
		);

		st.end();
	***REMOVED***);

	t.end();
***REMOVED***);
