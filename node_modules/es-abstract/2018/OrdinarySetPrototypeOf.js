'use strict';

var GetIntrinsic = require('../GetIntrinsic');

var $TypeError = GetIntrinsic('%TypeError%');

var $setProto = require('../helpers/setProto');

var OrdinaryGetPrototypeOf = require('./OrdinaryGetPrototypeOf');
var Type = require('./Type');

// https://ecma-international.org/ecma-262/7.0/#sec-ordinarysetprototypeof

module.exports = function OrdinarySetPrototypeOf(O, V) ***REMOVED***
	if (Type(V) !== 'Object' && Type(V) !== 'Null') ***REMOVED***
		throw new $TypeError('Assertion failed: V must be Object or Null');
	***REMOVED***
	/*
    var extensible = IsExtensible(O);
    var current = OrdinaryGetPrototypeOf(O);
    if (SameValue(V, current)) ***REMOVED***
        return true;
    ***REMOVED***
    if (!extensible) ***REMOVED***
        return false;
    ***REMOVED***
    */
	try ***REMOVED***
		$setProto(O, V);
	***REMOVED*** catch (e) ***REMOVED***
		return false;
	***REMOVED***
	return OrdinaryGetPrototypeOf(O) === V;
	/*
    var p = V;
    var done = false;
    while (!done) ***REMOVED***
        if (p === null) ***REMOVED***
            done = true;
        ***REMOVED*** else if (SameValue(p, O)) ***REMOVED***
            return false;
        ***REMOVED*** else ***REMOVED***
            if (wat) ***REMOVED***
                done = true;
            ***REMOVED*** else ***REMOVED***
                p = p.[[Prototype]];
            ***REMOVED***
        ***REMOVED***
     ***REMOVED***
     O.[[Prototype]] = V;
     return true;
     */
***REMOVED***;
