/**
 * @fileoverview Enforce event handler naming conventions in JSX
 * @author Jake Marsh
 */

'use strict';

const docsUrl = require('../util/docsUrl');

// ------------------------------------------------------------------------------
// Rule Definition
// ------------------------------------------------------------------------------

module.exports = ***REMOVED***
  meta: ***REMOVED***
    docs: ***REMOVED***
      description: 'Enforce event handler naming conventions in JSX',
      category: 'Stylistic Issues',
      recommended: false,
      url: docsUrl('jsx-handler-names')
    ***REMOVED***,

    schema: [***REMOVED***
      type: 'object',
      properties: ***REMOVED***
        eventHandlerPrefix: ***REMOVED***
          type: 'string'
        ***REMOVED***,
        eventHandlerPropPrefix: ***REMOVED***
          type: 'string'
        ***REMOVED***
      ***REMOVED***,
      additionalProperties: false
    ***REMOVED***]
  ***REMOVED***,

  create(context) ***REMOVED***
    const configuration = context.options[0] || ***REMOVED******REMOVED***;
    const eventHandlerPrefix = configuration.eventHandlerPrefix || 'handle';
    const eventHandlerPropPrefix = configuration.eventHandlerPropPrefix || 'on';

    const EVENT_HANDLER_REGEX = new RegExp(`^((props\\.$***REMOVED***eventHandlerPropPrefix***REMOVED***)|((.*\\.)?$***REMOVED***eventHandlerPrefix***REMOVED***))[A-Z].*$`);
    const PROP_EVENT_HANDLER_REGEX = new RegExp(`^($***REMOVED***eventHandlerPropPrefix***REMOVED***[A-Z].*|ref)$`);

    return ***REMOVED***
      JSXAttribute(node) ***REMOVED***
        if (!node.value || !node.value.expression || !node.value.expression.object) ***REMOVED***
          return;
        ***REMOVED***

        const propKey = typeof node.name === 'object' ? node.name.name : node.name;
        const propValue = context.getSourceCode().getText(node.value.expression).replace(/^this\.|.*::/, '');

        if (propKey === 'ref') ***REMOVED***
          return;
        ***REMOVED***

        const propIsEventHandler = PROP_EVENT_HANDLER_REGEX.test(propKey);
        const propFnIsNamedCorrectly = EVENT_HANDLER_REGEX.test(propValue);

        if (propIsEventHandler && !propFnIsNamedCorrectly) ***REMOVED***
          context.report(***REMOVED***
            node,
            message: `Handler function for $***REMOVED***propKey***REMOVED*** prop key must begin with '$***REMOVED***eventHandlerPrefix***REMOVED***'`
          ***REMOVED***);
        ***REMOVED*** else if (propFnIsNamedCorrectly && !propIsEventHandler) ***REMOVED***
          context.report(***REMOVED***
            node,
            message: `Prop key for $***REMOVED***propValue***REMOVED*** must begin with '$***REMOVED***eventHandlerPropPrefix***REMOVED***'`
          ***REMOVED***);
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***;
  ***REMOVED***
***REMOVED***;
