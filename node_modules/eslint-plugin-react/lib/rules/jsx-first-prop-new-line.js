/**
 * @fileoverview Ensure proper position of the first property in JSX
 * @author Joachim Seminck
 */

'use strict';

const docsUrl = require('../util/docsUrl');

// ------------------------------------------------------------------------------
// Rule Definition
// ------------------------------------------------------------------------------

module.exports = ***REMOVED***
  meta: ***REMOVED***
    docs: ***REMOVED***
      description: 'Ensure proper position of the first property in JSX',
      category: 'Stylistic Issues',
      recommended: false,
      url: docsUrl('jsx-first-prop-new-line')
    ***REMOVED***,
    fixable: 'code',

    schema: [***REMOVED***
      enum: ['always', 'never', 'multiline', 'multiline-multiprop']
    ***REMOVED***]
  ***REMOVED***,

  create(context) ***REMOVED***
    const configuration = context.options[0] || 'multiline-multiprop';

    function isMultilineJSX(jsxNode) ***REMOVED***
      return jsxNode.loc.start.line < jsxNode.loc.end.line;
    ***REMOVED***

    return ***REMOVED***
      JSXOpeningElement(node) ***REMOVED***
        if (
          (configuration === 'multiline' && isMultilineJSX(node)) ||
          (configuration === 'multiline-multiprop' && isMultilineJSX(node) && node.attributes.length > 1) ||
          (configuration === 'always')
        ) ***REMOVED***
          node.attributes.some((decl) => ***REMOVED***
            if (decl.loc.start.line === node.loc.start.line) ***REMOVED***
              context.report(***REMOVED***
                node: decl,
                message: 'Property should be placed on a new line',
                fix(fixer) ***REMOVED***
                  return fixer.replaceTextRange([node.name.range[1], decl.range[0]], '\n');
                ***REMOVED***
              ***REMOVED***);
            ***REMOVED***
            return true;
          ***REMOVED***);
        ***REMOVED*** else if (configuration === 'never' && node.attributes.length > 0) ***REMOVED***
          const firstNode = node.attributes[0];
          if (node.loc.start.line < firstNode.loc.start.line) ***REMOVED***
            context.report(***REMOVED***
              node: firstNode,
              message: 'Property should be placed on the same line as the component declaration',
              fix(fixer) ***REMOVED***
                return fixer.replaceTextRange([node.name.range[1], firstNode.range[0]], ' ');
              ***REMOVED***
            ***REMOVED***);
          ***REMOVED***
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***;
  ***REMOVED***
***REMOVED***;
