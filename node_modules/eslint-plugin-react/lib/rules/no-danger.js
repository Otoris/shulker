/**
 * @fileoverview Prevent usage of dangerous JSX props
 * @author Scott Andrews
 */

'use strict';

const docsUrl = require('../util/docsUrl');
const jsxUtil = require('../util/jsx');

// ------------------------------------------------------------------------------
// Constants
// ------------------------------------------------------------------------------

const DANGEROUS_MESSAGE = 'Dangerous property \'***REMOVED******REMOVED***name***REMOVED******REMOVED***\' found';

const DANGEROUS_PROPERTY_NAMES = [
  'dangerouslySetInnerHTML'
];

const DANGEROUS_PROPERTIES = DANGEROUS_PROPERTY_NAMES.reduce((props, prop) => ***REMOVED***
  props[prop] = prop;
  return props;
***REMOVED***, Object.create(null));

// ------------------------------------------------------------------------------
// Helpers
// ------------------------------------------------------------------------------

/**
 * Checks if a JSX attribute is dangerous.
 * @param ***REMOVED***String***REMOVED*** name - Name of the attribute to check.
 * @returns ***REMOVED***boolean***REMOVED*** Whether or not the attribute is dnagerous.
 */
function isDangerous(name) ***REMOVED***
  return name in DANGEROUS_PROPERTIES;
***REMOVED***

// ------------------------------------------------------------------------------
// Rule Definition
// ------------------------------------------------------------------------------

module.exports = ***REMOVED***
  meta: ***REMOVED***
    docs: ***REMOVED***
      description: 'Prevent usage of dangerous JSX props',
      category: 'Best Practices',
      recommended: false,
      url: docsUrl('no-danger')
    ***REMOVED***,
    schema: []
  ***REMOVED***,

  create(context) ***REMOVED***
    return ***REMOVED***

      JSXAttribute(node) ***REMOVED***
        if (jsxUtil.isDOMComponent(node.parent) && isDangerous(node.name.name)) ***REMOVED***
          context.report(***REMOVED***
            node,
            message: DANGEROUS_MESSAGE,
            data: ***REMOVED***
              name: node.name.name
            ***REMOVED***
          ***REMOVED***);
        ***REMOVED***
      ***REMOVED***

    ***REMOVED***;
  ***REMOVED***
***REMOVED***;
