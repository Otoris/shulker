/**
 * @fileoverview Prevent missing React when using JSX
 * @author Glen Mailer
 */

'use strict';

const variableUtil = require('../util/variable');
const pragmaUtil = require('../util/pragma');
const docsUrl = require('../util/docsUrl');

// -----------------------------------------------------------------------------
// Rule Definition
// -----------------------------------------------------------------------------

module.exports = ***REMOVED***
  meta: ***REMOVED***
    docs: ***REMOVED***
      description: 'Prevent missing React when using JSX',
      category: 'Possible Errors',
      recommended: true,
      url: docsUrl('react-in-jsx-scope')
    ***REMOVED***,
    schema: []
  ***REMOVED***,

  create(context) ***REMOVED***
    const pragma = pragmaUtil.getFromContext(context);
    const NOT_DEFINED_MESSAGE = '\'***REMOVED******REMOVED***name***REMOVED******REMOVED***\' must be in scope when using JSX';

    function checkIfReactIsInScope(node) ***REMOVED***
      const variables = variableUtil.variablesInScope(context);
      if (variableUtil.findVariable(variables, pragma)) ***REMOVED***
        return;
      ***REMOVED***
      context.report(***REMOVED***
        node,
        message: NOT_DEFINED_MESSAGE,
        data: ***REMOVED***
          name: pragma
        ***REMOVED***
      ***REMOVED***);
    ***REMOVED***

    return ***REMOVED***
      JSXOpeningElement: checkIfReactIsInScope,
      JSXOpeningFragment: checkIfReactIsInScope
    ***REMOVED***;
  ***REMOVED***
***REMOVED***;
