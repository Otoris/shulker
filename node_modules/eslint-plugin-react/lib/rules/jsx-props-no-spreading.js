/**
 * @fileoverview Prevent JSX prop spreading
 * @author Ashish Gambhir
 */

'use strict';

const docsUrl = require('../util/docsUrl');

// ------------------------------------------------------------------------------
// Constants
// ------------------------------------------------------------------------------

const OPTIONS = ***REMOVED***ignore: 'ignore', enforce: 'enforce'***REMOVED***;
const DEFAULTS = ***REMOVED***html: OPTIONS.enforce, custom: OPTIONS.enforce, exceptions: []***REMOVED***;

// ------------------------------------------------------------------------------
// Rule Definition
// ------------------------------------------------------------------------------

module.exports = ***REMOVED***
  meta: ***REMOVED***
    docs: ***REMOVED***
      description: 'Prevent JSX prop spreading',
      category: 'Best Practices',
      recommended: false,
      url: docsUrl('jsx-props-no-spreading')
    ***REMOVED***,
    schema: [***REMOVED***
      allOf: [***REMOVED***
        type: 'object',
        properties: ***REMOVED***
          html: ***REMOVED***
            enum: [OPTIONS.enforce, OPTIONS.ignore]
          ***REMOVED***,
          custom: ***REMOVED***
            enum: [OPTIONS.enforce, OPTIONS.ignore]
          ***REMOVED***,
          exceptions: ***REMOVED***
            type: 'array',
            items: ***REMOVED***
              type: 'string',
              uniqueItems: true
            ***REMOVED***
          ***REMOVED***
        ***REMOVED***
      ***REMOVED***, ***REMOVED***
        not: ***REMOVED***
          type: 'object',
          required: ['html', 'custom'],
          properties: ***REMOVED***
            html: ***REMOVED***
              enum: [OPTIONS.ignore]
            ***REMOVED***,
            custom: ***REMOVED***
              enum: [OPTIONS.ignore]
            ***REMOVED***,
            exceptions: ***REMOVED***
              type: 'array',
              minItems: 0,
              maxItems: 0
            ***REMOVED***
          ***REMOVED***
        ***REMOVED***
      ***REMOVED***]
    ***REMOVED***]
  ***REMOVED***,

  create(context) ***REMOVED***
    const configuration = context.options[0] || ***REMOVED******REMOVED***;
    const ignoreHtmlTags = (configuration.html || DEFAULTS.html) === OPTIONS.ignore;
    const ignoreCustomTags = (configuration.custom || DEFAULTS.custom) === OPTIONS.ignore;
    const exceptions = configuration.exceptions || DEFAULTS.exceptions;
    const isException = (tag, allExceptions) => allExceptions.indexOf(tag) !== -1;
    return ***REMOVED***
      JSXSpreadAttribute(node) ***REMOVED***
        const tagName = node.parent.name.name;
        const isHTMLTag = tagName && tagName[0] !== tagName[0].toUpperCase();
        const isCustomTag = tagName && tagName[0] === tagName[0].toUpperCase();
        if (isHTMLTag &&
          ((ignoreHtmlTags && !isException(tagName, exceptions)) ||
          (!ignoreHtmlTags && isException(tagName, exceptions)))) ***REMOVED***
          return;
        ***REMOVED***
        if (isCustomTag &&
          ((ignoreCustomTags && !isException(tagName, exceptions)) ||
          (!ignoreCustomTags && isException(tagName, exceptions)))) ***REMOVED***
          return;
        ***REMOVED***
        context.report(***REMOVED***
          node,
          message: 'Prop spreading is forbidden'
        ***REMOVED***);
      ***REMOVED***
    ***REMOVED***;
  ***REMOVED***
***REMOVED***;
