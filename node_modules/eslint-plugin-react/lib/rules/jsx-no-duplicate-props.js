/**
 * @fileoverview Enforce no duplicate props
 * @author Markus Ånöstam
 */

'use strict';

const has = require('has');
const docsUrl = require('../util/docsUrl');

// ------------------------------------------------------------------------------
// Rule Definition
// ------------------------------------------------------------------------------

module.exports = ***REMOVED***
  meta: ***REMOVED***
    docs: ***REMOVED***
      description: 'Enforce no duplicate props',
      category: 'Possible Errors',
      recommended: true,
      url: docsUrl('jsx-no-duplicate-props')
    ***REMOVED***,

    schema: [***REMOVED***
      type: 'object',
      properties: ***REMOVED***
        ignoreCase: ***REMOVED***
          type: 'boolean'
        ***REMOVED***
      ***REMOVED***,
      additionalProperties: false
    ***REMOVED***]
  ***REMOVED***,

  create(context) ***REMOVED***
    const configuration = context.options[0] || ***REMOVED******REMOVED***;
    const ignoreCase = configuration.ignoreCase || false;

    return ***REMOVED***
      JSXOpeningElement(node) ***REMOVED***
        const props = ***REMOVED******REMOVED***;

        node.attributes.forEach((decl) => ***REMOVED***
          if (decl.type === 'JSXSpreadAttribute') ***REMOVED***
            return;
          ***REMOVED***

          let name = decl.name.name;

          if (typeof name !== 'string') ***REMOVED***
            return;
          ***REMOVED***

          if (ignoreCase) ***REMOVED***
            name = name.toLowerCase();
          ***REMOVED***

          if (has(props, name)) ***REMOVED***
            context.report(***REMOVED***
              node: decl,
              message: 'No duplicate props allowed'
            ***REMOVED***);
          ***REMOVED*** else ***REMOVED***
            props[name] = 1;
          ***REMOVED***
        ***REMOVED***);
      ***REMOVED***
    ***REMOVED***;
  ***REMOVED***
***REMOVED***;
