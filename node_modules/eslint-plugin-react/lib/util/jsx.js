/**
 * @fileoverview Utility functions for JSX
 */

'use strict';

const elementType = require('jsx-ast-utils/elementType');

const COMPAT_TAG_REGEX = /^[a-z]|-/;

/**
 * Checks if a node represents a DOM element.
 * @param ***REMOVED***object***REMOVED*** node - JSXOpeningElement to check.
 * @returns ***REMOVED***boolean***REMOVED*** Whether or not the node corresponds to a DOM element.
 */
function isDOMComponent(node) ***REMOVED***
  let name = elementType(node);

  // Get namespace if the type is JSXNamespacedName or JSXMemberExpression
  if (name.indexOf(':') > -1) ***REMOVED***
    name = name.slice(0, name.indexOf(':'));
  ***REMOVED*** else if (name.indexOf('.') > -1) ***REMOVED***
    name = name.slice(0, name.indexOf('.'));
  ***REMOVED***

  return COMPAT_TAG_REGEX.test(name);
***REMOVED***

/**
 * Checks if a node represents a JSX element or fragment.
 * @param ***REMOVED***object***REMOVED*** node - node to check.
 * @returns ***REMOVED***boolean***REMOVED*** Whether or not the node if a JSX element or fragment.
 */
function isJSX(node) ***REMOVED***
  return node && ['JSXElement', 'JSXFragment'].indexOf(node.type) >= 0;
***REMOVED***

module.exports = ***REMOVED***
  isDOMComponent,
  isJSX
***REMOVED***;
