/**
 * @fileoverview Utility functions for propWrapperFunctions setting
 */

'use strict';

function getPropWrapperFunctions(context) ***REMOVED***
  return new Set(context.settings.propWrapperFunctions || []);
***REMOVED***

function isPropWrapperFunction(context, name) ***REMOVED***
  if (typeof name !== 'string') ***REMOVED***
    return false;
  ***REMOVED***
  const propWrapperFunctions = getPropWrapperFunctions(context);
  const splitName = name.split('.');
  return Array.from(propWrapperFunctions).some((func) => ***REMOVED***
    if (splitName.length === 2 && func.object === splitName[0] && func.property === splitName[1]) ***REMOVED***
      return true;
    ***REMOVED***
    return name === func || func.property === name;
  ***REMOVED***);
***REMOVED***

module.exports = ***REMOVED***
  getPropWrapperFunctions,
  isPropWrapperFunction
***REMOVED***;
