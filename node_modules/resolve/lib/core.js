var current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];

function specifierIncluded(specifier) ***REMOVED***
    var parts = specifier.split(' ');
    var op = parts.length > 1 ? parts[0] : '=';
    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');

    for (var i = 0; i < 3; ++i) ***REMOVED***
        var cur = Number(current[i] || 0);
        var ver = Number(versionParts[i] || 0);
        if (cur === ver) ***REMOVED***
            continue; // eslint-disable-line no-restricted-syntax, no-continue
        ***REMOVED***
        if (op === '<') ***REMOVED***
            return cur < ver;
        ***REMOVED*** else if (op === '>=') ***REMOVED***
            return cur >= ver;
        ***REMOVED*** else ***REMOVED***
            return false;
        ***REMOVED***
    ***REMOVED***
    return op === '>=';
***REMOVED***

function matchesRange(range) ***REMOVED***
    var specifiers = range.split(/ ?&& ?/);
    if (specifiers.length === 0) ***REMOVED*** return false; ***REMOVED***
    for (var i = 0; i < specifiers.length; ++i) ***REMOVED***
        if (!specifierIncluded(specifiers[i])) ***REMOVED*** return false; ***REMOVED***
    ***REMOVED***
    return true;
***REMOVED***

function versionIncluded(specifierValue) ***REMOVED***
    if (typeof specifierValue === 'boolean') ***REMOVED*** return specifierValue; ***REMOVED***
    if (specifierValue && typeof specifierValue === 'object') ***REMOVED***
        for (var i = 0; i < specifierValue.length; ++i) ***REMOVED***
            if (matchesRange(specifierValue[i])) ***REMOVED*** return true; ***REMOVED***
        ***REMOVED***
        return false;
    ***REMOVED***
    return matchesRange(specifierValue);
***REMOVED***

var data = require('./core.json');

var core = ***REMOVED******REMOVED***;
for (var mod in data) ***REMOVED*** // eslint-disable-line no-restricted-syntax
    if (Object.prototype.hasOwnProperty.call(data, mod)) ***REMOVED***
        core[mod] = versionIncluded(data[mod]);
    ***REMOVED***
***REMOVED***
module.exports = core;
