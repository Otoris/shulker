var test = require('tape');
var keys = require('object-keys');
var resolve = require('../');

test('core modules', function (t) ***REMOVED***
    t.test('isCore()', function (st) ***REMOVED***
        st.ok(resolve.isCore('fs'));
        st.ok(resolve.isCore('net'));
        st.ok(resolve.isCore('http'));

        st.ok(!resolve.isCore('seq'));
        st.ok(!resolve.isCore('../'));

        st.ok(!resolve.isCore('toString'));

        st.end();
    ***REMOVED***);

    t.test('core list', function (st) ***REMOVED***
        var cores = keys(resolve.core);
        st.plan(cores.length);

        for (var i = 0; i < cores.length; ++i) ***REMOVED***
            var mod = cores[i];
            if (resolve.core[mod]) ***REMOVED***
                st.doesNotThrow(
                    function () ***REMOVED*** require(mod); ***REMOVED***, // eslint-disable-line no-loop-func
                    mod + ' supported; requiring does not throw'
                );
            ***REMOVED*** else ***REMOVED***
                st.throws(
                    function () ***REMOVED*** require(mod); ***REMOVED***, // eslint-disable-line no-loop-func
                    mod + ' not supported; requiring throws'
                );
            ***REMOVED***
        ***REMOVED***

        st.end();
    ***REMOVED***);

    t.test('core via repl module', ***REMOVED*** skip: !resolve.core.repl ***REMOVED***, function (st) ***REMOVED***
        var libs = require('repl')._builtinLibs; // eslint-disable-line no-underscore-dangle
        if (!libs) ***REMOVED***
            st.skip('module.builtinModules does not exist');
            return st.end();
        ***REMOVED***
        for (var i = 0; i < libs.length; ++i) ***REMOVED***
            var mod = libs[i];
            st.ok(resolve.core[mod], mod + ' is a core module');
            st.doesNotThrow(
                function () ***REMOVED*** require(mod); ***REMOVED***, // eslint-disable-line no-loop-func
                'requiring ' + mod + ' does not throw'
            );
        ***REMOVED***
        st.end();
    ***REMOVED***);

    t.test('core via builtinModules list', ***REMOVED*** skip: !resolve.core.module ***REMOVED***, function (st) ***REMOVED***
        var libs = require('module').builtinModules;
        if (!libs) ***REMOVED***
            st.skip('module.builtinModules does not exist');
            return st.end();
        ***REMOVED***
        var blacklist = [
            '_debug_agent',
            'v8/tools/tickprocessor-driver',
            'v8/tools/SourceMap',
            'v8/tools/tickprocessor',
            'v8/tools/profile'
        ];
        for (var i = 0; i < libs.length; ++i) ***REMOVED***
            var mod = libs[i];
            if (blacklist.indexOf(mod) === -1) ***REMOVED***
                st.ok(resolve.core[mod], mod + ' is a core module');
                st.doesNotThrow(
                    function () ***REMOVED*** require(mod); ***REMOVED***, // eslint-disable-line no-loop-func
                    'requiring ' + mod + ' does not throw'
                );
            ***REMOVED***
        ***REMOVED***
        st.end();
    ***REMOVED***);

    t.end();
***REMOVED***);
