/**
 * @author Toru Nagashima <https://github.com/mysticatea>
 * See LICENSE file in root directory for full license.
 */
"use strict"

const ***REMOVED*** CALL, CONSTRUCT, READ ***REMOVED*** = require("eslint-utils")

/**
 * Enumerate property names of a given object recursively.
 * @param ***REMOVED***object***REMOVED*** trackMap The map for APIs to enumerate.
 * @param ***REMOVED***string[]|undefined***REMOVED*** path The path to the current map.
 * @returns ***REMOVED***IterableIterator<string>***REMOVED*** The property names of the map.
 */
function* enumeratePropertyNames(trackMap, path = []) ***REMOVED***
    for (const key of Object.keys(trackMap)) ***REMOVED***
        const value = trackMap[key]
        if (typeof value !== "object") ***REMOVED***
            continue
        ***REMOVED***

        path.push(key)

        if (value[CALL]) ***REMOVED***
            yield `$***REMOVED***path.join(".")***REMOVED***()`
        ***REMOVED***
        if (value[CONSTRUCT]) ***REMOVED***
            yield `new $***REMOVED***path.join(".")***REMOVED***()`
        ***REMOVED***
        if (value[READ]) ***REMOVED***
            yield path.join(".")
        ***REMOVED***
        yield* enumeratePropertyNames(value, path)

        path.pop()
    ***REMOVED***
***REMOVED***

module.exports = enumeratePropertyNames
