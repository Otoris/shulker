/**
 * @author Toru Nagashima
 * See LICENSE file in root directory for full license.
 */
"use strict"

const ***REMOVED*** CALL, ReferenceTracker ***REMOVED*** = require("eslint-utils")

const trackMap = ***REMOVED***
    fs: ***REMOVED***
        access: ***REMOVED*** [CALL]: true ***REMOVED***,
        copyFile: ***REMOVED*** [CALL]: true ***REMOVED***,
        open: ***REMOVED*** [CALL]: true ***REMOVED***,
        rename: ***REMOVED*** [CALL]: true ***REMOVED***,
        truncate: ***REMOVED*** [CALL]: true ***REMOVED***,
        rmdir: ***REMOVED*** [CALL]: true ***REMOVED***,
        mkdir: ***REMOVED*** [CALL]: true ***REMOVED***,
        readdir: ***REMOVED*** [CALL]: true ***REMOVED***,
        readlink: ***REMOVED*** [CALL]: true ***REMOVED***,
        symlink: ***REMOVED*** [CALL]: true ***REMOVED***,
        lstat: ***REMOVED*** [CALL]: true ***REMOVED***,
        stat: ***REMOVED*** [CALL]: true ***REMOVED***,
        link: ***REMOVED*** [CALL]: true ***REMOVED***,
        unlink: ***REMOVED*** [CALL]: true ***REMOVED***,
        chmod: ***REMOVED*** [CALL]: true ***REMOVED***,
        lchmod: ***REMOVED*** [CALL]: true ***REMOVED***,
        lchown: ***REMOVED*** [CALL]: true ***REMOVED***,
        chown: ***REMOVED*** [CALL]: true ***REMOVED***,
        utimes: ***REMOVED*** [CALL]: true ***REMOVED***,
        realpath: ***REMOVED*** [CALL]: true ***REMOVED***,
        mkdtemp: ***REMOVED*** [CALL]: true ***REMOVED***,
        writeFile: ***REMOVED*** [CALL]: true ***REMOVED***,
        appendFile: ***REMOVED*** [CALL]: true ***REMOVED***,
        readFile: ***REMOVED*** [CALL]: true ***REMOVED***,
    ***REMOVED***,
***REMOVED***

module.exports = ***REMOVED***
    meta: ***REMOVED***
        docs: ***REMOVED***
            description: 'enforce `require("fs").promises`',
            category: "Stylistic Issues",
            recommended: false,
            url:
                "https://github.com/mysticatea/eslint-plugin-node/blob/v10.0.0/docs/rules/prefer-promises/fs.md",
        ***REMOVED***,
        fixable: null,
        messages: ***REMOVED***
            preferPromises: "Use 'fs.promises.***REMOVED******REMOVED***name***REMOVED******REMOVED***()' instead.",
        ***REMOVED***,
        schema: [],
        type: "suggestion",
    ***REMOVED***,

    create(context) ***REMOVED***
        return ***REMOVED***
            "Program:exit"() ***REMOVED***
                const scope = context.getScope()
                const tracker = new ReferenceTracker(scope, ***REMOVED*** mode: "legacy" ***REMOVED***)
                const references = [
                    ...tracker.iterateCjsReferences(trackMap),
                    ...tracker.iterateEsmReferences(trackMap),
                ]

                for (const ***REMOVED*** node, path ***REMOVED*** of references) ***REMOVED***
                    const name = path[path.length - 1]
                    context.report(***REMOVED***
                        node,
                        messageId: "preferPromises",
                        data: ***REMOVED*** name ***REMOVED***,
                    ***REMOVED***)
                ***REMOVED***
            ***REMOVED***,
        ***REMOVED***
    ***REMOVED***,
***REMOVED***
