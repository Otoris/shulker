/**
 * @author Toru Nagashima
 * See LICENSE file in root directory for full license.
 */
"use strict"

const ***REMOVED*** CALL, CONSTRUCT, READ, ReferenceTracker ***REMOVED*** = require("eslint-utils")
const enumeratePropertyNames = require("../util/enumerate-property-names")
const getConfiguredNodeVersion = require("../util/get-configured-node-version")
const getSemverRange = require("../util/get-semver-range")

const modules = ***REMOVED***
    _linklist: ***REMOVED***
        [READ]: ***REMOVED*** since: "5.0.0", replacedBy: null ***REMOVED***,
    ***REMOVED***,
    //eslint-disable-next-line camelcase
    _stream_wrap: ***REMOVED***
        [READ]: ***REMOVED*** since: "12.0.0", replacedBy: null ***REMOVED***,
    ***REMOVED***,
    assert: ***REMOVED***
        deepEqual: ***REMOVED***
            [READ]: ***REMOVED***
                since: "10.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'assert.deepStrictEqual'", supported: "1.2.0" ***REMOVED***,
                    ***REMOVED*** name: "'assert.strict.deepEqual'", supported: "9.9.0" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        equal: ***REMOVED***
            [READ]: ***REMOVED***
                since: "10.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'assert.strictEqual'", supported: "0.1.21" ***REMOVED***,
                    ***REMOVED*** name: "'assert.strict.equal'", supported: "9.9.0" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        notDeepEqual: ***REMOVED***
            [READ]: ***REMOVED***
                since: "10.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'assert.notDeepStrictEqual'", supported: "1.2.0" ***REMOVED***,
                    ***REMOVED***
                        name: "'assert.strict.notDeepEqual'",
                        supported: "9.9.0",
                    ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        notEqual: ***REMOVED***
            [READ]: ***REMOVED***
                since: "10.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'assert.notStrictEqual'", supported: "0.1.21" ***REMOVED***,
                    ***REMOVED*** name: "'assert.strict.notEqual'", supported: "9.9.0" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    //eslint-disable-next-line camelcase
    async_hooks: ***REMOVED***
        currentId: ***REMOVED***
            [READ]: ***REMOVED***
                since: "8.2.0",
                replacedBy: [
                    ***REMOVED***
                        name: "'async_hooks.executionAsyncId()'",
                        supported: "8.1.0",
                    ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        triggerId: ***REMOVED***
            [READ]: ***REMOVED***
                since: "8.2.0",
                replacedBy: "'async_hooks.triggerAsyncId()'",
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    buffer: ***REMOVED***
        Buffer: ***REMOVED***
            [CONSTRUCT]: ***REMOVED***
                since: "6.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'buffer.Buffer.alloc()'", supported: "5.10.0" ***REMOVED***,
                    ***REMOVED*** name: "'buffer.Buffer.from()'", supported: "5.10.0" ***REMOVED***,
                ],
            ***REMOVED***,
            [CALL]: ***REMOVED***
                since: "6.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'buffer.Buffer.alloc()'", supported: "5.10.0" ***REMOVED***,
                    ***REMOVED*** name: "'buffer.Buffer.from()'", supported: "5.10.0" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        SlowBuffer: ***REMOVED***
            [READ]: ***REMOVED***
                since: "6.0.0",
                replacedBy: [
                    ***REMOVED***
                        name: "'buffer.Buffer.allocUnsafeSlow()'",
                        supported: "5.12.0",
                    ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    constants: ***REMOVED***
        [READ]: ***REMOVED***
            since: "6.3.0",
            replacedBy: "'constants' property of each module",
        ***REMOVED***,
    ***REMOVED***,
    crypto: ***REMOVED***
        _toBuf: ***REMOVED***
            [READ]: ***REMOVED*** since: "11.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        Credentials: ***REMOVED***
            [READ]: ***REMOVED*** since: "0.12.0", replacedBy: "'tls.SecureContext'" ***REMOVED***,
        ***REMOVED***,
        DEFAULT_ENCODING: ***REMOVED***
            [READ]: ***REMOVED*** since: "10.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        createCipher: ***REMOVED***
            [READ]: ***REMOVED***
                since: "10.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'crypto.createCipheriv()'", supported: "0.1.94" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        createCredentials: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.12.0",
                replacedBy: [
                    ***REMOVED***
                        name: "'tls.createSecureContext()'",
                        supported: "0.11.13",
                    ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        createDecipher: ***REMOVED***
            [READ]: ***REMOVED***
                since: "10.0.0",
                replacedBy: [
                    ***REMOVED***
                        name: "'crypto.createDecipheriv()'",
                        supported: "0.1.94",
                    ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        fips: ***REMOVED***
            [READ]: ***REMOVED***
                since: "10.0.0",
                replacedBy: [
                    ***REMOVED***
                        name: "'crypto.getFips()' and 'crypto.setFips()'",
                        supported: "10.0.0",
                    ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        prng: ***REMOVED***
            [READ]: ***REMOVED***
                since: "11.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'crypto.randomBytes()'", supported: "0.5.8" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        pseudoRandomBytes: ***REMOVED***
            [READ]: ***REMOVED***
                since: "11.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'crypto.randomBytes()'", supported: "0.5.8" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        rng: ***REMOVED***
            [READ]: ***REMOVED***
                since: "11.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'crypto.randomBytes()'", supported: "0.5.8" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    domain: ***REMOVED***
        [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
    ***REMOVED***,
    events: ***REMOVED***
        EventEmitter: ***REMOVED***
            listenerCount: ***REMOVED***
                [READ]: ***REMOVED***
                    since: "4.0.0",
                    replacedBy: [
                        ***REMOVED***
                            name: "'events.EventEmitter#listenerCount()'",
                            supported: "3.2.0",
                        ***REMOVED***,
                    ],
                ***REMOVED***,
            ***REMOVED***,
        ***REMOVED***,
        listenerCount: ***REMOVED***
            [READ]: ***REMOVED***
                since: "4.0.0",
                replacedBy: [
                    ***REMOVED***
                        name: "'events.EventEmitter#listenerCount()'",
                        supported: "3.2.0",
                    ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    freelist: ***REMOVED***
        [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
    ***REMOVED***,
    fs: ***REMOVED***
        SyncWriteStream: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        exists: ***REMOVED***
            [READ]: ***REMOVED***
                since: "4.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'fs.stat()'", supported: "0.0.2" ***REMOVED***,
                    ***REMOVED*** name: "'fs.access()'", supported: "0.11.15" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        lchmod: ***REMOVED***
            [READ]: ***REMOVED*** since: "0.4.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        lchmodSync: ***REMOVED***
            [READ]: ***REMOVED*** since: "0.4.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        lchown: ***REMOVED***
            [READ]: ***REMOVED*** since: "0.4.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        lchownSync: ***REMOVED***
            [READ]: ***REMOVED*** since: "0.4.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    http: ***REMOVED***
        createClient: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.10.0",
                replacedBy: [***REMOVED*** name: "'http.request()'", supported: "0.3.6" ***REMOVED***],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    module: ***REMOVED***
        Module: ***REMOVED***
            createRequireFromPath: ***REMOVED***
                [READ]: ***REMOVED***
                    since: "12.2.0",
                    replacedBy: [
                        ***REMOVED***
                            name: "'module.createRequire()'",
                            supported: "12.2.0",
                        ***REMOVED***,
                    ],
                ***REMOVED***,
            ***REMOVED***,
            requireRepl: ***REMOVED***
                [READ]: ***REMOVED***
                    since: "6.0.0",
                    replacedBy: "'require(\"repl\")'",
                ***REMOVED***,
            ***REMOVED***,
            _debug: ***REMOVED***
                [READ]: ***REMOVED*** since: "9.0.0", replacedBy: null ***REMOVED***,
            ***REMOVED***,
        ***REMOVED***,
        createRequireFromPath: ***REMOVED***
            [READ]: ***REMOVED***
                since: "12.2.0",
                replacedBy: [
                    ***REMOVED***
                        name: "'module.createRequire()'",
                        supported: "12.2.0",
                    ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        requireRepl: ***REMOVED***
            [READ]: ***REMOVED***
                since: "6.0.0",
                replacedBy: "'require(\"repl\")'",
            ***REMOVED***,
        ***REMOVED***,
        _debug: ***REMOVED***
            [READ]: ***REMOVED*** since: "9.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    net: ***REMOVED***
        _setSimultaneousAccepts: ***REMOVED***
            [READ]: ***REMOVED*** since: "12.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    os: ***REMOVED***
        getNetworkInterfaces: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.6.0",
                replacedBy: [
                    ***REMOVED*** name: "'os.networkInterfaces()'", supported: "0.6.0" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        tmpDir: ***REMOVED***
            [READ]: ***REMOVED***
                since: "7.0.0",
                replacedBy: [***REMOVED*** name: "'os.tmpdir()'", supported: "0.9.9" ***REMOVED***],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    path: ***REMOVED***
        _makeLong: ***REMOVED***
            [READ]: ***REMOVED***
                since: "9.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'path.toNamespacedPath()'", supported: "9.0.0" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    process: ***REMOVED***
        EventEmitter: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.6.0",
                replacedBy: "'require(\"events\")'",
            ***REMOVED***,
        ***REMOVED***,
        assert: ***REMOVED***
            [READ]: ***REMOVED***
                since: "10.0.0",
                replacedBy: "'require(\"assert\")'",
            ***REMOVED***,
        ***REMOVED***,
        binding: ***REMOVED***
            [READ]: ***REMOVED*** since: "10.9.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        env: ***REMOVED***
            NODE_REPL_HISTORY_FILE: ***REMOVED***
                [READ]: ***REMOVED***
                    since: "4.0.0",
                    replacedBy: "'NODE_REPL_HISTORY'",
                ***REMOVED***,
            ***REMOVED***,
        ***REMOVED***,
        report: ***REMOVED***
            triggerReport: ***REMOVED***
                [READ]: ***REMOVED***
                    since: "11.12.0",
                    replacedBy: "'process.report.writeReport()'",
                ***REMOVED***,
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    punycode: ***REMOVED***
        [READ]: ***REMOVED***
            since: "7.0.0",
            replacedBy: "'https://www.npmjs.com/package/punycode'",
        ***REMOVED***,
    ***REMOVED***,
    readline: ***REMOVED***
        codePointAt: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        getStringWidth: ***REMOVED***
            [READ]: ***REMOVED*** since: "6.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isFullWidthCodePoint: ***REMOVED***
            [READ]: ***REMOVED*** since: "6.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        stripVTControlCharacters: ***REMOVED***
            [READ]: ***REMOVED*** since: "6.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    // safe-buffer.Buffer function/constructror is just a re-export of buffer.Buffer
    // and should be deprecated likewise.
    "safe-buffer": ***REMOVED***
        Buffer: ***REMOVED***
            [CONSTRUCT]: ***REMOVED***
                since: "6.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'buffer.Buffer.alloc()'", supported: "5.10.0" ***REMOVED***,
                    ***REMOVED*** name: "'buffer.Buffer.from()'", supported: "5.10.0" ***REMOVED***,
                ],
            ***REMOVED***,
            [CALL]: ***REMOVED***
                since: "6.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'buffer.Buffer.alloc()'", supported: "5.10.0" ***REMOVED***,
                    ***REMOVED*** name: "'buffer.Buffer.from()'", supported: "5.10.0" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        SlowBuffer: ***REMOVED***
            [READ]: ***REMOVED***
                since: "6.0.0",
                replacedBy: [
                    ***REMOVED***
                        name: "'buffer.Buffer.allocUnsafeSlow()'",
                        supported: "5.12.0",
                    ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    sys: ***REMOVED***
        [READ]: ***REMOVED***
            since: "0.3.0",
            replacedBy: "'util' module",
        ***REMOVED***,
    ***REMOVED***,
    timers: ***REMOVED***
        enroll: ***REMOVED***
            [READ]: ***REMOVED***
                since: "10.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'setTimeout()'", supported: "0.0.1" ***REMOVED***,
                    ***REMOVED*** name: "'setInterval()'", supported: "0.0.1" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        unenroll: ***REMOVED***
            [READ]: ***REMOVED***
                since: "10.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'clearTimeout()'", supported: "0.0.1" ***REMOVED***,
                    ***REMOVED*** name: "'clearInterval()'", supported: "0.0.1" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    tls: ***REMOVED***
        CleartextStream: ***REMOVED***
            [READ]: ***REMOVED*** since: "0.10.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        CryptoStream: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.12.0",
                replacedBy: [***REMOVED*** name: "'tls.TLSSocket'", supported: "0.11.4" ***REMOVED***],
            ***REMOVED***,
        ***REMOVED***,
        SecurePair: ***REMOVED***
            [READ]: ***REMOVED***
                since: "6.0.0",
                replacedBy: [***REMOVED*** name: "'tls.TLSSocket'", supported: "0.11.4" ***REMOVED***],
            ***REMOVED***,
        ***REMOVED***,
        convertNPNProtocols: ***REMOVED***
            [READ]: ***REMOVED*** since: "10.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        createSecurePair: ***REMOVED***
            [READ]: ***REMOVED***
                since: "6.0.0",
                replacedBy: [***REMOVED*** name: "'tls.TLSSocket'", supported: "0.11.4" ***REMOVED***],
            ***REMOVED***,
        ***REMOVED***,
        parseCertString: ***REMOVED***
            [READ]: ***REMOVED***
                since: "8.6.0",
                replacedBy: [
                    ***REMOVED*** name: "'querystring.parse()'", supported: "0.1.25" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    tty: ***REMOVED***
        setRawMode: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.10.0",
                replacedBy:
                    "'tty.ReadStream#setRawMode()' (e.g. 'process.stdin.setRawMode()')",
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    url: ***REMOVED***
        parse: ***REMOVED***
            [READ]: ***REMOVED***
                since: "11.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'url.URL' constructor", supported: "6.13.0" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        resolve: ***REMOVED***
            [READ]: ***REMOVED***
                since: "11.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'url.URL' constructor", supported: "6.13.0" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    util: ***REMOVED***
        debug: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.12.0",
                replacedBy: [
                    ***REMOVED*** name: "'console.error()'", supported: "0.1.100" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        error: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.12.0",
                replacedBy: [
                    ***REMOVED*** name: "'console.error()'", supported: "0.1.100" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        isArray: ***REMOVED***
            [READ]: ***REMOVED***
                since: "4.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'Array.isArray()'", supported: "0.1.100" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        isBoolean: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isBuffer: ***REMOVED***
            [READ]: ***REMOVED***
                since: "4.0.0",
                replacedBy: [
                    ***REMOVED*** name: "'Buffer.isBuffer()'", supported: "0.1.101" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        isDate: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isError: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isFunction: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isNull: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isNullOrUndefined: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isNumber: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isObject: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isPrimitive: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isRegExp: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isString: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isSymbol: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        isUndefined: ***REMOVED***
            [READ]: ***REMOVED*** since: "4.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
        log: ***REMOVED***
            [READ]: ***REMOVED*** since: "6.0.0", replacedBy: "a third party module" ***REMOVED***,
        ***REMOVED***,
        print: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.12.0",
                replacedBy: [***REMOVED*** name: "'console.log()'", supported: "0.1.100" ***REMOVED***],
            ***REMOVED***,
        ***REMOVED***,
        pump: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.10.0",
                replacedBy: [
                    ***REMOVED*** name: "'stream.Readable#pipe()'", supported: "0.9.4" ***REMOVED***,
                ],
            ***REMOVED***,
        ***REMOVED***,
        puts: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.12.0",
                replacedBy: [***REMOVED*** name: "'console.log()'", supported: "0.1.100" ***REMOVED***],
            ***REMOVED***,
        ***REMOVED***,
        _extend: ***REMOVED***
            [READ]: ***REMOVED***
                since: "6.0.0",
                replacedBy: [***REMOVED*** name: "'Object.assign()'", supported: "4.0.0" ***REMOVED***],
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    vm: ***REMOVED***
        runInDebugContext: ***REMOVED***
            [READ]: ***REMOVED*** since: "8.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
***REMOVED***
const globals = ***REMOVED***
    Buffer: ***REMOVED***
        [CONSTRUCT]: ***REMOVED***
            since: "6.0.0",
            replacedBy: [
                ***REMOVED*** name: "'Buffer.alloc()'", supported: "5.10.0" ***REMOVED***,
                ***REMOVED*** name: "'Buffer.from()'", supported: "5.10.0" ***REMOVED***,
            ],
        ***REMOVED***,
        [CALL]: ***REMOVED***
            since: "6.0.0",
            replacedBy: [
                ***REMOVED*** name: "'Buffer.alloc()'", supported: "5.10.0" ***REMOVED***,
                ***REMOVED*** name: "'Buffer.from()'", supported: "5.10.0" ***REMOVED***,
            ],
        ***REMOVED***,
    ***REMOVED***,
    COUNTER_NET_SERVER_CONNECTION: ***REMOVED***
        [READ]: ***REMOVED*** since: "11.0.0", replacedBy: null ***REMOVED***,
    ***REMOVED***,
    COUNTER_NET_SERVER_CONNECTION_CLOSE: ***REMOVED***
        [READ]: ***REMOVED*** since: "11.0.0", replacedBy: null ***REMOVED***,
    ***REMOVED***,
    COUNTER_HTTP_SERVER_REQUEST: ***REMOVED***
        [READ]: ***REMOVED*** since: "11.0.0", replacedBy: null ***REMOVED***,
    ***REMOVED***,
    COUNTER_HTTP_SERVER_RESPONSE: ***REMOVED***
        [READ]: ***REMOVED*** since: "11.0.0", replacedBy: null ***REMOVED***,
    ***REMOVED***,
    COUNTER_HTTP_CLIENT_REQUEST: ***REMOVED***
        [READ]: ***REMOVED*** since: "11.0.0", replacedBy: null ***REMOVED***,
    ***REMOVED***,
    COUNTER_HTTP_CLIENT_RESPONSE: ***REMOVED***
        [READ]: ***REMOVED*** since: "11.0.0", replacedBy: null ***REMOVED***,
    ***REMOVED***,
    GLOBAL: ***REMOVED***
        [READ]: ***REMOVED***
            since: "6.0.0",
            replacedBy: [***REMOVED*** name: "'global'", supported: "0.1.27" ***REMOVED***],
        ***REMOVED***,
    ***REMOVED***,
    Intl: ***REMOVED***
        v8BreakIterator: ***REMOVED***
            [READ]: ***REMOVED*** since: "7.0.0", replacedBy: null ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    require: ***REMOVED***
        extensions: ***REMOVED***
            [READ]: ***REMOVED***
                since: "0.12.0",
                replacedBy: "compiling them ahead of time",
            ***REMOVED***,
        ***REMOVED***,
    ***REMOVED***,
    root: ***REMOVED***
        [READ]: ***REMOVED***
            since: "6.0.0",
            replacedBy: [***REMOVED*** name: "'global'", supported: "0.1.27" ***REMOVED***],
        ***REMOVED***,
    ***REMOVED***,
    process: modules.process,
***REMOVED***

/**
 * Makes a replacement message.
 *
 * @param ***REMOVED***string|array|null***REMOVED*** replacedBy - The text of substitute way.
 * @param ***REMOVED***Range***REMOVED*** version - The configured version range
 * @returns ***REMOVED***string***REMOVED*** Replacement message.
 */
function toReplaceMessage(replacedBy, version) ***REMOVED***
    let message = replacedBy

    if (Array.isArray(replacedBy)) ***REMOVED***
        message = replacedBy
            .filter(
                (***REMOVED*** supported ***REMOVED***) =>
                    !version.intersects(getSemverRange(`<$***REMOVED***supported***REMOVED***`))
            )
            .map((***REMOVED*** name ***REMOVED***) => name)
            .join(" or ")
    ***REMOVED***

    return message ? `. Use $***REMOVED***message***REMOVED*** instead` : ""
***REMOVED***

/**
 * Convert a given path to name.
 * @param ***REMOVED***symbol***REMOVED*** type The report type.
 * @param ***REMOVED***string[]***REMOVED*** path The property access path.
 * @returns ***REMOVED***string***REMOVED*** The name.
 */
function toName(type, path) ***REMOVED***
    const baseName = path.join(".")
    return type === ReferenceTracker.CALL
        ? `$***REMOVED***baseName***REMOVED***()`
        : type === ReferenceTracker.CONSTRUCT
            ? `new $***REMOVED***baseName***REMOVED***()`
            : baseName
***REMOVED***

/**
 * Parses the options.
 * @param ***REMOVED***RuleContext***REMOVED*** context The rule context.
 * @returns ***REMOVED******REMOVED***version:Range,ignoredGlobalItems:Set<string>,ignoredModuleItems:Set<string>***REMOVED******REMOVED*** Parsed
 *     value.
 */
function parseOptions(context) ***REMOVED***
    const raw = context.options[0] || ***REMOVED******REMOVED***
    const filePath = context.getFilename()
    const version = getConfiguredNodeVersion(raw.version, filePath)
    const ignoredModuleItems = new Set(raw.ignoreModuleItems || [])
    const ignoredGlobalItems = new Set(raw.ignoreGlobalItems || [])

    return Object.freeze(***REMOVED*** version, ignoredGlobalItems, ignoredModuleItems ***REMOVED***)
***REMOVED***

module.exports = ***REMOVED***
    meta: ***REMOVED***
        docs: ***REMOVED***
            description: "disallow deprecated APIs",
            category: "Best Practices",
            recommended: true,
            url:
                "https://github.com/mysticatea/eslint-plugin-node/blob/v10.0.0/docs/rules/no-deprecated-api.md",
        ***REMOVED***,
        type: "problem",
        fixable: null,
        schema: [
            ***REMOVED***
                type: "object",
                properties: ***REMOVED***
                    version: ***REMOVED***
                        type: "string",
                    ***REMOVED***,
                    ignoreModuleItems: ***REMOVED***
                        type: "array",
                        items: ***REMOVED***
                            enum: Array.from(enumeratePropertyNames(modules)),
                        ***REMOVED***,
                        additionalItems: false,
                        uniqueItems: true,
                    ***REMOVED***,
                    ignoreGlobalItems: ***REMOVED***
                        type: "array",
                        items: ***REMOVED***
                            enum: Array.from(enumeratePropertyNames(globals)),
                        ***REMOVED***,
                        additionalItems: false,
                        uniqueItems: true,
                    ***REMOVED***,

                    // Deprecated since v4.2.0
                    ignoreIndirectDependencies: ***REMOVED*** type: "boolean" ***REMOVED***,
                ***REMOVED***,
                additionalProperties: false,
            ***REMOVED***,
        ],
    ***REMOVED***,
    create(context) ***REMOVED***
        const ***REMOVED***
            ignoredModuleItems,
            ignoredGlobalItems,
            version,
        ***REMOVED*** = parseOptions(context)

        /**
         * Reports a use of a deprecated API.
         *
         * @param ***REMOVED***ASTNode***REMOVED*** node - A node to report.
         * @param ***REMOVED***string***REMOVED*** name - The name of a deprecated API.
         * @param ***REMOVED******REMOVED***since: number, replacedBy: string***REMOVED******REMOVED*** info - Information of the API.
         * @returns ***REMOVED***void***REMOVED***
         */
        function reportItem(node, name, info) ***REMOVED***
            context.report(***REMOVED***
                node,
                loc: node.loc,
                message:
                    "***REMOVED******REMOVED***name***REMOVED******REMOVED*** was deprecated since v***REMOVED******REMOVED***version***REMOVED******REMOVED******REMOVED******REMOVED***replace***REMOVED******REMOVED***.",
                data: ***REMOVED***
                    name,
                    version: info.since,
                    replace: toReplaceMessage(info.replacedBy, version),
                ***REMOVED***,
            ***REMOVED***)
        ***REMOVED***

        return ***REMOVED***
            "Program:exit"() ***REMOVED***
                const tracker = new ReferenceTracker(context.getScope(), ***REMOVED***
                    mode: "legacy",
                ***REMOVED***)

                for (const report of tracker.iterateGlobalReferences(globals)) ***REMOVED***
                    const ***REMOVED*** node, path, type, info ***REMOVED*** = report
                    const name = toName(type, path)

                    if (!ignoredGlobalItems.has(name)) ***REMOVED***
                        reportItem(node, `'$***REMOVED***name***REMOVED***'`, info)
                    ***REMOVED***
                ***REMOVED***
                for (const report of [
                    ...tracker.iterateCjsReferences(modules),
                    ...tracker.iterateEsmReferences(modules),
                ]) ***REMOVED***
                    const ***REMOVED*** node, path, type, info ***REMOVED*** = report
                    const name = toName(type, path)
                    const suffix = path.length === 1 ? " module" : ""

                    if (!ignoredModuleItems.has(name)) ***REMOVED***
                        reportItem(node, `'$***REMOVED***name***REMOVED***'$***REMOVED***suffix***REMOVED***`, info)
                    ***REMOVED***
                ***REMOVED***
            ***REMOVED***,
        ***REMOVED***
    ***REMOVED***,
***REMOVED***
