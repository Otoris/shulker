/**
 * @author Toru Nagashima
 * See LICENSE file in root directory for full license.
 */
"use strict"

const path = require("path")
const getConvertPath = require("../util/get-convert-path")
const getNpmignore = require("../util/get-npmignore")
const getPackageJson = require("../util/get-package-json")

/**
 * Checks whether or not a given path is a `bin` file.
 *
 * @param ***REMOVED***string***REMOVED*** filePath - A file path to check.
 * @param ***REMOVED***string|object|undefined***REMOVED*** binField - A value of the `bin` field of `package.json`.
 * @param ***REMOVED***string***REMOVED*** basedir - A directory path that `package.json` exists.
 * @returns ***REMOVED***boolean***REMOVED*** `true` if the file is a `bin` file.
 */
function isBinFile(filePath, binField, basedir) ***REMOVED***
    if (!binField) ***REMOVED***
        return false
    ***REMOVED***
    if (typeof binField === "string") ***REMOVED***
        return filePath === path.resolve(basedir, binField)
    ***REMOVED***
    return Object.keys(binField).some(
        key => filePath === path.resolve(basedir, binField[key])
    )
***REMOVED***

module.exports = ***REMOVED***
    meta: ***REMOVED***
        docs: ***REMOVED***
            description: "disallow `bin` files that npm ignores",
            category: "Possible Errors",
            recommended: true,
            url:
                "https://github.com/mysticatea/eslint-plugin-node/blob/v10.0.0/docs/rules/no-unpublished-bin.md",
        ***REMOVED***,
        type: "problem",
        fixable: null,
        schema: [
            ***REMOVED***
                type: "object",
                properties: ***REMOVED***
                    //
                    convertPath: getConvertPath.schema,
                ***REMOVED***,
            ***REMOVED***,
        ],
    ***REMOVED***,
    create(context) ***REMOVED***
        return ***REMOVED***
            Program(node) ***REMOVED***
                // Check file path.
                let rawFilePath = context.getFilename()
                if (rawFilePath === "<input>") ***REMOVED***
                    return
                ***REMOVED***
                rawFilePath = path.resolve(rawFilePath)

                // Find package.json
                const p = getPackageJson(rawFilePath)
                if (!p) ***REMOVED***
                    return
                ***REMOVED***

                // Convert by convertPath option
                const basedir = path.dirname(p.filePath)
                const relativePath = getConvertPath(context)(
                    path.relative(basedir, rawFilePath).replace(/\\/gu, "/")
                )
                const filePath = path.join(basedir, relativePath)

                // Check this file is bin.
                if (!isBinFile(filePath, p.bin, basedir)) ***REMOVED***
                    return
                ***REMOVED***

                // Check ignored or not
                const npmignore = getNpmignore(filePath)
                if (!npmignore.match(relativePath)) ***REMOVED***
                    return
                ***REMOVED***

                // Report.
                context.report(***REMOVED***
                    node,
                    message:
                        "npm ignores '***REMOVED******REMOVED***name***REMOVED******REMOVED***'. Check 'files' field of 'package.json' or '.npmignore'.",
                    data: ***REMOVED*** name: relativePath ***REMOVED***,
                ***REMOVED***)
            ***REMOVED***,
        ***REMOVED***
    ***REMOVED***,
***REMOVED***
