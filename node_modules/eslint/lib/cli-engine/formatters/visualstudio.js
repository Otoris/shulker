/**
 * @fileoverview Visual Studio compatible formatter
 * @author Ronald Pijnacker
 */

"use strict";

//------------------------------------------------------------------------------
// Helper Functions
//------------------------------------------------------------------------------

/**
 * Returns the severity of warning or error
 * @param ***REMOVED***Object***REMOVED*** message message object to examine
 * @returns ***REMOVED***string***REMOVED*** severity level
 * @private
 */
function getMessageType(message) ***REMOVED***
    if (message.fatal || message.severity === 2) ***REMOVED***
        return "error";
    ***REMOVED***
    return "warning";

***REMOVED***


//------------------------------------------------------------------------------
// Public Interface
//------------------------------------------------------------------------------

module.exports = function(results) ***REMOVED***

    let output = "",
        total = 0;

    results.forEach(result => ***REMOVED***

        const messages = result.messages;

        total += messages.length;

        messages.forEach(message => ***REMOVED***

            output += result.filePath;
            output += `($***REMOVED***message.line || 0***REMOVED***`;
            output += message.column ? `,$***REMOVED***message.column***REMOVED***` : "";
            output += `): $***REMOVED***getMessageType(message)***REMOVED***`;
            output += message.ruleId ? ` $***REMOVED***message.ruleId***REMOVED***` : "";
            output += ` : $***REMOVED***message.message***REMOVED***`;
            output += "\n";

        ***REMOVED***);

    ***REMOVED***);

    if (total === 0) ***REMOVED***
        output += "no problems";
    ***REMOVED*** else ***REMOVED***
        output += `\n$***REMOVED***total***REMOVED*** problem$***REMOVED***total !== 1 ? "s" : ""***REMOVED***`;
    ***REMOVED***

    return output;
***REMOVED***;
