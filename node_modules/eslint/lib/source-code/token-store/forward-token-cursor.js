/**
 * @fileoverview Define the cursor which iterates tokens only.
 * @author Toru Nagashima
 */
"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const Cursor = require("./cursor");
const utils = require("./utils");

//------------------------------------------------------------------------------
// Exports
//------------------------------------------------------------------------------

/**
 * The cursor which iterates tokens only.
 */
module.exports = class ForwardTokenCursor extends Cursor ***REMOVED***

    /**
     * Initializes this cursor.
     * @param ***REMOVED***Token[]***REMOVED*** tokens - The array of tokens.
     * @param ***REMOVED***Comment[]***REMOVED*** comments - The array of comments.
     * @param ***REMOVED***Object***REMOVED*** indexMap - The map from locations to indices in `tokens`.
     * @param ***REMOVED***number***REMOVED*** startLoc - The start location of the iteration range.
     * @param ***REMOVED***number***REMOVED*** endLoc - The end location of the iteration range.
     */
    constructor(tokens, comments, indexMap, startLoc, endLoc) ***REMOVED***
        super();
        this.tokens = tokens;
        this.index = utils.getFirstIndex(tokens, indexMap, startLoc);
        this.indexEnd = utils.getLastIndex(tokens, indexMap, endLoc);
    ***REMOVED***

    /** @inheritdoc */
    moveNext() ***REMOVED***
        if (this.index <= this.indexEnd) ***REMOVED***
            this.current = this.tokens[this.index];
            this.index += 1;
            return true;
        ***REMOVED***
        return false;
    ***REMOVED***

    /*
     *
     * Shorthand for performance.
     *
     */

    /** @inheritdoc */
    getOneToken() ***REMOVED***
        return (this.index <= this.indexEnd) ? this.tokens[this.index] : null;
    ***REMOVED***

    /** @inheritdoc */
    getAllTokens() ***REMOVED***
        return this.tokens.slice(this.index, this.indexEnd + 1);
    ***REMOVED***
***REMOVED***;
