/**
 * @fileoverview A rule to warn against using arrow functions when they could be
 * confused with comparisions
 * @author Jxck <https://github.com/Jxck>
 */

"use strict";

const astUtils = require("./utils/ast-utils.js");

//------------------------------------------------------------------------------
// Helpers
//------------------------------------------------------------------------------

/**
 * Checks whether or not a node is a conditional expression.
 * @param ***REMOVED***ASTNode***REMOVED*** node - node to test
 * @returns ***REMOVED***boolean***REMOVED*** `true` if the node is a conditional expression.
 */
function isConditional(node) ***REMOVED***
    return node && node.type === "ConditionalExpression";
***REMOVED***

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "suggestion",

        docs: ***REMOVED***
            description: "disallow arrow functions where they could be confused with comparisons",
            category: "ECMAScript 6",
            recommended: false,
            url: "https://eslint.org/docs/rules/no-confusing-arrow"
        ***REMOVED***,

        fixable: "code",

        schema: [***REMOVED***
            type: "object",
            properties: ***REMOVED***
                allowParens: ***REMOVED*** type: "boolean", default: true ***REMOVED***
            ***REMOVED***,
            additionalProperties: false
        ***REMOVED***],

        messages: ***REMOVED***
            confusing: "Arrow function used ambiguously with a conditional expression."
        ***REMOVED***
    ***REMOVED***,

    create(context) ***REMOVED***
        const config = context.options[0] || ***REMOVED******REMOVED***;
        const allowParens = config.allowParens || (config.allowParens === void 0);
        const sourceCode = context.getSourceCode();


        /**
         * Reports if an arrow function contains an ambiguous conditional.
         * @param ***REMOVED***ASTNode***REMOVED*** node - A node to check and report.
         * @returns ***REMOVED***void***REMOVED***
         */
        function checkArrowFunc(node) ***REMOVED***
            const body = node.body;

            if (isConditional(body) && !(allowParens && astUtils.isParenthesised(sourceCode, body))) ***REMOVED***
                context.report(***REMOVED***
                    node,
                    messageId: "confusing",
                    fix(fixer) ***REMOVED***

                        // if `allowParens` is not set to true dont bother wrapping in parens
                        return allowParens && fixer.replaceText(node.body, `($***REMOVED***sourceCode.getText(node.body)***REMOVED***)`);
                    ***REMOVED***
                ***REMOVED***);
            ***REMOVED***
        ***REMOVED***

        return ***REMOVED***
            ArrowFunctionExpression: checkArrowFunc
        ***REMOVED***;
    ***REMOVED***
***REMOVED***;
