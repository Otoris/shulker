/**
 * @fileoverview Rule to flag use of arguments.callee and arguments.caller.
 * @author Nicholas C. Zakas
 */

"use strict";

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "suggestion",

        docs: ***REMOVED***
            description: "disallow the use of `arguments.caller` or `arguments.callee`",
            category: "Best Practices",
            recommended: false,
            url: "https://eslint.org/docs/rules/no-caller"
        ***REMOVED***,

        schema: [],

        messages: ***REMOVED***
            unexpected: "Avoid arguments.***REMOVED******REMOVED***prop***REMOVED******REMOVED***."
        ***REMOVED***
    ***REMOVED***,

    create(context) ***REMOVED***

        return ***REMOVED***

            MemberExpression(node) ***REMOVED***
                const objectName = node.object.name,
                    propertyName = node.property.name;

                if (objectName === "arguments" && !node.computed && propertyName && propertyName.match(/^calle[er]$/u)) ***REMOVED***
                    context.report(***REMOVED*** node, messageId: "unexpected", data: ***REMOVED*** prop: propertyName ***REMOVED*** ***REMOVED***);
                ***REMOVED***

            ***REMOVED***
        ***REMOVED***;

    ***REMOVED***
***REMOVED***;
