/**
 * @fileoverview Rule to enforce the use of `u` flag on RegExp.
 * @author Toru Nagashima
 */

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const ***REMOVED***
    CALL,
    CONSTRUCT,
    ReferenceTracker,
    getStringIfConstant
***REMOVED*** = require("eslint-utils");

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "suggestion",

        docs: ***REMOVED***
            description: "enforce the use of `u` flag on RegExp",
            category: "Best Practices",
            recommended: false,
            url: "https://eslint.org/docs/rules/require-unicode-regexp"
        ***REMOVED***,

        messages: ***REMOVED***
            requireUFlag: "Use the 'u' flag."
        ***REMOVED***,

        schema: []
    ***REMOVED***,

    create(context) ***REMOVED***
        return ***REMOVED***
            "Literal[regex]"(node) ***REMOVED***
                const flags = node.regex.flags || "";

                if (!flags.includes("u")) ***REMOVED***
                    context.report(***REMOVED*** node, messageId: "requireUFlag" ***REMOVED***);
                ***REMOVED***
            ***REMOVED***,

            Program() ***REMOVED***
                const scope = context.getScope();
                const tracker = new ReferenceTracker(scope);
                const trackMap = ***REMOVED***
                    RegExp: ***REMOVED*** [CALL]: true, [CONSTRUCT]: true ***REMOVED***
                ***REMOVED***;

                for (const ***REMOVED*** node ***REMOVED*** of tracker.iterateGlobalReferences(trackMap)) ***REMOVED***
                    const flagsNode = node.arguments[1];
                    const flags = getStringIfConstant(flagsNode, scope);

                    if (!flagsNode || (typeof flags === "string" && !flags.includes("u"))) ***REMOVED***
                        context.report(***REMOVED*** node, messageId: "requireUFlag" ***REMOVED***);
                    ***REMOVED***
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***;
    ***REMOVED***
***REMOVED***;
