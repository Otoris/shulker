/**
 * @fileoverview Rule to flag use of an object property of the global object (Math and JSON) as a function
 * @author James Allardice
 */

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const ***REMOVED*** CALL, ReferenceTracker ***REMOVED*** = require("eslint-utils");

//------------------------------------------------------------------------------
// Helpers
//------------------------------------------------------------------------------

const nonCallableGlobals = ["Atomics", "JSON", "Math", "Reflect"];

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "problem",

        docs: ***REMOVED***
            description: "disallow calling global object properties as functions",
            category: "Possible Errors",
            recommended: true,
            url: "https://eslint.org/docs/rules/no-obj-calls"
        ***REMOVED***,

        schema: [],

        messages: ***REMOVED***
            unexpectedCall: "'***REMOVED******REMOVED***name***REMOVED******REMOVED***' is not a function."
        ***REMOVED***
    ***REMOVED***,

    create(context) ***REMOVED***

        return ***REMOVED***
            Program() ***REMOVED***
                const scope = context.getScope();
                const tracker = new ReferenceTracker(scope);
                const traceMap = ***REMOVED******REMOVED***;

                for (const global of nonCallableGlobals) ***REMOVED***
                    traceMap[global] = ***REMOVED***
                        [CALL]: true
                    ***REMOVED***;
                ***REMOVED***

                for (const ***REMOVED*** node ***REMOVED*** of tracker.iterateGlobalReferences(traceMap)) ***REMOVED***
                    context.report(***REMOVED*** node, messageId: "unexpectedCall", data: ***REMOVED*** name: node.callee.name ***REMOVED*** ***REMOVED***);
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***;
    ***REMOVED***
***REMOVED***;
