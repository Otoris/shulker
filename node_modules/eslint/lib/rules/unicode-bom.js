/**
 * @fileoverview Require or disallow Unicode BOM
 * @author Andrew Johnston <https://github.com/ehjay>
 */
"use strict";

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "layout",

        docs: ***REMOVED***
            description: "require or disallow Unicode byte order mark (BOM)",
            category: "Stylistic Issues",
            recommended: false,
            url: "https://eslint.org/docs/rules/unicode-bom"
        ***REMOVED***,

        fixable: "whitespace",

        schema: [
            ***REMOVED***
                enum: ["always", "never"]
            ***REMOVED***
        ],
        messages: ***REMOVED***
            expected: "Expected Unicode BOM (Byte Order Mark).",
            unexpected: "Unexpected Unicode BOM (Byte Order Mark)."
        ***REMOVED***
    ***REMOVED***,

    create(context) ***REMOVED***

        //--------------------------------------------------------------------------
        // Public
        //--------------------------------------------------------------------------

        return ***REMOVED***

            Program: function checkUnicodeBOM(node) ***REMOVED***

                const sourceCode = context.getSourceCode(),
                    location = ***REMOVED*** column: 0, line: 1 ***REMOVED***,
                    requireBOM = context.options[0] || "never";

                if (!sourceCode.hasBOM && (requireBOM === "always")) ***REMOVED***
                    context.report(***REMOVED***
                        node,
                        loc: location,
                        messageId: "expected",
                        fix(fixer) ***REMOVED***
                            return fixer.insertTextBeforeRange([0, 1], "\uFEFF");
                        ***REMOVED***
                    ***REMOVED***);
                ***REMOVED*** else if (sourceCode.hasBOM && (requireBOM === "never")) ***REMOVED***
                    context.report(***REMOVED***
                        node,
                        loc: location,
                        messageId: "unexpected",
                        fix(fixer) ***REMOVED***
                            return fixer.removeRange([-1, 0]);
                        ***REMOVED***
                    ***REMOVED***);
                ***REMOVED***
            ***REMOVED***

        ***REMOVED***;

    ***REMOVED***
***REMOVED***;
