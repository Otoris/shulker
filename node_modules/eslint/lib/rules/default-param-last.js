/**
 * @fileoverview enforce default parameters to be last
 * @author Chiawen Chen
 */

"use strict";

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "suggestion",

        docs: ***REMOVED***
            description: "enforce default parameters to be last",
            category: "Best Practices",
            recommended: false,
            url: "https://eslint.org/docs/rules/default-param-last"
        ***REMOVED***,

        schema: [],

        messages: ***REMOVED***
            shouldBeLast: "Default parameters should be last."
        ***REMOVED***
    ***REMOVED***,

    create(context) ***REMOVED***

        /**
         * @param ***REMOVED***ASTNode***REMOVED*** node function node
         * @returns ***REMOVED***void***REMOVED***
         */
        function handleFunction(node) ***REMOVED***
            let hasSeenPlainParam = false;

            for (let i = node.params.length - 1; i >= 0; i -= 1) ***REMOVED***
                const param = node.params[i];

                if (
                    param.type !== "AssignmentPattern" &&
                    param.type !== "RestElement"
                ) ***REMOVED***
                    hasSeenPlainParam = true;
                    continue;
                ***REMOVED***

                if (hasSeenPlainParam && param.type === "AssignmentPattern") ***REMOVED***
                    context.report(***REMOVED***
                        node: param,
                        messageId: "shouldBeLast"
                    ***REMOVED***);
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***

        return ***REMOVED***
            FunctionDeclaration: handleFunction,
            FunctionExpression: handleFunction,
            ArrowFunctionExpression: handleFunction
        ***REMOVED***;
    ***REMOVED***
***REMOVED***;
