/**
 * @fileoverview Rule to flag octal escape sequences in string literals.
 * @author Ian Christian Myers
 */

"use strict";

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "suggestion",

        docs: ***REMOVED***
            description: "disallow octal escape sequences in string literals",
            category: "Best Practices",
            recommended: false,
            url: "https://eslint.org/docs/rules/no-octal-escape"
        ***REMOVED***,

        schema: [],

        messages: ***REMOVED***
            octalEscapeSequence: "Don't use octal: '\\***REMOVED******REMOVED***sequence***REMOVED******REMOVED***'. Use '\\u....' instead."
        ***REMOVED***
    ***REMOVED***,

    create(context) ***REMOVED***

        return ***REMOVED***

            Literal(node) ***REMOVED***
                if (typeof node.value !== "string") ***REMOVED***
                    return;
                ***REMOVED***

                // \0 represents a valid NULL character if it isn't followed by a digit.
                const match = node.raw.match(
                    /^(?:[^\\]|\\.)*?\\([0-3][0-7]***REMOVED***1,2***REMOVED***|[4-7][0-7]|[1-7])/u
                );

                if (match) ***REMOVED***
                    context.report(***REMOVED***
                        node,
                        messageId: "octalEscapeSequence",
                        data: ***REMOVED*** sequence: match[1] ***REMOVED***
                    ***REMOVED***);
                ***REMOVED***
            ***REMOVED***

        ***REMOVED***;

    ***REMOVED***
***REMOVED***;
