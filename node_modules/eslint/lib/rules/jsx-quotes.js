/**
 * @fileoverview A rule to ensure consistent quotes used in jsx syntax.
 * @author Mathias Schreck <https://github.com/lo1tuma>
 */

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const astUtils = require("./utils/ast-utils");

//------------------------------------------------------------------------------
// Constants
//------------------------------------------------------------------------------

const QUOTE_SETTINGS = ***REMOVED***
    "prefer-double": ***REMOVED***
        quote: "\"",
        description: "singlequote",
        convert(str) ***REMOVED***
            return str.replace(/'/gu, "\"");
        ***REMOVED***
    ***REMOVED***,
    "prefer-single": ***REMOVED***
        quote: "'",
        description: "doublequote",
        convert(str) ***REMOVED***
            return str.replace(/"/gu, "'");
        ***REMOVED***
    ***REMOVED***
***REMOVED***;

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "layout",

        docs: ***REMOVED***
            description: "enforce the consistent use of either double or single quotes in JSX attributes",
            category: "Stylistic Issues",
            recommended: false,
            url: "https://eslint.org/docs/rules/jsx-quotes"
        ***REMOVED***,

        fixable: "whitespace",

        schema: [
            ***REMOVED***
                enum: ["prefer-single", "prefer-double"]
            ***REMOVED***
        ],
        messages: ***REMOVED***
            unexpected: "Unexpected usage of ***REMOVED******REMOVED***description***REMOVED******REMOVED***."
        ***REMOVED***
    ***REMOVED***,

    create(context) ***REMOVED***
        const quoteOption = context.options[0] || "prefer-double",
            setting = QUOTE_SETTINGS[quoteOption];

        /**
         * Checks if the given string literal node uses the expected quotes
         * @param ***REMOVED***ASTNode***REMOVED*** node - A string literal node.
         * @returns ***REMOVED***boolean***REMOVED*** Whether or not the string literal used the expected quotes.
         * @public
         */
        function usesExpectedQuotes(node) ***REMOVED***
            return node.value.indexOf(setting.quote) !== -1 || astUtils.isSurroundedBy(node.raw, setting.quote);
        ***REMOVED***

        return ***REMOVED***
            JSXAttribute(node) ***REMOVED***
                const attributeValue = node.value;

                if (attributeValue && astUtils.isStringLiteral(attributeValue) && !usesExpectedQuotes(attributeValue)) ***REMOVED***
                    context.report(***REMOVED***
                        node: attributeValue,
                        messageId: "unexpected",
                        data: ***REMOVED***
                            description: setting.description
                        ***REMOVED***,
                        fix(fixer) ***REMOVED***
                            return fixer.replaceText(attributeValue, setting.convert(attributeValue.raw));
                        ***REMOVED***
                    ***REMOVED***);
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***;
    ***REMOVED***
***REMOVED***;
