/**
 * @fileoverview Rule to check for jsdoc presence.
 * @author Gyandeep Singh
 */
"use strict";

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "suggestion",

        docs: ***REMOVED***
            description: "require JSDoc comments",
            category: "Stylistic Issues",
            recommended: false,
            url: "https://eslint.org/docs/rules/require-jsdoc"
        ***REMOVED***,

        schema: [
            ***REMOVED***
                type: "object",
                properties: ***REMOVED***
                    require: ***REMOVED***
                        type: "object",
                        properties: ***REMOVED***
                            ClassDeclaration: ***REMOVED***
                                type: "boolean",
                                default: false
                            ***REMOVED***,
                            MethodDefinition: ***REMOVED***
                                type: "boolean",
                                default: false
                            ***REMOVED***,
                            FunctionDeclaration: ***REMOVED***
                                type: "boolean",
                                default: true
                            ***REMOVED***,
                            ArrowFunctionExpression: ***REMOVED***
                                type: "boolean",
                                default: false
                            ***REMOVED***,
                            FunctionExpression: ***REMOVED***
                                type: "boolean",
                                default: false
                            ***REMOVED***
                        ***REMOVED***,
                        additionalProperties: false,
                        default: ***REMOVED******REMOVED***
                    ***REMOVED***
                ***REMOVED***,
                additionalProperties: false
            ***REMOVED***
        ],

        deprecated: true,
        replacedBy: []
    ***REMOVED***,

    create(context) ***REMOVED***
        const source = context.getSourceCode();
        const DEFAULT_OPTIONS = ***REMOVED***
            FunctionDeclaration: true,
            MethodDefinition: false,
            ClassDeclaration: false,
            ArrowFunctionExpression: false,
            FunctionExpression: false
        ***REMOVED***;
        const options = Object.assign(DEFAULT_OPTIONS, context.options[0] && context.options[0].require);

        /**
         * Report the error message
         * @param ***REMOVED***ASTNode***REMOVED*** node node to report
         * @returns ***REMOVED***void***REMOVED***
         */
        function report(node) ***REMOVED***
            context.report(***REMOVED*** node, message: "Missing JSDoc comment." ***REMOVED***);
        ***REMOVED***

        /**
         * Check if the jsdoc comment is present or not.
         * @param ***REMOVED***ASTNode***REMOVED*** node node to examine
         * @returns ***REMOVED***void***REMOVED***
         */
        function checkJsDoc(node) ***REMOVED***
            const jsdocComment = source.getJSDocComment(node);

            if (!jsdocComment) ***REMOVED***
                report(node);
            ***REMOVED***
        ***REMOVED***

        return ***REMOVED***
            FunctionDeclaration(node) ***REMOVED***
                if (options.FunctionDeclaration) ***REMOVED***
                    checkJsDoc(node);
                ***REMOVED***
            ***REMOVED***,
            FunctionExpression(node) ***REMOVED***
                if (
                    (options.MethodDefinition && node.parent.type === "MethodDefinition") ||
                    (options.FunctionExpression && (node.parent.type === "VariableDeclarator" || (node.parent.type === "Property" && node === node.parent.value)))
                ) ***REMOVED***
                    checkJsDoc(node);
                ***REMOVED***
            ***REMOVED***,
            ClassDeclaration(node) ***REMOVED***
                if (options.ClassDeclaration) ***REMOVED***
                    checkJsDoc(node);
                ***REMOVED***
            ***REMOVED***,
            ArrowFunctionExpression(node) ***REMOVED***
                if (options.ArrowFunctionExpression && node.parent.type === "VariableDeclarator") ***REMOVED***
                    checkJsDoc(node);
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***;
    ***REMOVED***
***REMOVED***;
