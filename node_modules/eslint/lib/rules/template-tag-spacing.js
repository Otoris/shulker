/**
 * @fileoverview Rule to check spacing between template tags and their literals
 * @author Jonathan Wilsson
 */

"use strict";

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "layout",

        docs: ***REMOVED***
            description: "require or disallow spacing between template tags and their literals",
            category: "Stylistic Issues",
            recommended: false,
            url: "https://eslint.org/docs/rules/template-tag-spacing"
        ***REMOVED***,

        fixable: "whitespace",

        schema: [
            ***REMOVED*** enum: ["always", "never"] ***REMOVED***
        ],
        messages: ***REMOVED***
            unexpected: "Unexpected space between template tag and template literal.",
            missing: "Missing space between template tag and template literal."
        ***REMOVED***
    ***REMOVED***,

    create(context) ***REMOVED***
        const never = context.options[0] !== "always";
        const sourceCode = context.getSourceCode();

        /**
         * Check if a space is present between a template tag and its literal
         * @param ***REMOVED***ASTNode***REMOVED*** node node to evaluate
         * @returns ***REMOVED***void***REMOVED***
         * @private
         */
        function checkSpacing(node) ***REMOVED***
            const tagToken = sourceCode.getTokenBefore(node.quasi);
            const literalToken = sourceCode.getFirstToken(node.quasi);
            const hasWhitespace = sourceCode.isSpaceBetweenTokens(tagToken, literalToken);

            if (never && hasWhitespace) ***REMOVED***
                context.report(***REMOVED***
                    node,
                    loc: tagToken.loc.start,
                    messageId: "unexpected",
                    fix(fixer) ***REMOVED***
                        const comments = sourceCode.getCommentsBefore(node.quasi);

                        // Don't fix anything if there's a single line comment after the template tag
                        if (comments.some(comment => comment.type === "Line")) ***REMOVED***
                            return null;
                        ***REMOVED***

                        return fixer.replaceTextRange(
                            [tagToken.range[1], literalToken.range[0]],
                            comments.reduce((text, comment) => text + sourceCode.getText(comment), "")
                        );
                    ***REMOVED***
                ***REMOVED***);
            ***REMOVED*** else if (!never && !hasWhitespace) ***REMOVED***
                context.report(***REMOVED***
                    node,
                    loc: tagToken.loc.start,
                    messageId: "missing",
                    fix(fixer) ***REMOVED***
                        return fixer.insertTextAfter(tagToken, " ");
                    ***REMOVED***
                ***REMOVED***);
            ***REMOVED***
        ***REMOVED***

        return ***REMOVED***
            TaggedTemplateExpression: checkSpacing
        ***REMOVED***;
    ***REMOVED***
***REMOVED***;
