/**
 * @fileoverview Rule to flag variable leak in CatchClauses in IE 8 and earlier
 * @author Ian Christian Myers
 * @deprecated in ESLint v5.1.0
 */

"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

const astUtils = require("./utils/ast-utils");

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = ***REMOVED***
    meta: ***REMOVED***
        type: "suggestion",

        docs: ***REMOVED***
            description: "disallow `catch` clause parameters from shadowing variables in the outer scope",
            category: "Variables",
            recommended: false,
            url: "https://eslint.org/docs/rules/no-catch-shadow"
        ***REMOVED***,

        replacedBy: ["no-shadow"],

        deprecated: true,
        schema: [],

        messages: ***REMOVED***
            mutable: "Value of '***REMOVED******REMOVED***name***REMOVED******REMOVED***' may be overwritten in IE 8 and earlier."
        ***REMOVED***
    ***REMOVED***,

    create(context) ***REMOVED***

        //--------------------------------------------------------------------------
        // Helpers
        //--------------------------------------------------------------------------

        /**
         * Check if the parameters are been shadowed
         * @param ***REMOVED***Object***REMOVED*** scope current scope
         * @param ***REMOVED***string***REMOVED*** name parameter name
         * @returns ***REMOVED***boolean***REMOVED*** True is its been shadowed
         */
        function paramIsShadowing(scope, name) ***REMOVED***
            return astUtils.getVariableByName(scope, name) !== null;
        ***REMOVED***

        //--------------------------------------------------------------------------
        // Public API
        //--------------------------------------------------------------------------

        return ***REMOVED***

            "CatchClause[param!=null]"(node) ***REMOVED***
                let scope = context.getScope();

                /*
                 * When ecmaVersion >= 6, CatchClause creates its own scope
                 * so start from one upper scope to exclude the current node
                 */
                if (scope.block === node) ***REMOVED***
                    scope = scope.upper;
                ***REMOVED***

                if (paramIsShadowing(scope, node.param.name)) ***REMOVED***
                    context.report(***REMOVED*** node, messageId: "mutable", data: ***REMOVED*** name: node.param.name ***REMOVED*** ***REMOVED***);
                ***REMOVED***
            ***REMOVED***
        ***REMOVED***;

    ***REMOVED***
***REMOVED***;
