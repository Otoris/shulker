'use strict';
var _ = require('lodash');

/**
 * Choice object
 * Normalize input as choice object
 * @constructor
 * @param ***REMOVED***Number|String|Object***REMOVED*** val  Choice value. If an object is passed, it should contains
 *                                    at least one of `value` or `name` property
 */

module.exports = class Choice ***REMOVED***
  constructor(val, answers) ***REMOVED***
    // Don't process Choice and Separator object
    if (val instanceof Choice || val.type === 'separator') ***REMOVED***
      return val;
    ***REMOVED***

    if (_.isString(val) || _.isNumber(val)) ***REMOVED***
      this.name = String(val);
      this.value = val;
      this.short = String(val);
    ***REMOVED*** else ***REMOVED***
      _.extend(this, val, ***REMOVED***
        name: val.name || val.value,
        value: 'value' in val ? val.value : val.name,
        short: val.short || val.name || val.value
      ***REMOVED***);
    ***REMOVED***

    if (_.isFunction(val.disabled)) ***REMOVED***
      this.disabled = val.disabled(answers);
    ***REMOVED*** else ***REMOVED***
      this.disabled = val.disabled;
    ***REMOVED***
  ***REMOVED***
***REMOVED***;
