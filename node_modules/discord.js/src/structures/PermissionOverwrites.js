const Permissions = require('../util/Permissions');

/**
 * Represents a permission overwrite for a role or member in a guild channel.
 */
class PermissionOverwrites ***REMOVED***
  constructor(guildChannel, data) ***REMOVED***
    /**
     * The GuildChannel this overwrite is for
     * @name PermissionOverwrites#channel
     * @type ***REMOVED***GuildChannel***REMOVED***
     * @readonly
     */
    Object.defineProperty(this, 'channel', ***REMOVED*** value: guildChannel ***REMOVED***);

    if (data) this.setup(data);
  ***REMOVED***

  setup(data) ***REMOVED***
    /**
     * The ID of this overwrite, either a user ID or a role ID
     * @type ***REMOVED***Snowflake***REMOVED***
     */
    this.id = data.id;

    /**
     * The type of this overwrite
     * @type ***REMOVED***string***REMOVED***
     */
    this.type = data.type;

    /**
     * The permissions that are denied for the user or role as a bitfield.
     * @type ***REMOVED***number***REMOVED***
     */
    this.deny = data.deny;

    /**
     * The permissions that are allowed for the user or role as a bitfield.
     * @type ***REMOVED***number***REMOVED***
     */
    this.allow = data.allow;

    /**
     * The permissions that are denied for the user or role.
     * @type ***REMOVED***Permissions***REMOVED***
     * @deprecated
     */
    this.denied = new Permissions(data.deny).freeze();

    /**
     * The permissions that are allowed for the user or role.
     * @type ***REMOVED***Permissions***REMOVED***
     * @deprecated
     */
    this.allowed = new Permissions(data.allow).freeze();
  ***REMOVED***

  /**
   * Delete this Permission Overwrite.
   * @param ***REMOVED***string***REMOVED*** [reason] Reason for deleting this overwrite
   * @returns ***REMOVED***Promise<PermissionOverwrites>***REMOVED***
   */
  delete(reason) ***REMOVED***
    return this.channel.client.rest.methods.deletePermissionOverwrites(this, reason);
  ***REMOVED***
***REMOVED***

module.exports = PermissionOverwrites;
