const Constants = require('../util/Constants');
const Collection = require('../util/Collection');
const ClientUserChannelOverride = require('./ClientUserChannelOverride');

/**
 * A wrapper around the ClientUser's guild settings.
 */
class ClientUserGuildSettings ***REMOVED***
  constructor(data, client) ***REMOVED***
    /**
     * The client that created the instance of the ClientUserGuildSettings
     * @name ClientUserGuildSettings#client
     * @type ***REMOVED***Client***REMOVED***
     * @readonly
     */
    Object.defineProperty(this, 'client', ***REMOVED*** value: client ***REMOVED***);
    /**
     * The ID of the guild this settings are for
     * @type ***REMOVED***Snowflake***REMOVED***
     */
    this.guildID = data.guild_id;
    this.channelOverrides = new Collection();
    this.patch(data);
  ***REMOVED***

  /**
   * Patch the data contained in this class with new partial data.
   * @param ***REMOVED***Object***REMOVED*** data Data to patch this with
   * @returns ***REMOVED***void***REMOVED***
   * @private
   */
  patch(data) ***REMOVED***
    for (const key of Object.keys(Constants.UserGuildSettingsMap)) ***REMOVED***
      const value = Constants.UserGuildSettingsMap[key];
      if (!data.hasOwnProperty(key)) continue;
      if (key === 'channel_overrides') ***REMOVED***
        for (const channel of data[key]) ***REMOVED***
          this.channelOverrides.set(channel.channel_id,
            new ClientUserChannelOverride(channel));
        ***REMOVED***
      ***REMOVED*** else if (typeof value === 'function') ***REMOVED***
        this[value.name] = value(data[key]);
      ***REMOVED*** else ***REMOVED***
        this[value] = data[key];
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***

  /**
   * Update a specific property of the guild settings.
   * @param ***REMOVED***string***REMOVED*** name Name of property
   * @param ***REMOVED***value***REMOVED*** value Value to patch
   * @returns ***REMOVED***Promise<Object>***REMOVED***
   */
  update(name, value) ***REMOVED***
    return this.client.rest.methods.patchClientUserGuildSettings(this.guildID, ***REMOVED*** [name]: value ***REMOVED***);
  ***REMOVED***
***REMOVED***

module.exports = ClientUserGuildSettings;
