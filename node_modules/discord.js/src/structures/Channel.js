const Snowflake = require('../util/Snowflake');

/**
 * Represents any channel on Discord.
 */
class Channel ***REMOVED***
  constructor(client, data) ***REMOVED***
    /**
     * The client that instantiated the Channel
     * @name Channel#client
     * @type ***REMOVED***Client***REMOVED***
     * @readonly
     */
    Object.defineProperty(this, 'client', ***REMOVED*** value: client ***REMOVED***);

    /**
     * The type of the channel, either:
     * * `dm` - a DM channel
     * * `group` - a Group DM channel
     * * `text` - a guild text channel
     * * `voice` - a guild voice channel
     * * `category` - a guild category channel
     * * `news` - a guild news channel
     * * `store` - a guild store channel
     * @type ***REMOVED***string***REMOVED***
     */
    this.type = null;

    /**
     * Whether the channel has been deleted
     * @type ***REMOVED***boolean***REMOVED***
     */
    this.deleted = false;

    if (data) this.setup(data);
  ***REMOVED***

  setup(data) ***REMOVED***
    /**
     * The unique ID of the channel
     * @type ***REMOVED***Snowflake***REMOVED***
     */
    this.id = data.id;
  ***REMOVED***

  /**
   * The timestamp the channel was created at
   * @type ***REMOVED***number***REMOVED***
   * @readonly
   */
  get createdTimestamp() ***REMOVED***
    return Snowflake.deconstruct(this.id).timestamp;
  ***REMOVED***

  /**
   * The time the channel was created
   * @type ***REMOVED***Date***REMOVED***
   * @readonly
   */
  get createdAt() ***REMOVED***
    return new Date(this.createdTimestamp);
  ***REMOVED***

  /**
   * Deletes the channel.
   * @returns ***REMOVED***Promise<Channel>***REMOVED***
   * @example
   * // Delete the channel
   * channel.delete()
   *   .then(console.log)
   *   .catch(console.error);
   */
  delete() ***REMOVED***
    return this.client.rest.methods.deleteChannel(this);
  ***REMOVED***
***REMOVED***

module.exports = Channel;
