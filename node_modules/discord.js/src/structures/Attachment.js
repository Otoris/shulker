/**
 * Represents an attachment in a message.
 * @param ***REMOVED***BufferResolvable|Stream***REMOVED*** file The file
 * @param ***REMOVED***string***REMOVED*** [name] The name of the file, if any
 */
class Attachment ***REMOVED***
  constructor(file, name) ***REMOVED***
    this.file = null;
    if (name) this.setAttachment(file, name);
    else this._attach(file);
  ***REMOVED***

  /**
    * The name of the file
    * @type ***REMOVED***?string***REMOVED***
    * @readonly
    */
  get name() ***REMOVED***
    return this.file.name;
  ***REMOVED***

  /**
    * The file
    * @type ***REMOVED***?BufferResolvable|Stream***REMOVED***
    * @readonly
    */
  get attachment() ***REMOVED***
    return this.file.attachment;
  ***REMOVED***

  /**
    * Set the file of this attachment.
    * @param ***REMOVED***BufferResolvable|Stream***REMOVED*** file The file
    * @param ***REMOVED***string***REMOVED*** name The name of the file
    * @returns ***REMOVED***Attachment***REMOVED*** This attachment
    */
  setAttachment(file, name) ***REMOVED***
    this.file = ***REMOVED*** attachment: file, name ***REMOVED***;
    return this;
  ***REMOVED***

  /**
    * Set the file of this attachment.
    * @param ***REMOVED***BufferResolvable|Stream***REMOVED*** attachment The file
    * @returns ***REMOVED***Attachment***REMOVED*** This attachment
    */
  setFile(attachment) ***REMOVED***
    this.file = ***REMOVED*** attachment ***REMOVED***;
    return this;
  ***REMOVED***

  /**
    * Set the name of this attachment.
    * @param ***REMOVED***string***REMOVED*** name The name of the image
    * @returns ***REMOVED***Attachment***REMOVED*** This attachment
    */
  setName(name) ***REMOVED***
    this.file.name = name;
    return this;
  ***REMOVED***

  /**
    * Set the file of this attachment.
    * @param ***REMOVED***BufferResolvable|Stream***REMOVED*** file The file
    * @param ***REMOVED***string***REMOVED*** name The name of the file
    * @returns ***REMOVED***void***REMOVED***
    * @private
    */
  _attach(file, name) ***REMOVED***
    if (typeof file === 'string') this.file = file;
    else this.setAttachment(file, name);
  ***REMOVED***
***REMOVED***

module.exports = Attachment;
