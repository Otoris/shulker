'use strict';

exports.repeat = function (str, num) ***REMOVED***
  var result = '';
  for (var i = 0; i < num; i++) ***REMOVED*** result += str; ***REMOVED***
  return result;
***REMOVED***;

exports.arrayEqual = function (a, b) ***REMOVED***
  if (a.length !== b.length) ***REMOVED*** return false; ***REMOVED***
  for (var i = 0; i < a.length; i++) ***REMOVED***
    if (a[i] !== b[i]) ***REMOVED*** return false; ***REMOVED***
  ***REMOVED***
  return true;
***REMOVED***;

exports.trimChars = function (str, chars) ***REMOVED***
  var start = 0;
  var end = str.length - 1;
  while (chars.indexOf(str.charAt(start)) >= 0) ***REMOVED*** start++; ***REMOVED***
  while (chars.indexOf(str.charAt(end)) >= 0) ***REMOVED*** end--; ***REMOVED***
  return str.slice(start, end + 1);
***REMOVED***;

exports.capitalize = function (str) ***REMOVED***
  return str.charAt(0).toUpperCase() + str.slice(1);
***REMOVED***;

exports.arrayUnion = function () ***REMOVED***
  var result = [];
  for (var i = 0, values = ***REMOVED******REMOVED***; i < arguments.length; i++) ***REMOVED***
    var arr = arguments[i];
    for (var j = 0; j < arr.length; j++) ***REMOVED***
      if (!values[arr[j]]) ***REMOVED***
        values[arr[j]] = true;
        result.push(arr[j]);
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***
  return result;
***REMOVED***;

function has(obj, key) ***REMOVED***
  return Object.prototype.hasOwnProperty.call(obj, key);
***REMOVED***

exports.has = has;

exports.extend = function (dest, src) ***REMOVED***
  for (var i in src) ***REMOVED***
    if (has(src, i)) ***REMOVED*** dest[i] = src[i]; ***REMOVED***
  ***REMOVED***
***REMOVED***;

exports.trimEnd = function (str) ***REMOVED***
  return str.replace(/\s+$/g, '');
***REMOVED***;
