var resolve = require('resolve')
  , path = require('path')

var log = require('debug')('eslint-plugin-import:resolver:node')

exports.interfaceVersion = 2

exports.resolve = function (source, file, config) ***REMOVED***
  log('Resolving:', source, 'from:', file)
  var resolvedPath

  if (resolve.isCore(source)) ***REMOVED***
    log('resolved to core')
    return ***REMOVED*** found: true, path: null ***REMOVED***
  ***REMOVED***

  try ***REMOVED***
    resolvedPath = resolve.sync(source, opts(file, config))
    log('Resolved to:', resolvedPath)
    return ***REMOVED*** found: true, path: resolvedPath ***REMOVED***
  ***REMOVED*** catch (err) ***REMOVED***
    log('resolve threw error:', err)
    return ***REMOVED*** found: false ***REMOVED***
  ***REMOVED***
***REMOVED***

function opts(file, config) ***REMOVED***
  return Object.assign(***REMOVED***
      // more closely matches Node (#333)
      // plus 'mjs' for native modules! (#939)
      extensions: ['.mjs', '.js', '.json'],
    ***REMOVED***,
    config,
    ***REMOVED***
      // path.resolve will handle paths relative to CWD
      basedir: path.dirname(path.resolve(file)),
      packageFilter: packageFilter,

    ***REMOVED***)
***REMOVED***

function packageFilter(pkg) ***REMOVED***
  if (pkg['jsnext:main']) ***REMOVED***
    pkg['main'] = pkg['jsnext:main']
  ***REMOVED***
  return pkg
***REMOVED***
