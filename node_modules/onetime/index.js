'use strict';
const mimicFn = require('mimic-fn');

module.exports = (fn, opts) => ***REMOVED***
	// TODO: Remove this in v3
	if (opts === true) ***REMOVED***
		throw new TypeError('The second argument is now an options object');
	***REMOVED***

	if (typeof fn !== 'function') ***REMOVED***
		throw new TypeError('Expected a function');
	***REMOVED***

	opts = opts || ***REMOVED******REMOVED***;

	let ret;
	let called = false;
	const fnName = fn.displayName || fn.name || '<anonymous>';

	const onetime = function () ***REMOVED***
		if (called) ***REMOVED***
			if (opts.throw === true) ***REMOVED***
				throw new Error(`Function \`$***REMOVED***fnName***REMOVED***\` can only be called once`);
			***REMOVED***

			return ret;
		***REMOVED***

		called = true;
		ret = fn.apply(this, arguments);
		fn = null;

		return ret;
	***REMOVED***;

	mimicFn(onetime, fn);

	return onetime;
***REMOVED***;
