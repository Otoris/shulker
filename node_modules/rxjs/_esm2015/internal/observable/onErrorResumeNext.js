import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
import ***REMOVED*** from ***REMOVED*** from './from';
import ***REMOVED*** isArray ***REMOVED*** from '../util/isArray';
import ***REMOVED*** EMPTY ***REMOVED*** from './empty';
export function onErrorResumeNext(...sources) ***REMOVED***
    if (sources.length === 0) ***REMOVED***
        return EMPTY;
    ***REMOVED***
    const [first, ...remainder] = sources;
    if (sources.length === 1 && isArray(first)) ***REMOVED***
        return onErrorResumeNext(...first);
    ***REMOVED***
    return new Observable(subscriber => ***REMOVED***
        const subNext = () => subscriber.add(onErrorResumeNext(...remainder).subscribe(subscriber));
        return from(first).subscribe(***REMOVED***
            next(value) ***REMOVED*** subscriber.next(value); ***REMOVED***,
            error: subNext,
            complete: subNext,
        ***REMOVED***);
    ***REMOVED***);
***REMOVED***
//# sourceMappingURL=onErrorResumeNext.js.map