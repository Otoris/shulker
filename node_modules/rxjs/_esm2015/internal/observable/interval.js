import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
import ***REMOVED*** async ***REMOVED*** from '../scheduler/async';
import ***REMOVED*** isNumeric ***REMOVED*** from '../util/isNumeric';
export function interval(period = 0, scheduler = async) ***REMOVED***
    if (!isNumeric(period) || period < 0) ***REMOVED***
        period = 0;
    ***REMOVED***
    if (!scheduler || typeof scheduler.schedule !== 'function') ***REMOVED***
        scheduler = async;
    ***REMOVED***
    return new Observable(subscriber => ***REMOVED***
        subscriber.add(scheduler.schedule(dispatch, period, ***REMOVED*** subscriber, counter: 0, period ***REMOVED***));
        return subscriber;
    ***REMOVED***);
***REMOVED***
function dispatch(state) ***REMOVED***
    const ***REMOVED*** subscriber, counter, period ***REMOVED*** = state;
    subscriber.next(counter);
    this.schedule(***REMOVED*** subscriber, counter: counter + 1, period ***REMOVED***, period);
***REMOVED***
//# sourceMappingURL=interval.js.map