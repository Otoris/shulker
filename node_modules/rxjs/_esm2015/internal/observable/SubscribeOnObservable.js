import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
import ***REMOVED*** asap ***REMOVED*** from '../scheduler/asap';
import ***REMOVED*** isNumeric ***REMOVED*** from '../util/isNumeric';
export class SubscribeOnObservable extends Observable ***REMOVED***
    constructor(source, delayTime = 0, scheduler = asap) ***REMOVED***
        super();
        this.source = source;
        this.delayTime = delayTime;
        this.scheduler = scheduler;
        if (!isNumeric(delayTime) || delayTime < 0) ***REMOVED***
            this.delayTime = 0;
        ***REMOVED***
        if (!scheduler || typeof scheduler.schedule !== 'function') ***REMOVED***
            this.scheduler = asap;
        ***REMOVED***
    ***REMOVED***
    static create(source, delay = 0, scheduler = asap) ***REMOVED***
        return new SubscribeOnObservable(source, delay, scheduler);
    ***REMOVED***
    static dispatch(arg) ***REMOVED***
        const ***REMOVED*** source, subscriber ***REMOVED*** = arg;
        return this.add(source.subscribe(subscriber));
    ***REMOVED***
    _subscribe(subscriber) ***REMOVED***
        const delay = this.delayTime;
        const source = this.source;
        const scheduler = this.scheduler;
        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, ***REMOVED***
            source, subscriber
        ***REMOVED***);
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=SubscribeOnObservable.js.map