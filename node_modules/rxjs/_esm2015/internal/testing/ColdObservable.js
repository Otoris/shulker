import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
import ***REMOVED*** Subscription ***REMOVED*** from '../Subscription';
import ***REMOVED*** SubscriptionLoggable ***REMOVED*** from './SubscriptionLoggable';
import ***REMOVED*** applyMixins ***REMOVED*** from '../util/applyMixins';
export class ColdObservable extends Observable ***REMOVED***
    constructor(messages, scheduler) ***REMOVED***
        super(function (subscriber) ***REMOVED***
            const observable = this;
            const index = observable.logSubscribedFrame();
            const subscription = new Subscription();
            subscription.add(new Subscription(() => ***REMOVED***
                observable.logUnsubscribedFrame(index);
            ***REMOVED***));
            observable.scheduleMessages(subscriber);
            return subscription;
        ***REMOVED***);
        this.messages = messages;
        this.subscriptions = [];
        this.scheduler = scheduler;
    ***REMOVED***
    scheduleMessages(subscriber) ***REMOVED***
        const messagesLength = this.messages.length;
        for (let i = 0; i < messagesLength; i++) ***REMOVED***
            const message = this.messages[i];
            subscriber.add(this.scheduler.schedule((***REMOVED*** message, subscriber ***REMOVED***) => ***REMOVED*** message.notification.observe(subscriber); ***REMOVED***, message.frame, ***REMOVED*** message, subscriber ***REMOVED***));
        ***REMOVED***
    ***REMOVED***
***REMOVED***
applyMixins(ColdObservable, [SubscriptionLoggable]);
//# sourceMappingURL=ColdObservable.js.map