import ***REMOVED*** Subject ***REMOVED*** from '../Subject';
import ***REMOVED*** Subscription ***REMOVED*** from '../Subscription';
import ***REMOVED*** SubscriptionLoggable ***REMOVED*** from './SubscriptionLoggable';
import ***REMOVED*** applyMixins ***REMOVED*** from '../util/applyMixins';
export class HotObservable extends Subject ***REMOVED***
    constructor(messages, scheduler) ***REMOVED***
        super();
        this.messages = messages;
        this.subscriptions = [];
        this.scheduler = scheduler;
    ***REMOVED***
    _subscribe(subscriber) ***REMOVED***
        const subject = this;
        const index = subject.logSubscribedFrame();
        const subscription = new Subscription();
        subscription.add(new Subscription(() => ***REMOVED***
            subject.logUnsubscribedFrame(index);
        ***REMOVED***));
        subscription.add(super._subscribe(subscriber));
        return subscription;
    ***REMOVED***
    setup() ***REMOVED***
        const subject = this;
        const messagesLength = subject.messages.length;
        for (var i = 0; i < messagesLength; i++) ***REMOVED***
            (() => ***REMOVED***
                var message = subject.messages[i];
                subject.scheduler.schedule(() => ***REMOVED*** message.notification.observe(subject); ***REMOVED***, message.frame);
            ***REMOVED***)();
        ***REMOVED***
    ***REMOVED***
***REMOVED***
applyMixins(HotObservable, [SubscriptionLoggable]);
//# sourceMappingURL=HotObservable.js.map