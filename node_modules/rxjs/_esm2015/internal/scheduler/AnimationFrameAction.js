import ***REMOVED*** AsyncAction ***REMOVED*** from './AsyncAction';
export class AnimationFrameAction extends AsyncAction ***REMOVED***
    constructor(scheduler, work) ***REMOVED***
        super(scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    ***REMOVED***
    requestAsyncId(scheduler, id, delay = 0) ***REMOVED***
        if (delay !== null && delay > 0) ***REMOVED***
            return super.requestAsyncId(scheduler, id, delay);
        ***REMOVED***
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(() => scheduler.flush(null)));
    ***REMOVED***
    recycleAsyncId(scheduler, id, delay = 0) ***REMOVED***
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) ***REMOVED***
            return super.recycleAsyncId(scheduler, id, delay);
        ***REMOVED***
        if (scheduler.actions.length === 0) ***REMOVED***
            cancelAnimationFrame(id);
            scheduler.scheduled = undefined;
        ***REMOVED***
        return undefined;
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=AnimationFrameAction.js.map