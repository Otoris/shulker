import ***REMOVED*** AsyncAction ***REMOVED*** from './AsyncAction';
export class QueueAction extends AsyncAction ***REMOVED***
    constructor(scheduler, work) ***REMOVED***
        super(scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    ***REMOVED***
    schedule(state, delay = 0) ***REMOVED***
        if (delay > 0) ***REMOVED***
            return super.schedule(state, delay);
        ***REMOVED***
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    ***REMOVED***
    execute(state, delay) ***REMOVED***
        return (delay > 0 || this.closed) ?
            super.execute(state, delay) :
            this._execute(state, delay);
    ***REMOVED***
    requestAsyncId(scheduler, id, delay = 0) ***REMOVED***
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) ***REMOVED***
            return super.requestAsyncId(scheduler, id, delay);
        ***REMOVED***
        return scheduler.flush(this);
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=QueueAction.js.map