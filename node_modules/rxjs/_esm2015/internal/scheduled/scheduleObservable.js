import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
import ***REMOVED*** Subscription ***REMOVED*** from '../Subscription';
import ***REMOVED*** observable as Symbol_observable ***REMOVED*** from '../symbol/observable';
export function scheduleObservable(input, scheduler) ***REMOVED***
    return new Observable(subscriber => ***REMOVED***
        const sub = new Subscription();
        sub.add(scheduler.schedule(() => ***REMOVED***
            const observable = input[Symbol_observable]();
            sub.add(observable.subscribe(***REMOVED***
                next(value) ***REMOVED*** sub.add(scheduler.schedule(() => subscriber.next(value))); ***REMOVED***,
                error(err) ***REMOVED*** sub.add(scheduler.schedule(() => subscriber.error(err))); ***REMOVED***,
                complete() ***REMOVED*** sub.add(scheduler.schedule(() => subscriber.complete())); ***REMOVED***,
            ***REMOVED***));
        ***REMOVED***));
        return sub;
    ***REMOVED***);
***REMOVED***
//# sourceMappingURL=scheduleObservable.js.map