import ***REMOVED*** Subject ***REMOVED*** from './Subject';
import ***REMOVED*** ObjectUnsubscribedError ***REMOVED*** from './util/ObjectUnsubscribedError';
export class BehaviorSubject extends Subject ***REMOVED***
    constructor(_value) ***REMOVED***
        super();
        this._value = _value;
    ***REMOVED***
    get value() ***REMOVED***
        return this.getValue();
    ***REMOVED***
    _subscribe(subscriber) ***REMOVED***
        const subscription = super._subscribe(subscriber);
        if (subscription && !subscription.closed) ***REMOVED***
            subscriber.next(this._value);
        ***REMOVED***
        return subscription;
    ***REMOVED***
    getValue() ***REMOVED***
        if (this.hasError) ***REMOVED***
            throw this.thrownError;
        ***REMOVED***
        else if (this.closed) ***REMOVED***
            throw new ObjectUnsubscribedError();
        ***REMOVED***
        else ***REMOVED***
            return this._value;
        ***REMOVED***
    ***REMOVED***
    next(value) ***REMOVED***
        super.next(this._value = value);
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=BehaviorSubject.js.map