import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
export function map(project, thisArg) ***REMOVED***
    return function mapOperation(source) ***REMOVED***
        if (typeof project !== 'function') ***REMOVED***
            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
        ***REMOVED***
        return source.lift(new MapOperator(project, thisArg));
    ***REMOVED***;
***REMOVED***
export class MapOperator ***REMOVED***
    constructor(project, thisArg) ***REMOVED***
        this.project = project;
        this.thisArg = thisArg;
    ***REMOVED***
    call(subscriber, source) ***REMOVED***
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    ***REMOVED***
***REMOVED***
class MapSubscriber extends Subscriber ***REMOVED***
    constructor(destination, project, thisArg) ***REMOVED***
        super(destination);
        this.project = project;
        this.count = 0;
        this.thisArg = thisArg || this;
    ***REMOVED***
    _next(value) ***REMOVED***
        let result;
        try ***REMOVED***
            result = this.project.call(this.thisArg, value, this.count++);
        ***REMOVED***
        catch (err) ***REMOVED***
            this.destination.error(err);
            return;
        ***REMOVED***
        this.destination.next(result);
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=map.js.map