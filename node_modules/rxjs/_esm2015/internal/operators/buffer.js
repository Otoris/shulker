import ***REMOVED*** OuterSubscriber ***REMOVED*** from '../OuterSubscriber';
import ***REMOVED*** subscribeToResult ***REMOVED*** from '../util/subscribeToResult';
export function buffer(closingNotifier) ***REMOVED***
    return function bufferOperatorFunction(source) ***REMOVED***
        return source.lift(new BufferOperator(closingNotifier));
    ***REMOVED***;
***REMOVED***
class BufferOperator ***REMOVED***
    constructor(closingNotifier) ***REMOVED***
        this.closingNotifier = closingNotifier;
    ***REMOVED***
    call(subscriber, source) ***REMOVED***
        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    ***REMOVED***
***REMOVED***
class BufferSubscriber extends OuterSubscriber ***REMOVED***
    constructor(destination, closingNotifier) ***REMOVED***
        super(destination);
        this.buffer = [];
        this.add(subscribeToResult(this, closingNotifier));
    ***REMOVED***
    _next(value) ***REMOVED***
        this.buffer.push(value);
    ***REMOVED***
    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) ***REMOVED***
        const buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=buffer.js.map