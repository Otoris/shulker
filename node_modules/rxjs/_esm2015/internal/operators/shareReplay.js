import ***REMOVED*** ReplaySubject ***REMOVED*** from '../ReplaySubject';
export function shareReplay(configOrBufferSize, windowTime, scheduler) ***REMOVED***
    let config;
    if (configOrBufferSize && typeof configOrBufferSize === 'object') ***REMOVED***
        config = configOrBufferSize;
    ***REMOVED***
    else ***REMOVED***
        config = ***REMOVED***
            bufferSize: configOrBufferSize,
            windowTime,
            refCount: false,
            scheduler
        ***REMOVED***;
    ***REMOVED***
    return (source) => source.lift(shareReplayOperator(config));
***REMOVED***
function shareReplayOperator(***REMOVED*** bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, refCount: useRefCount, scheduler ***REMOVED***) ***REMOVED***
    let subject;
    let refCount = 0;
    let subscription;
    let hasError = false;
    let isComplete = false;
    return function shareReplayOperation(source) ***REMOVED***
        refCount++;
        if (!subject || hasError) ***REMOVED***
            hasError = false;
            subject = new ReplaySubject(bufferSize, windowTime, scheduler);
            subscription = source.subscribe(***REMOVED***
                next(value) ***REMOVED*** subject.next(value); ***REMOVED***,
                error(err) ***REMOVED***
                    hasError = true;
                    subject.error(err);
                ***REMOVED***,
                complete() ***REMOVED***
                    isComplete = true;
                    subscription = undefined;
                    subject.complete();
                ***REMOVED***,
            ***REMOVED***);
        ***REMOVED***
        const innerSub = subject.subscribe(this);
        this.add(() => ***REMOVED***
            refCount--;
            innerSub.unsubscribe();
            if (subscription && !isComplete && useRefCount && refCount === 0) ***REMOVED***
                subscription.unsubscribe();
                subscription = undefined;
                subject = undefined;
            ***REMOVED***
        ***REMOVED***);
    ***REMOVED***;
***REMOVED***
//# sourceMappingURL=shareReplay.js.map