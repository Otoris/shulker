import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
export function isEmpty() ***REMOVED***
    return (source) => source.lift(new IsEmptyOperator());
***REMOVED***
class IsEmptyOperator ***REMOVED***
    call(observer, source) ***REMOVED***
        return source.subscribe(new IsEmptySubscriber(observer));
    ***REMOVED***
***REMOVED***
class IsEmptySubscriber extends Subscriber ***REMOVED***
    constructor(destination) ***REMOVED***
        super(destination);
    ***REMOVED***
    notifyComplete(isEmpty) ***REMOVED***
        const destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    ***REMOVED***
    _next(value) ***REMOVED***
        this.notifyComplete(false);
    ***REMOVED***
    _complete() ***REMOVED***
        this.notifyComplete(true);
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=isEmpty.js.map