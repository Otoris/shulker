import ***REMOVED*** ArgumentOutOfRangeError ***REMOVED*** from '../util/ArgumentOutOfRangeError';
import ***REMOVED*** filter ***REMOVED*** from './filter';
import ***REMOVED*** throwIfEmpty ***REMOVED*** from './throwIfEmpty';
import ***REMOVED*** defaultIfEmpty ***REMOVED*** from './defaultIfEmpty';
import ***REMOVED*** take ***REMOVED*** from './take';
export function elementAt(index, defaultValue) ***REMOVED***
    if (index < 0) ***REMOVED***
        throw new ArgumentOutOfRangeError();
    ***REMOVED***
    const hasDefaultValue = arguments.length >= 2;
    return (source) => source.pipe(filter((v, i) => i === index), take(1), hasDefaultValue
        ? defaultIfEmpty(defaultValue)
        : throwIfEmpty(() => new ArgumentOutOfRangeError()));
***REMOVED***
//# sourceMappingURL=elementAt.js.map