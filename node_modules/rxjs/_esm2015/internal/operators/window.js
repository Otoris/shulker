import ***REMOVED*** Subject ***REMOVED*** from '../Subject';
import ***REMOVED*** OuterSubscriber ***REMOVED*** from '../OuterSubscriber';
import ***REMOVED*** subscribeToResult ***REMOVED*** from '../util/subscribeToResult';
export function window(windowBoundaries) ***REMOVED***
    return function windowOperatorFunction(source) ***REMOVED***
        return source.lift(new WindowOperator(windowBoundaries));
    ***REMOVED***;
***REMOVED***
class WindowOperator ***REMOVED***
    constructor(windowBoundaries) ***REMOVED***
        this.windowBoundaries = windowBoundaries;
    ***REMOVED***
    call(subscriber, source) ***REMOVED***
        const windowSubscriber = new WindowSubscriber(subscriber);
        const sourceSubscription = source.subscribe(windowSubscriber);
        if (!sourceSubscription.closed) ***REMOVED***
            windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));
        ***REMOVED***
        return sourceSubscription;
    ***REMOVED***
***REMOVED***
class WindowSubscriber extends OuterSubscriber ***REMOVED***
    constructor(destination) ***REMOVED***
        super(destination);
        this.window = new Subject();
        destination.next(this.window);
    ***REMOVED***
    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) ***REMOVED***
        this.openWindow();
    ***REMOVED***
    notifyError(error, innerSub) ***REMOVED***
        this._error(error);
    ***REMOVED***
    notifyComplete(innerSub) ***REMOVED***
        this._complete();
    ***REMOVED***
    _next(value) ***REMOVED***
        this.window.next(value);
    ***REMOVED***
    _error(err) ***REMOVED***
        this.window.error(err);
        this.destination.error(err);
    ***REMOVED***
    _complete() ***REMOVED***
        this.window.complete();
        this.destination.complete();
    ***REMOVED***
    _unsubscribe() ***REMOVED***
        this.window = null;
    ***REMOVED***
    openWindow() ***REMOVED***
        const prevWindow = this.window;
        if (prevWindow) ***REMOVED***
            prevWindow.complete();
        ***REMOVED***
        const destination = this.destination;
        const newWindow = this.window = new Subject();
        destination.next(newWindow);
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=window.js.map