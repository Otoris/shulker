import ***REMOVED*** OuterSubscriber ***REMOVED*** from '../OuterSubscriber';
import ***REMOVED*** subscribeToResult ***REMOVED*** from '../util/subscribeToResult';
export function exhaust() ***REMOVED***
    return (source) => source.lift(new SwitchFirstOperator());
***REMOVED***
class SwitchFirstOperator ***REMOVED***
    call(subscriber, source) ***REMOVED***
        return source.subscribe(new SwitchFirstSubscriber(subscriber));
    ***REMOVED***
***REMOVED***
class SwitchFirstSubscriber extends OuterSubscriber ***REMOVED***
    constructor(destination) ***REMOVED***
        super(destination);
        this.hasCompleted = false;
        this.hasSubscription = false;
    ***REMOVED***
    _next(value) ***REMOVED***
        if (!this.hasSubscription) ***REMOVED***
            this.hasSubscription = true;
            this.add(subscribeToResult(this, value));
        ***REMOVED***
    ***REMOVED***
    _complete() ***REMOVED***
        this.hasCompleted = true;
        if (!this.hasSubscription) ***REMOVED***
            this.destination.complete();
        ***REMOVED***
    ***REMOVED***
    notifyComplete(innerSub) ***REMOVED***
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) ***REMOVED***
            this.destination.complete();
        ***REMOVED***
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=exhaust.js.map