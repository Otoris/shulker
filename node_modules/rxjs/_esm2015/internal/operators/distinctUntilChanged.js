import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
export function distinctUntilChanged(compare, keySelector) ***REMOVED***
    return (source) => source.lift(new DistinctUntilChangedOperator(compare, keySelector));
***REMOVED***
class DistinctUntilChangedOperator ***REMOVED***
    constructor(compare, keySelector) ***REMOVED***
        this.compare = compare;
        this.keySelector = keySelector;
    ***REMOVED***
    call(subscriber, source) ***REMOVED***
        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    ***REMOVED***
***REMOVED***
class DistinctUntilChangedSubscriber extends Subscriber ***REMOVED***
    constructor(destination, compare, keySelector) ***REMOVED***
        super(destination);
        this.keySelector = keySelector;
        this.hasKey = false;
        if (typeof compare === 'function') ***REMOVED***
            this.compare = compare;
        ***REMOVED***
    ***REMOVED***
    compare(x, y) ***REMOVED***
        return x === y;
    ***REMOVED***
    _next(value) ***REMOVED***
        let key;
        try ***REMOVED***
            const ***REMOVED*** keySelector ***REMOVED*** = this;
            key = keySelector ? keySelector(value) : value;
        ***REMOVED***
        catch (err) ***REMOVED***
            return this.destination.error(err);
        ***REMOVED***
        let result = false;
        if (this.hasKey) ***REMOVED***
            try ***REMOVED***
                const ***REMOVED*** compare ***REMOVED*** = this;
                result = compare(this.key, key);
            ***REMOVED***
            catch (err) ***REMOVED***
                return this.destination.error(err);
            ***REMOVED***
        ***REMOVED***
        else ***REMOVED***
            this.hasKey = true;
        ***REMOVED***
        if (!result) ***REMOVED***
            this.key = key;
            this.destination.next(value);
        ***REMOVED***
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=distinctUntilChanged.js.map