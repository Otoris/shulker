import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
import ***REMOVED*** noop ***REMOVED*** from '../util/noop';
import ***REMOVED*** isFunction ***REMOVED*** from '../util/isFunction';
export function tap(nextOrObserver, error, complete) ***REMOVED***
    return function tapOperatorFunction(source) ***REMOVED***
        return source.lift(new DoOperator(nextOrObserver, error, complete));
    ***REMOVED***;
***REMOVED***
class DoOperator ***REMOVED***
    constructor(nextOrObserver, error, complete) ***REMOVED***
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    ***REMOVED***
    call(subscriber, source) ***REMOVED***
        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    ***REMOVED***
***REMOVED***
class TapSubscriber extends Subscriber ***REMOVED***
    constructor(destination, observerOrNext, error, complete) ***REMOVED***
        super(destination);
        this._tapNext = noop;
        this._tapError = noop;
        this._tapComplete = noop;
        this._tapError = error || noop;
        this._tapComplete = complete || noop;
        if (isFunction(observerOrNext)) ***REMOVED***
            this._context = this;
            this._tapNext = observerOrNext;
        ***REMOVED***
        else if (observerOrNext) ***REMOVED***
            this._context = observerOrNext;
            this._tapNext = observerOrNext.next || noop;
            this._tapError = observerOrNext.error || noop;
            this._tapComplete = observerOrNext.complete || noop;
        ***REMOVED***
    ***REMOVED***
    _next(value) ***REMOVED***
        try ***REMOVED***
            this._tapNext.call(this._context, value);
        ***REMOVED***
        catch (err) ***REMOVED***
            this.destination.error(err);
            return;
        ***REMOVED***
        this.destination.next(value);
    ***REMOVED***
    _error(err) ***REMOVED***
        try ***REMOVED***
            this._tapError.call(this._context, err);
        ***REMOVED***
        catch (err) ***REMOVED***
            this.destination.error(err);
            return;
        ***REMOVED***
        this.destination.error(err);
    ***REMOVED***
    _complete() ***REMOVED***
        try ***REMOVED***
            this._tapComplete.call(this._context);
        ***REMOVED***
        catch (err) ***REMOVED***
            this.destination.error(err);
            return;
        ***REMOVED***
        return this.destination.complete();
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=tap.js.map