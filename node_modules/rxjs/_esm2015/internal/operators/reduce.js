import ***REMOVED*** scan ***REMOVED*** from './scan';
import ***REMOVED*** takeLast ***REMOVED*** from './takeLast';
import ***REMOVED*** defaultIfEmpty ***REMOVED*** from './defaultIfEmpty';
import ***REMOVED*** pipe ***REMOVED*** from '../util/pipe';
export function reduce(accumulator, seed) ***REMOVED***
    if (arguments.length >= 2) ***REMOVED***
        return function reduceOperatorFunctionWithSeed(source) ***REMOVED***
            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);
        ***REMOVED***;
    ***REMOVED***
    return function reduceOperatorFunction(source) ***REMOVED***
        return pipe(scan((acc, value, index) => accumulator(acc, value, index + 1)), takeLast(1))(source);
    ***REMOVED***;
***REMOVED***
//# sourceMappingURL=reduce.js.map