import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
export function pairwise() ***REMOVED***
    return (source) => source.lift(new PairwiseOperator());
***REMOVED***
class PairwiseOperator ***REMOVED***
    call(subscriber, source) ***REMOVED***
        return source.subscribe(new PairwiseSubscriber(subscriber));
    ***REMOVED***
***REMOVED***
class PairwiseSubscriber extends Subscriber ***REMOVED***
    constructor(destination) ***REMOVED***
        super(destination);
        this.hasPrev = false;
    ***REMOVED***
    _next(value) ***REMOVED***
        let pair;
        if (this.hasPrev) ***REMOVED***
            pair = [this.prev, value];
        ***REMOVED***
        else ***REMOVED***
            this.hasPrev = true;
        ***REMOVED***
        this.prev = value;
        if (pair) ***REMOVED***
            this.destination.next(pair);
        ***REMOVED***
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=pairwise.js.map