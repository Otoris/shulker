import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
import ***REMOVED*** ArgumentOutOfRangeError ***REMOVED*** from '../util/ArgumentOutOfRangeError';
import ***REMOVED*** empty ***REMOVED*** from '../observable/empty';
export function takeLast(count) ***REMOVED***
    return function takeLastOperatorFunction(source) ***REMOVED***
        if (count === 0) ***REMOVED***
            return empty();
        ***REMOVED***
        else ***REMOVED***
            return source.lift(new TakeLastOperator(count));
        ***REMOVED***
    ***REMOVED***;
***REMOVED***
class TakeLastOperator ***REMOVED***
    constructor(total) ***REMOVED***
        this.total = total;
        if (this.total < 0) ***REMOVED***
            throw new ArgumentOutOfRangeError;
        ***REMOVED***
    ***REMOVED***
    call(subscriber, source) ***REMOVED***
        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
    ***REMOVED***
***REMOVED***
class TakeLastSubscriber extends Subscriber ***REMOVED***
    constructor(destination, total) ***REMOVED***
        super(destination);
        this.total = total;
        this.ring = new Array();
        this.count = 0;
    ***REMOVED***
    _next(value) ***REMOVED***
        const ring = this.ring;
        const total = this.total;
        const count = this.count++;
        if (ring.length < total) ***REMOVED***
            ring.push(value);
        ***REMOVED***
        else ***REMOVED***
            const index = count % total;
            ring[index] = value;
        ***REMOVED***
    ***REMOVED***
    _complete() ***REMOVED***
        const destination = this.destination;
        let count = this.count;
        if (count > 0) ***REMOVED***
            const total = this.count >= this.total ? this.total : this.count;
            const ring = this.ring;
            for (let i = 0; i < total; i++) ***REMOVED***
                const idx = (count++) % total;
                destination.next(ring[idx]);
            ***REMOVED***
        ***REMOVED***
        destination.complete();
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=takeLast.js.map