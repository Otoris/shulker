import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
import ***REMOVED*** Notification ***REMOVED*** from '../Notification';
export function observeOn(scheduler, delay = 0) ***REMOVED***
    return function observeOnOperatorFunction(source) ***REMOVED***
        return source.lift(new ObserveOnOperator(scheduler, delay));
    ***REMOVED***;
***REMOVED***
export class ObserveOnOperator ***REMOVED***
    constructor(scheduler, delay = 0) ***REMOVED***
        this.scheduler = scheduler;
        this.delay = delay;
    ***REMOVED***
    call(subscriber, source) ***REMOVED***
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    ***REMOVED***
***REMOVED***
export class ObserveOnSubscriber extends Subscriber ***REMOVED***
    constructor(destination, scheduler, delay = 0) ***REMOVED***
        super(destination);
        this.scheduler = scheduler;
        this.delay = delay;
    ***REMOVED***
    static dispatch(arg) ***REMOVED***
        const ***REMOVED*** notification, destination ***REMOVED*** = arg;
        notification.observe(destination);
        this.unsubscribe();
    ***REMOVED***
    scheduleMessage(notification) ***REMOVED***
        const destination = this.destination;
        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    ***REMOVED***
    _next(value) ***REMOVED***
        this.scheduleMessage(Notification.createNext(value));
    ***REMOVED***
    _error(err) ***REMOVED***
        this.scheduleMessage(Notification.createError(err));
        this.unsubscribe();
    ***REMOVED***
    _complete() ***REMOVED***
        this.scheduleMessage(Notification.createComplete());
        this.unsubscribe();
    ***REMOVED***
***REMOVED***
export class ObserveOnMessage ***REMOVED***
    constructor(notification, destination) ***REMOVED***
        this.notification = notification;
        this.destination = destination;
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=observeOn.js.map