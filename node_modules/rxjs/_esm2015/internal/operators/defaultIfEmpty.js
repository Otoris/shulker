import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
export function defaultIfEmpty(defaultValue = null) ***REMOVED***
    return (source) => source.lift(new DefaultIfEmptyOperator(defaultValue));
***REMOVED***
class DefaultIfEmptyOperator ***REMOVED***
    constructor(defaultValue) ***REMOVED***
        this.defaultValue = defaultValue;
    ***REMOVED***
    call(subscriber, source) ***REMOVED***
        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    ***REMOVED***
***REMOVED***
class DefaultIfEmptySubscriber extends Subscriber ***REMOVED***
    constructor(destination, defaultValue) ***REMOVED***
        super(destination);
        this.defaultValue = defaultValue;
        this.isEmpty = true;
    ***REMOVED***
    _next(value) ***REMOVED***
        this.isEmpty = false;
        this.destination.next(value);
    ***REMOVED***
    _complete() ***REMOVED***
        if (this.isEmpty) ***REMOVED***
            this.destination.next(this.defaultValue);
        ***REMOVED***
        this.destination.complete();
    ***REMOVED***
***REMOVED***
//# sourceMappingURL=defaultIfEmpty.js.map