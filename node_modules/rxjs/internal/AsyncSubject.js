"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var Subject_1 = require("./Subject");
var Subscription_1 = require("./Subscription");
var AsyncSubject = (function (_super) ***REMOVED***
    __extends(AsyncSubject, _super);
    function AsyncSubject() ***REMOVED***
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.value = null;
        _this.hasNext = false;
        _this.hasCompleted = false;
        return _this;
    ***REMOVED***
    AsyncSubject.prototype._subscribe = function (subscriber) ***REMOVED***
        if (this.hasError) ***REMOVED***
            subscriber.error(this.thrownError);
            return Subscription_1.Subscription.EMPTY;
        ***REMOVED***
        else if (this.hasCompleted && this.hasNext) ***REMOVED***
            subscriber.next(this.value);
            subscriber.complete();
            return Subscription_1.Subscription.EMPTY;
        ***REMOVED***
        return _super.prototype._subscribe.call(this, subscriber);
    ***REMOVED***;
    AsyncSubject.prototype.next = function (value) ***REMOVED***
        if (!this.hasCompleted) ***REMOVED***
            this.value = value;
            this.hasNext = true;
        ***REMOVED***
    ***REMOVED***;
    AsyncSubject.prototype.error = function (error) ***REMOVED***
        if (!this.hasCompleted) ***REMOVED***
            _super.prototype.error.call(this, error);
        ***REMOVED***
    ***REMOVED***;
    AsyncSubject.prototype.complete = function () ***REMOVED***
        this.hasCompleted = true;
        if (this.hasNext) ***REMOVED***
            _super.prototype.next.call(this, this.value);
        ***REMOVED***
        _super.prototype.complete.call(this);
    ***REMOVED***;
    return AsyncSubject;
***REMOVED***(Subject_1.Subject));
exports.AsyncSubject = AsyncSubject;
//# sourceMappingURL=AsyncSubject.js.map