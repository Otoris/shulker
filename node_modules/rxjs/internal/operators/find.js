"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var Subscriber_1 = require("../Subscriber");
function find(predicate, thisArg) ***REMOVED***
    if (typeof predicate !== 'function') ***REMOVED***
        throw new TypeError('predicate is not a function');
    ***REMOVED***
    return function (source) ***REMOVED*** return source.lift(new FindValueOperator(predicate, source, false, thisArg)); ***REMOVED***;
***REMOVED***
exports.find = find;
var FindValueOperator = (function () ***REMOVED***
    function FindValueOperator(predicate, source, yieldIndex, thisArg) ***REMOVED***
        this.predicate = predicate;
        this.source = source;
        this.yieldIndex = yieldIndex;
        this.thisArg = thisArg;
    ***REMOVED***
    FindValueOperator.prototype.call = function (observer, source) ***REMOVED***
        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
    ***REMOVED***;
    return FindValueOperator;
***REMOVED***());
exports.FindValueOperator = FindValueOperator;
var FindValueSubscriber = (function (_super) ***REMOVED***
    __extends(FindValueSubscriber, _super);
    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.source = source;
        _this.yieldIndex = yieldIndex;
        _this.thisArg = thisArg;
        _this.index = 0;
        return _this;
    ***REMOVED***
    FindValueSubscriber.prototype.notifyComplete = function (value) ***REMOVED***
        var destination = this.destination;
        destination.next(value);
        destination.complete();
        this.unsubscribe();
    ***REMOVED***;
    FindValueSubscriber.prototype._next = function (value) ***REMOVED***
        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
        var index = this.index++;
        try ***REMOVED***
            var result = predicate.call(thisArg || this, value, index, this.source);
            if (result) ***REMOVED***
                this.notifyComplete(this.yieldIndex ? index : value);
            ***REMOVED***
        ***REMOVED***
        catch (err) ***REMOVED***
            this.destination.error(err);
        ***REMOVED***
    ***REMOVED***;
    FindValueSubscriber.prototype._complete = function () ***REMOVED***
        this.notifyComplete(this.yieldIndex ? -1 : undefined);
    ***REMOVED***;
    return FindValueSubscriber;
***REMOVED***(Subscriber_1.Subscriber));
exports.FindValueSubscriber = FindValueSubscriber;
//# sourceMappingURL=find.js.map