"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var OuterSubscriber_1 = require("../OuterSubscriber");
var subscribeToResult_1 = require("../util/subscribeToResult");
function audit(durationSelector) ***REMOVED***
    return function auditOperatorFunction(source) ***REMOVED***
        return source.lift(new AuditOperator(durationSelector));
    ***REMOVED***;
***REMOVED***
exports.audit = audit;
var AuditOperator = (function () ***REMOVED***
    function AuditOperator(durationSelector) ***REMOVED***
        this.durationSelector = durationSelector;
    ***REMOVED***
    AuditOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
    ***REMOVED***;
    return AuditOperator;
***REMOVED***());
var AuditSubscriber = (function (_super) ***REMOVED***
    __extends(AuditSubscriber, _super);
    function AuditSubscriber(destination, durationSelector) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.durationSelector = durationSelector;
        _this.hasValue = false;
        return _this;
    ***REMOVED***
    AuditSubscriber.prototype._next = function (value) ***REMOVED***
        this.value = value;
        this.hasValue = true;
        if (!this.throttled) ***REMOVED***
            var duration = void 0;
            try ***REMOVED***
                var durationSelector = this.durationSelector;
                duration = durationSelector(value);
            ***REMOVED***
            catch (err) ***REMOVED***
                return this.destination.error(err);
            ***REMOVED***
            var innerSubscription = subscribeToResult_1.subscribeToResult(this, duration);
            if (!innerSubscription || innerSubscription.closed) ***REMOVED***
                this.clearThrottle();
            ***REMOVED***
            else ***REMOVED***
                this.add(this.throttled = innerSubscription);
            ***REMOVED***
        ***REMOVED***
    ***REMOVED***;
    AuditSubscriber.prototype.clearThrottle = function () ***REMOVED***
        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
        if (throttled) ***REMOVED***
            this.remove(throttled);
            this.throttled = null;
            throttled.unsubscribe();
        ***REMOVED***
        if (hasValue) ***REMOVED***
            this.value = null;
            this.hasValue = false;
            this.destination.next(value);
        ***REMOVED***
    ***REMOVED***;
    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) ***REMOVED***
        this.clearThrottle();
    ***REMOVED***;
    AuditSubscriber.prototype.notifyComplete = function () ***REMOVED***
        this.clearThrottle();
    ***REMOVED***;
    return AuditSubscriber;
***REMOVED***(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=audit.js.map