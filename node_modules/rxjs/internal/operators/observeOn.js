"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var Subscriber_1 = require("../Subscriber");
var Notification_1 = require("../Notification");
function observeOn(scheduler, delay) ***REMOVED***
    if (delay === void 0) ***REMOVED*** delay = 0; ***REMOVED***
    return function observeOnOperatorFunction(source) ***REMOVED***
        return source.lift(new ObserveOnOperator(scheduler, delay));
    ***REMOVED***;
***REMOVED***
exports.observeOn = observeOn;
var ObserveOnOperator = (function () ***REMOVED***
    function ObserveOnOperator(scheduler, delay) ***REMOVED***
        if (delay === void 0) ***REMOVED*** delay = 0; ***REMOVED***
        this.scheduler = scheduler;
        this.delay = delay;
    ***REMOVED***
    ObserveOnOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    ***REMOVED***;
    return ObserveOnOperator;
***REMOVED***());
exports.ObserveOnOperator = ObserveOnOperator;
var ObserveOnSubscriber = (function (_super) ***REMOVED***
    __extends(ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) ***REMOVED***
        if (delay === void 0) ***REMOVED*** delay = 0; ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.scheduler = scheduler;
        _this.delay = delay;
        return _this;
    ***REMOVED***
    ObserveOnSubscriber.dispatch = function (arg) ***REMOVED***
        var notification = arg.notification, destination = arg.destination;
        notification.observe(destination);
        this.unsubscribe();
    ***REMOVED***;
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) ***REMOVED***
        var destination = this.destination;
        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    ***REMOVED***;
    ObserveOnSubscriber.prototype._next = function (value) ***REMOVED***
        this.scheduleMessage(Notification_1.Notification.createNext(value));
    ***REMOVED***;
    ObserveOnSubscriber.prototype._error = function (err) ***REMOVED***
        this.scheduleMessage(Notification_1.Notification.createError(err));
        this.unsubscribe();
    ***REMOVED***;
    ObserveOnSubscriber.prototype._complete = function () ***REMOVED***
        this.scheduleMessage(Notification_1.Notification.createComplete());
        this.unsubscribe();
    ***REMOVED***;
    return ObserveOnSubscriber;
***REMOVED***(Subscriber_1.Subscriber));
exports.ObserveOnSubscriber = ObserveOnSubscriber;
var ObserveOnMessage = (function () ***REMOVED***
    function ObserveOnMessage(notification, destination) ***REMOVED***
        this.notification = notification;
        this.destination = destination;
    ***REMOVED***
    return ObserveOnMessage;
***REMOVED***());
exports.ObserveOnMessage = ObserveOnMessage;
//# sourceMappingURL=observeOn.js.map