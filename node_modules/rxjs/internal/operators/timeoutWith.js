"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var async_1 = require("../scheduler/async");
var isDate_1 = require("../util/isDate");
var OuterSubscriber_1 = require("../OuterSubscriber");
var subscribeToResult_1 = require("../util/subscribeToResult");
function timeoutWith(due, withObservable, scheduler) ***REMOVED***
    if (scheduler === void 0) ***REMOVED*** scheduler = async_1.async; ***REMOVED***
    return function (source) ***REMOVED***
        var absoluteTimeout = isDate_1.isDate(due);
        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
    ***REMOVED***;
***REMOVED***
exports.timeoutWith = timeoutWith;
var TimeoutWithOperator = (function () ***REMOVED***
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) ***REMOVED***
        this.waitFor = waitFor;
        this.absoluteTimeout = absoluteTimeout;
        this.withObservable = withObservable;
        this.scheduler = scheduler;
    ***REMOVED***
    TimeoutWithOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
    ***REMOVED***;
    return TimeoutWithOperator;
***REMOVED***());
var TimeoutWithSubscriber = (function (_super) ***REMOVED***
    __extends(TimeoutWithSubscriber, _super);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.absoluteTimeout = absoluteTimeout;
        _this.waitFor = waitFor;
        _this.withObservable = withObservable;
        _this.scheduler = scheduler;
        _this.action = null;
        _this.scheduleTimeout();
        return _this;
    ***REMOVED***
    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) ***REMOVED***
        var withObservable = subscriber.withObservable;
        subscriber._unsubscribeAndRecycle();
        subscriber.add(subscribeToResult_1.subscribeToResult(subscriber, withObservable));
    ***REMOVED***;
    TimeoutWithSubscriber.prototype.scheduleTimeout = function () ***REMOVED***
        var action = this.action;
        if (action) ***REMOVED***
            this.action = action.schedule(this, this.waitFor);
        ***REMOVED***
        else ***REMOVED***
            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
        ***REMOVED***
    ***REMOVED***;
    TimeoutWithSubscriber.prototype._next = function (value) ***REMOVED***
        if (!this.absoluteTimeout) ***REMOVED***
            this.scheduleTimeout();
        ***REMOVED***
        _super.prototype._next.call(this, value);
    ***REMOVED***;
    TimeoutWithSubscriber.prototype._unsubscribe = function () ***REMOVED***
        this.action = null;
        this.scheduler = null;
        this.withObservable = null;
    ***REMOVED***;
    return TimeoutWithSubscriber;
***REMOVED***(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=timeoutWith.js.map