"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var OuterSubscriber_1 = require("../OuterSubscriber");
var subscribeToResult_1 = require("../util/subscribeToResult");
function distinct(keySelector, flushes) ***REMOVED***
    return function (source) ***REMOVED*** return source.lift(new DistinctOperator(keySelector, flushes)); ***REMOVED***;
***REMOVED***
exports.distinct = distinct;
var DistinctOperator = (function () ***REMOVED***
    function DistinctOperator(keySelector, flushes) ***REMOVED***
        this.keySelector = keySelector;
        this.flushes = flushes;
    ***REMOVED***
    DistinctOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
    ***REMOVED***;
    return DistinctOperator;
***REMOVED***());
var DistinctSubscriber = (function (_super) ***REMOVED***
    __extends(DistinctSubscriber, _super);
    function DistinctSubscriber(destination, keySelector, flushes) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.values = new Set();
        if (flushes) ***REMOVED***
            _this.add(subscribeToResult_1.subscribeToResult(_this, flushes));
        ***REMOVED***
        return _this;
    ***REMOVED***
    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) ***REMOVED***
        this.values.clear();
    ***REMOVED***;
    DistinctSubscriber.prototype.notifyError = function (error, innerSub) ***REMOVED***
        this._error(error);
    ***REMOVED***;
    DistinctSubscriber.prototype._next = function (value) ***REMOVED***
        if (this.keySelector) ***REMOVED***
            this._useKeySelector(value);
        ***REMOVED***
        else ***REMOVED***
            this._finalizeNext(value, value);
        ***REMOVED***
    ***REMOVED***;
    DistinctSubscriber.prototype._useKeySelector = function (value) ***REMOVED***
        var key;
        var destination = this.destination;
        try ***REMOVED***
            key = this.keySelector(value);
        ***REMOVED***
        catch (err) ***REMOVED***
            destination.error(err);
            return;
        ***REMOVED***
        this._finalizeNext(key, value);
    ***REMOVED***;
    DistinctSubscriber.prototype._finalizeNext = function (key, value) ***REMOVED***
        var values = this.values;
        if (!values.has(key)) ***REMOVED***
            values.add(key);
            this.destination.next(value);
        ***REMOVED***
    ***REMOVED***;
    return DistinctSubscriber;
***REMOVED***(OuterSubscriber_1.OuterSubscriber));
exports.DistinctSubscriber = DistinctSubscriber;
//# sourceMappingURL=distinct.js.map