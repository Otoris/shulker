"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var Subscriber_1 = require("../Subscriber");
var ArgumentOutOfRangeError_1 = require("../util/ArgumentOutOfRangeError");
function skipLast(count) ***REMOVED***
    return function (source) ***REMOVED*** return source.lift(new SkipLastOperator(count)); ***REMOVED***;
***REMOVED***
exports.skipLast = skipLast;
var SkipLastOperator = (function () ***REMOVED***
    function SkipLastOperator(_skipCount) ***REMOVED***
        this._skipCount = _skipCount;
        if (this._skipCount < 0) ***REMOVED***
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        ***REMOVED***
    ***REMOVED***
    SkipLastOperator.prototype.call = function (subscriber, source) ***REMOVED***
        if (this._skipCount === 0) ***REMOVED***
            return source.subscribe(new Subscriber_1.Subscriber(subscriber));
        ***REMOVED***
        else ***REMOVED***
            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
        ***REMOVED***
    ***REMOVED***;
    return SkipLastOperator;
***REMOVED***());
var SkipLastSubscriber = (function (_super) ***REMOVED***
    __extends(SkipLastSubscriber, _super);
    function SkipLastSubscriber(destination, _skipCount) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this._skipCount = _skipCount;
        _this._count = 0;
        _this._ring = new Array(_skipCount);
        return _this;
    ***REMOVED***
    SkipLastSubscriber.prototype._next = function (value) ***REMOVED***
        var skipCount = this._skipCount;
        var count = this._count++;
        if (count < skipCount) ***REMOVED***
            this._ring[count] = value;
        ***REMOVED***
        else ***REMOVED***
            var currentIndex = count % skipCount;
            var ring = this._ring;
            var oldValue = ring[currentIndex];
            ring[currentIndex] = value;
            this.destination.next(oldValue);
        ***REMOVED***
    ***REMOVED***;
    return SkipLastSubscriber;
***REMOVED***(Subscriber_1.Subscriber));
//# sourceMappingURL=skipLast.js.map