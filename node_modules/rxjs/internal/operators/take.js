"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var Subscriber_1 = require("../Subscriber");
var ArgumentOutOfRangeError_1 = require("../util/ArgumentOutOfRangeError");
var empty_1 = require("../observable/empty");
function take(count) ***REMOVED***
    return function (source) ***REMOVED***
        if (count === 0) ***REMOVED***
            return empty_1.empty();
        ***REMOVED***
        else ***REMOVED***
            return source.lift(new TakeOperator(count));
        ***REMOVED***
    ***REMOVED***;
***REMOVED***
exports.take = take;
var TakeOperator = (function () ***REMOVED***
    function TakeOperator(total) ***REMOVED***
        this.total = total;
        if (this.total < 0) ***REMOVED***
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        ***REMOVED***
    ***REMOVED***
    TakeOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new TakeSubscriber(subscriber, this.total));
    ***REMOVED***;
    return TakeOperator;
***REMOVED***());
var TakeSubscriber = (function (_super) ***REMOVED***
    __extends(TakeSubscriber, _super);
    function TakeSubscriber(destination, total) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.total = total;
        _this.count = 0;
        return _this;
    ***REMOVED***
    TakeSubscriber.prototype._next = function (value) ***REMOVED***
        var total = this.total;
        var count = ++this.count;
        if (count <= total) ***REMOVED***
            this.destination.next(value);
            if (count === total) ***REMOVED***
                this.destination.complete();
                this.unsubscribe();
            ***REMOVED***
        ***REMOVED***
    ***REMOVED***;
    return TakeSubscriber;
***REMOVED***(Subscriber_1.Subscriber));
//# sourceMappingURL=take.js.map