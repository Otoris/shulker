"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var EmptyError_1 = require("../util/EmptyError");
var Subscriber_1 = require("../Subscriber");
function throwIfEmpty(errorFactory) ***REMOVED***
    if (errorFactory === void 0) ***REMOVED*** errorFactory = defaultErrorFactory; ***REMOVED***
    return function (source) ***REMOVED***
        return source.lift(new ThrowIfEmptyOperator(errorFactory));
    ***REMOVED***;
***REMOVED***
exports.throwIfEmpty = throwIfEmpty;
var ThrowIfEmptyOperator = (function () ***REMOVED***
    function ThrowIfEmptyOperator(errorFactory) ***REMOVED***
        this.errorFactory = errorFactory;
    ***REMOVED***
    ThrowIfEmptyOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));
    ***REMOVED***;
    return ThrowIfEmptyOperator;
***REMOVED***());
var ThrowIfEmptySubscriber = (function (_super) ***REMOVED***
    __extends(ThrowIfEmptySubscriber, _super);
    function ThrowIfEmptySubscriber(destination, errorFactory) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.errorFactory = errorFactory;
        _this.hasValue = false;
        return _this;
    ***REMOVED***
    ThrowIfEmptySubscriber.prototype._next = function (value) ***REMOVED***
        this.hasValue = true;
        this.destination.next(value);
    ***REMOVED***;
    ThrowIfEmptySubscriber.prototype._complete = function () ***REMOVED***
        if (!this.hasValue) ***REMOVED***
            var err = void 0;
            try ***REMOVED***
                err = this.errorFactory();
            ***REMOVED***
            catch (e) ***REMOVED***
                err = e;
            ***REMOVED***
            this.destination.error(err);
        ***REMOVED***
        else ***REMOVED***
            return this.destination.complete();
        ***REMOVED***
    ***REMOVED***;
    return ThrowIfEmptySubscriber;
***REMOVED***(Subscriber_1.Subscriber));
function defaultErrorFactory() ***REMOVED***
    return new EmptyError_1.EmptyError();
***REMOVED***
//# sourceMappingURL=throwIfEmpty.js.map