"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var Subscriber_1 = require("../Subscriber");
function skipWhile(predicate) ***REMOVED***
    return function (source) ***REMOVED*** return source.lift(new SkipWhileOperator(predicate)); ***REMOVED***;
***REMOVED***
exports.skipWhile = skipWhile;
var SkipWhileOperator = (function () ***REMOVED***
    function SkipWhileOperator(predicate) ***REMOVED***
        this.predicate = predicate;
    ***REMOVED***
    SkipWhileOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
    ***REMOVED***;
    return SkipWhileOperator;
***REMOVED***());
var SkipWhileSubscriber = (function (_super) ***REMOVED***
    __extends(SkipWhileSubscriber, _super);
    function SkipWhileSubscriber(destination, predicate) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.predicate = predicate;
        _this.skipping = true;
        _this.index = 0;
        return _this;
    ***REMOVED***
    SkipWhileSubscriber.prototype._next = function (value) ***REMOVED***
        var destination = this.destination;
        if (this.skipping) ***REMOVED***
            this.tryCallPredicate(value);
        ***REMOVED***
        if (!this.skipping) ***REMOVED***
            destination.next(value);
        ***REMOVED***
    ***REMOVED***;
    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) ***REMOVED***
        try ***REMOVED***
            var result = this.predicate(value, this.index++);
            this.skipping = Boolean(result);
        ***REMOVED***
        catch (err) ***REMOVED***
            this.destination.error(err);
        ***REMOVED***
    ***REMOVED***;
    return SkipWhileSubscriber;
***REMOVED***(Subscriber_1.Subscriber));
//# sourceMappingURL=skipWhile.js.map