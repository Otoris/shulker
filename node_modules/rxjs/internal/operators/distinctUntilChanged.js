"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var Subscriber_1 = require("../Subscriber");
function distinctUntilChanged(compare, keySelector) ***REMOVED***
    return function (source) ***REMOVED*** return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); ***REMOVED***;
***REMOVED***
exports.distinctUntilChanged = distinctUntilChanged;
var DistinctUntilChangedOperator = (function () ***REMOVED***
    function DistinctUntilChangedOperator(compare, keySelector) ***REMOVED***
        this.compare = compare;
        this.keySelector = keySelector;
    ***REMOVED***
    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
    ***REMOVED***;
    return DistinctUntilChangedOperator;
***REMOVED***());
var DistinctUntilChangedSubscriber = (function (_super) ***REMOVED***
    __extends(DistinctUntilChangedSubscriber, _super);
    function DistinctUntilChangedSubscriber(destination, compare, keySelector) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.keySelector = keySelector;
        _this.hasKey = false;
        if (typeof compare === 'function') ***REMOVED***
            _this.compare = compare;
        ***REMOVED***
        return _this;
    ***REMOVED***
    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) ***REMOVED***
        return x === y;
    ***REMOVED***;
    DistinctUntilChangedSubscriber.prototype._next = function (value) ***REMOVED***
        var key;
        try ***REMOVED***
            var keySelector = this.keySelector;
            key = keySelector ? keySelector(value) : value;
        ***REMOVED***
        catch (err) ***REMOVED***
            return this.destination.error(err);
        ***REMOVED***
        var result = false;
        if (this.hasKey) ***REMOVED***
            try ***REMOVED***
                var compare = this.compare;
                result = compare(this.key, key);
            ***REMOVED***
            catch (err) ***REMOVED***
                return this.destination.error(err);
            ***REMOVED***
        ***REMOVED***
        else ***REMOVED***
            this.hasKey = true;
        ***REMOVED***
        if (!result) ***REMOVED***
            this.key = key;
            this.destination.next(value);
        ***REMOVED***
    ***REMOVED***;
    return DistinctUntilChangedSubscriber;
***REMOVED***(Subscriber_1.Subscriber));
//# sourceMappingURL=distinctUntilChanged.js.map