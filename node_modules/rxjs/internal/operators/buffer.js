"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var OuterSubscriber_1 = require("../OuterSubscriber");
var subscribeToResult_1 = require("../util/subscribeToResult");
function buffer(closingNotifier) ***REMOVED***
    return function bufferOperatorFunction(source) ***REMOVED***
        return source.lift(new BufferOperator(closingNotifier));
    ***REMOVED***;
***REMOVED***
exports.buffer = buffer;
var BufferOperator = (function () ***REMOVED***
    function BufferOperator(closingNotifier) ***REMOVED***
        this.closingNotifier = closingNotifier;
    ***REMOVED***
    BufferOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    ***REMOVED***;
    return BufferOperator;
***REMOVED***());
var BufferSubscriber = (function (_super) ***REMOVED***
    __extends(BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.buffer = [];
        _this.add(subscribeToResult_1.subscribeToResult(_this, closingNotifier));
        return _this;
    ***REMOVED***
    BufferSubscriber.prototype._next = function (value) ***REMOVED***
        this.buffer.push(value);
    ***REMOVED***;
    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) ***REMOVED***
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    ***REMOVED***;
    return BufferSubscriber;
***REMOVED***(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=buffer.js.map