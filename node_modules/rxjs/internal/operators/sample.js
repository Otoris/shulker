"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var OuterSubscriber_1 = require("../OuterSubscriber");
var subscribeToResult_1 = require("../util/subscribeToResult");
function sample(notifier) ***REMOVED***
    return function (source) ***REMOVED*** return source.lift(new SampleOperator(notifier)); ***REMOVED***;
***REMOVED***
exports.sample = sample;
var SampleOperator = (function () ***REMOVED***
    function SampleOperator(notifier) ***REMOVED***
        this.notifier = notifier;
    ***REMOVED***
    SampleOperator.prototype.call = function (subscriber, source) ***REMOVED***
        var sampleSubscriber = new SampleSubscriber(subscriber);
        var subscription = source.subscribe(sampleSubscriber);
        subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber, this.notifier));
        return subscription;
    ***REMOVED***;
    return SampleOperator;
***REMOVED***());
var SampleSubscriber = (function (_super) ***REMOVED***
    __extends(SampleSubscriber, _super);
    function SampleSubscriber() ***REMOVED***
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasValue = false;
        return _this;
    ***REMOVED***
    SampleSubscriber.prototype._next = function (value) ***REMOVED***
        this.value = value;
        this.hasValue = true;
    ***REMOVED***;
    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) ***REMOVED***
        this.emitValue();
    ***REMOVED***;
    SampleSubscriber.prototype.notifyComplete = function () ***REMOVED***
        this.emitValue();
    ***REMOVED***;
    SampleSubscriber.prototype.emitValue = function () ***REMOVED***
        if (this.hasValue) ***REMOVED***
            this.hasValue = false;
            this.destination.next(this.value);
        ***REMOVED***
    ***REMOVED***;
    return SampleSubscriber;
***REMOVED***(OuterSubscriber_1.OuterSubscriber));
//# sourceMappingURL=sample.js.map