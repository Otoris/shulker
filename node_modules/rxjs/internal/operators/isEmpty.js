"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var Subscriber_1 = require("../Subscriber");
function isEmpty() ***REMOVED***
    return function (source) ***REMOVED*** return source.lift(new IsEmptyOperator()); ***REMOVED***;
***REMOVED***
exports.isEmpty = isEmpty;
var IsEmptyOperator = (function () ***REMOVED***
    function IsEmptyOperator() ***REMOVED***
    ***REMOVED***
    IsEmptyOperator.prototype.call = function (observer, source) ***REMOVED***
        return source.subscribe(new IsEmptySubscriber(observer));
    ***REMOVED***;
    return IsEmptyOperator;
***REMOVED***());
var IsEmptySubscriber = (function (_super) ***REMOVED***
    __extends(IsEmptySubscriber, _super);
    function IsEmptySubscriber(destination) ***REMOVED***
        return _super.call(this, destination) || this;
    ***REMOVED***
    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) ***REMOVED***
        var destination = this.destination;
        destination.next(isEmpty);
        destination.complete();
    ***REMOVED***;
    IsEmptySubscriber.prototype._next = function (value) ***REMOVED***
        this.notifyComplete(false);
    ***REMOVED***;
    IsEmptySubscriber.prototype._complete = function () ***REMOVED***
        this.notifyComplete(true);
    ***REMOVED***;
    return IsEmptySubscriber;
***REMOVED***(Subscriber_1.Subscriber));
//# sourceMappingURL=isEmpty.js.map