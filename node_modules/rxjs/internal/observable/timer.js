"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var Observable_1 = require("../Observable");
var async_1 = require("../scheduler/async");
var isNumeric_1 = require("../util/isNumeric");
var isScheduler_1 = require("../util/isScheduler");
function timer(dueTime, periodOrScheduler, scheduler) ***REMOVED***
    if (dueTime === void 0) ***REMOVED*** dueTime = 0; ***REMOVED***
    var period = -1;
    if (isNumeric_1.isNumeric(periodOrScheduler)) ***REMOVED***
        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
    ***REMOVED***
    else if (isScheduler_1.isScheduler(periodOrScheduler)) ***REMOVED***
        scheduler = periodOrScheduler;
    ***REMOVED***
    if (!isScheduler_1.isScheduler(scheduler)) ***REMOVED***
        scheduler = async_1.async;
    ***REMOVED***
    return new Observable_1.Observable(function (subscriber) ***REMOVED***
        var due = isNumeric_1.isNumeric(dueTime)
            ? dueTime
            : (+dueTime - scheduler.now());
        return scheduler.schedule(dispatch, due, ***REMOVED***
            index: 0, period: period, subscriber: subscriber
        ***REMOVED***);
    ***REMOVED***);
***REMOVED***
exports.timer = timer;
function dispatch(state) ***REMOVED***
    var index = state.index, period = state.period, subscriber = state.subscriber;
    subscriber.next(index);
    if (subscriber.closed) ***REMOVED***
        return;
    ***REMOVED***
    else if (period === -1) ***REMOVED***
        return subscriber.complete();
    ***REMOVED***
    state.index = index + 1;
    this.schedule(state, period);
***REMOVED***
//# sourceMappingURL=timer.js.map