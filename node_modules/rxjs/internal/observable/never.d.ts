import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
/**
 * An Observable that emits no items to the Observer and never completes.
 *
 * ![](never.png)
 *
 * A simple Observable that emits neither values nor errors nor the completion
 * notification. It can be used for testing purposes or for composing with other
 * Observables. Please note that by never emitting a complete notification, this
 * Observable keeps the subscription from being disposed automatically.
 * Subscriptions need to be manually disposed.
 *
 * ##  Example
 * ### Emit the number 7, then never emit anything else (not even complete)
 * ```ts
 * import ***REMOVED*** NEVER ***REMOVED*** from 'rxjs';
 * import ***REMOVED*** startWith ***REMOVED*** from 'rxjs/operators';
 *
 * function info() ***REMOVED***
 *   console.log('Will not be called');
 * ***REMOVED***
 * const result = NEVER.pipe(startWith(7));
 * result.subscribe(x => console.log(x), info, info);
 *
 * ```
 *
 * @see ***REMOVED***@link Observable***REMOVED***
 * @see ***REMOVED***@link index/EMPTY***REMOVED***
 * @see ***REMOVED***@link of***REMOVED***
 * @see ***REMOVED***@link throwError***REMOVED***
 */
export declare const NEVER: Observable<never>;
/**
 * @deprecated Deprecated in favor of using ***REMOVED***@link NEVER***REMOVED*** constant.
 */
export declare function never(): Observable<never>;
