"use strict";
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var empty_1 = require("./observable/empty");
var of_1 = require("./observable/of");
var throwError_1 = require("./observable/throwError");
var NotificationKind;
(function (NotificationKind) ***REMOVED***
    NotificationKind["NEXT"] = "N";
    NotificationKind["ERROR"] = "E";
    NotificationKind["COMPLETE"] = "C";
***REMOVED***)(NotificationKind = exports.NotificationKind || (exports.NotificationKind = ***REMOVED******REMOVED***));
var Notification = (function () ***REMOVED***
    function Notification(kind, value, error) ***REMOVED***
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    ***REMOVED***
    Notification.prototype.observe = function (observer) ***REMOVED***
        switch (this.kind) ***REMOVED***
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        ***REMOVED***
    ***REMOVED***;
    Notification.prototype.do = function (next, error, complete) ***REMOVED***
        var kind = this.kind;
        switch (kind) ***REMOVED***
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        ***REMOVED***
    ***REMOVED***;
    Notification.prototype.accept = function (nextOrObserver, error, complete) ***REMOVED***
        if (nextOrObserver && typeof nextOrObserver.next === 'function') ***REMOVED***
            return this.observe(nextOrObserver);
        ***REMOVED***
        else ***REMOVED***
            return this.do(nextOrObserver, error, complete);
        ***REMOVED***
    ***REMOVED***;
    Notification.prototype.toObservable = function () ***REMOVED***
        var kind = this.kind;
        switch (kind) ***REMOVED***
            case 'N':
                return of_1.of(this.value);
            case 'E':
                return throwError_1.throwError(this.error);
            case 'C':
                return empty_1.empty();
        ***REMOVED***
        throw new Error('unexpected notification kind value');
    ***REMOVED***;
    Notification.createNext = function (value) ***REMOVED***
        if (typeof value !== 'undefined') ***REMOVED***
            return new Notification('N', value);
        ***REMOVED***
        return Notification.undefinedValueNotification;
    ***REMOVED***;
    Notification.createError = function (err) ***REMOVED***
        return new Notification('E', undefined, err);
    ***REMOVED***;
    Notification.createComplete = function () ***REMOVED***
        return Notification.completeNotification;
    ***REMOVED***;
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
***REMOVED***());
exports.Notification = Notification;
//# sourceMappingURL=Notification.js.map