"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var Subject_1 = require("./Subject");
var ObjectUnsubscribedError_1 = require("./util/ObjectUnsubscribedError");
var BehaviorSubject = (function (_super) ***REMOVED***
    __extends(BehaviorSubject, _super);
    function BehaviorSubject(_value) ***REMOVED***
        var _this = _super.call(this) || this;
        _this._value = _value;
        return _this;
    ***REMOVED***
    Object.defineProperty(BehaviorSubject.prototype, "value", ***REMOVED***
        get: function () ***REMOVED***
            return this.getValue();
        ***REMOVED***,
        enumerable: true,
        configurable: true
    ***REMOVED***);
    BehaviorSubject.prototype._subscribe = function (subscriber) ***REMOVED***
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) ***REMOVED***
            subscriber.next(this._value);
        ***REMOVED***
        return subscription;
    ***REMOVED***;
    BehaviorSubject.prototype.getValue = function () ***REMOVED***
        if (this.hasError) ***REMOVED***
            throw this.thrownError;
        ***REMOVED***
        else if (this.closed) ***REMOVED***
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        ***REMOVED***
        else ***REMOVED***
            return this._value;
        ***REMOVED***
    ***REMOVED***;
    BehaviorSubject.prototype.next = function (value) ***REMOVED***
        _super.prototype.next.call(this, this._value = value);
    ***REMOVED***;
    return BehaviorSubject;
***REMOVED***(Subject_1.Subject));
exports.BehaviorSubject = BehaviorSubject;
//# sourceMappingURL=BehaviorSubject.js.map