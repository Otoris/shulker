"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var AsyncAction_1 = require("./AsyncAction");
var AnimationFrameAction = (function (_super) ***REMOVED***
    __extends(AnimationFrameAction, _super);
    function AnimationFrameAction(scheduler, work) ***REMOVED***
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    ***REMOVED***
    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) ***REMOVED***
        if (delay === void 0) ***REMOVED*** delay = 0; ***REMOVED***
        if (delay !== null && delay > 0) ***REMOVED***
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        ***REMOVED***
        scheduler.actions.push(this);
        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () ***REMOVED*** return scheduler.flush(null); ***REMOVED***));
    ***REMOVED***;
    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) ***REMOVED***
        if (delay === void 0) ***REMOVED*** delay = 0; ***REMOVED***
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) ***REMOVED***
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        ***REMOVED***
        if (scheduler.actions.length === 0) ***REMOVED***
            cancelAnimationFrame(id);
            scheduler.scheduled = undefined;
        ***REMOVED***
        return undefined;
    ***REMOVED***;
    return AnimationFrameAction;
***REMOVED***(AsyncAction_1.AsyncAction));
exports.AnimationFrameAction = AnimationFrameAction;
//# sourceMappingURL=AnimationFrameAction.js.map