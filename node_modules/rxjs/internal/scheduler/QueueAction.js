"use strict";
var __extends = (this && this.__extends) || (function () ***REMOVED***
    var extendStatics = function (d, b) ***REMOVED***
        extendStatics = Object.setPrototypeOf ||
            (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
            function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;
        return extendStatics(d, b);
    ***REMOVED***
    return function (d, b) ***REMOVED***
        extendStatics(d, b);
        function __() ***REMOVED*** this.constructor = d; ***REMOVED***
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    ***REMOVED***;
***REMOVED***)();
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
var AsyncAction_1 = require("./AsyncAction");
var QueueAction = (function (_super) ***REMOVED***
    __extends(QueueAction, _super);
    function QueueAction(scheduler, work) ***REMOVED***
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    ***REMOVED***
    QueueAction.prototype.schedule = function (state, delay) ***REMOVED***
        if (delay === void 0) ***REMOVED*** delay = 0; ***REMOVED***
        if (delay > 0) ***REMOVED***
            return _super.prototype.schedule.call(this, state, delay);
        ***REMOVED***
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    ***REMOVED***;
    QueueAction.prototype.execute = function (state, delay) ***REMOVED***
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    ***REMOVED***;
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) ***REMOVED***
        if (delay === void 0) ***REMOVED*** delay = 0; ***REMOVED***
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) ***REMOVED***
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        ***REMOVED***
        return scheduler.flush(this);
    ***REMOVED***;
    return QueueAction;
***REMOVED***(AsyncAction_1.AsyncAction));
exports.QueueAction = QueueAction;
//# sourceMappingURL=QueueAction.js.map