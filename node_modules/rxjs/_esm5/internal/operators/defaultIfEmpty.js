/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
import * as tslib_1 from "tslib";
import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
export function defaultIfEmpty(defaultValue) ***REMOVED***
    if (defaultValue === void 0) ***REMOVED***
        defaultValue = null;
    ***REMOVED***
    return function (source) ***REMOVED*** return source.lift(new DefaultIfEmptyOperator(defaultValue)); ***REMOVED***;
***REMOVED***
var DefaultIfEmptyOperator = /*@__PURE__*/ (function () ***REMOVED***
    function DefaultIfEmptyOperator(defaultValue) ***REMOVED***
        this.defaultValue = defaultValue;
    ***REMOVED***
    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
    ***REMOVED***;
    return DefaultIfEmptyOperator;
***REMOVED***());
var DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) ***REMOVED***
    tslib_1.__extends(DefaultIfEmptySubscriber, _super);
    function DefaultIfEmptySubscriber(destination, defaultValue) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.defaultValue = defaultValue;
        _this.isEmpty = true;
        return _this;
    ***REMOVED***
    DefaultIfEmptySubscriber.prototype._next = function (value) ***REMOVED***
        this.isEmpty = false;
        this.destination.next(value);
    ***REMOVED***;
    DefaultIfEmptySubscriber.prototype._complete = function () ***REMOVED***
        if (this.isEmpty) ***REMOVED***
            this.destination.next(this.defaultValue);
        ***REMOVED***
        this.destination.complete();
    ***REMOVED***;
    return DefaultIfEmptySubscriber;
***REMOVED***(Subscriber));
//# sourceMappingURL=defaultIfEmpty.js.map
