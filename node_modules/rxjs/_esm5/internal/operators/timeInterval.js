/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */
import ***REMOVED*** async ***REMOVED*** from '../scheduler/async';
import ***REMOVED*** scan ***REMOVED*** from './scan';
import ***REMOVED*** defer ***REMOVED*** from '../observable/defer';
import ***REMOVED*** map ***REMOVED*** from './map';
export function timeInterval(scheduler) ***REMOVED***
    if (scheduler === void 0) ***REMOVED***
        scheduler = async;
    ***REMOVED***
    return function (source) ***REMOVED***
        return defer(function () ***REMOVED***
            return source.pipe(scan(function (_a, value) ***REMOVED***
                var current = _a.current;
                return (***REMOVED*** value: value, current: scheduler.now(), last: current ***REMOVED***);
            ***REMOVED***, ***REMOVED*** current: scheduler.now(), value: undefined, last: undefined ***REMOVED***), map(function (_a) ***REMOVED***
                var current = _a.current, last = _a.last, value = _a.value;
                return new TimeInterval(value, current - last);
            ***REMOVED***));
        ***REMOVED***);
    ***REMOVED***;
***REMOVED***
var TimeInterval = /*@__PURE__*/ (function () ***REMOVED***
    function TimeInterval(value, interval) ***REMOVED***
        this.value = value;
        this.interval = interval;
    ***REMOVED***
    return TimeInterval;
***REMOVED***());
export ***REMOVED*** TimeInterval ***REMOVED***;
//# sourceMappingURL=timeInterval.js.map
