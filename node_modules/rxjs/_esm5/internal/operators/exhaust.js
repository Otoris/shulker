/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
import * as tslib_1 from "tslib";
import ***REMOVED*** OuterSubscriber ***REMOVED*** from '../OuterSubscriber';
import ***REMOVED*** subscribeToResult ***REMOVED*** from '../util/subscribeToResult';
export function exhaust() ***REMOVED***
    return function (source) ***REMOVED*** return source.lift(new SwitchFirstOperator()); ***REMOVED***;
***REMOVED***
var SwitchFirstOperator = /*@__PURE__*/ (function () ***REMOVED***
    function SwitchFirstOperator() ***REMOVED***
    ***REMOVED***
    SwitchFirstOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new SwitchFirstSubscriber(subscriber));
    ***REMOVED***;
    return SwitchFirstOperator;
***REMOVED***());
var SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) ***REMOVED***
    tslib_1.__extends(SwitchFirstSubscriber, _super);
    function SwitchFirstSubscriber(destination) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.hasCompleted = false;
        _this.hasSubscription = false;
        return _this;
    ***REMOVED***
    SwitchFirstSubscriber.prototype._next = function (value) ***REMOVED***
        if (!this.hasSubscription) ***REMOVED***
            this.hasSubscription = true;
            this.add(subscribeToResult(this, value));
        ***REMOVED***
    ***REMOVED***;
    SwitchFirstSubscriber.prototype._complete = function () ***REMOVED***
        this.hasCompleted = true;
        if (!this.hasSubscription) ***REMOVED***
            this.destination.complete();
        ***REMOVED***
    ***REMOVED***;
    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) ***REMOVED***
        this.remove(innerSub);
        this.hasSubscription = false;
        if (this.hasCompleted) ***REMOVED***
            this.destination.complete();
        ***REMOVED***
    ***REMOVED***;
    return SwitchFirstSubscriber;
***REMOVED***(OuterSubscriber));
//# sourceMappingURL=exhaust.js.map
