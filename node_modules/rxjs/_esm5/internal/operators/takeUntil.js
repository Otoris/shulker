/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
import * as tslib_1 from "tslib";
import ***REMOVED*** OuterSubscriber ***REMOVED*** from '../OuterSubscriber';
import ***REMOVED*** subscribeToResult ***REMOVED*** from '../util/subscribeToResult';
export function takeUntil(notifier) ***REMOVED***
    return function (source) ***REMOVED*** return source.lift(new TakeUntilOperator(notifier)); ***REMOVED***;
***REMOVED***
var TakeUntilOperator = /*@__PURE__*/ (function () ***REMOVED***
    function TakeUntilOperator(notifier) ***REMOVED***
        this.notifier = notifier;
    ***REMOVED***
    TakeUntilOperator.prototype.call = function (subscriber, source) ***REMOVED***
        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);
        var notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);
        if (notifierSubscription && !takeUntilSubscriber.seenValue) ***REMOVED***
            takeUntilSubscriber.add(notifierSubscription);
            return source.subscribe(takeUntilSubscriber);
        ***REMOVED***
        return takeUntilSubscriber;
    ***REMOVED***;
    return TakeUntilOperator;
***REMOVED***());
var TakeUntilSubscriber = /*@__PURE__*/ (function (_super) ***REMOVED***
    tslib_1.__extends(TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.seenValue = false;
        return _this;
    ***REMOVED***
    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) ***REMOVED***
        this.seenValue = true;
        this.complete();
    ***REMOVED***;
    TakeUntilSubscriber.prototype.notifyComplete = function () ***REMOVED***
    ***REMOVED***;
    return TakeUntilSubscriber;
***REMOVED***(OuterSubscriber));
//# sourceMappingURL=takeUntil.js.map
