/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */
import ***REMOVED*** isArray ***REMOVED*** from '../util/isArray';
import ***REMOVED*** CombineLatestOperator ***REMOVED*** from '../observable/combineLatest';
import ***REMOVED*** from ***REMOVED*** from '../observable/from';
var none = ***REMOVED******REMOVED***;
export function combineLatest() ***REMOVED***
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) ***REMOVED***
        observables[_i] = arguments[_i];
    ***REMOVED***
    var project = null;
    if (typeof observables[observables.length - 1] === 'function') ***REMOVED***
        project = observables.pop();
    ***REMOVED***
    if (observables.length === 1 && isArray(observables[0])) ***REMOVED***
        observables = observables[0].slice();
    ***REMOVED***
    return function (source) ***REMOVED*** return source.lift.call(from([source].concat(observables)), new CombineLatestOperator(project)); ***REMOVED***;
***REMOVED***
//# sourceMappingURL=combineLatest.js.map
