/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
import * as tslib_1 from "tslib";
import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
export function dematerialize() ***REMOVED***
    return function dematerializeOperatorFunction(source) ***REMOVED***
        return source.lift(new DeMaterializeOperator());
    ***REMOVED***;
***REMOVED***
var DeMaterializeOperator = /*@__PURE__*/ (function () ***REMOVED***
    function DeMaterializeOperator() ***REMOVED***
    ***REMOVED***
    DeMaterializeOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new DeMaterializeSubscriber(subscriber));
    ***REMOVED***;
    return DeMaterializeOperator;
***REMOVED***());
var DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) ***REMOVED***
    tslib_1.__extends(DeMaterializeSubscriber, _super);
    function DeMaterializeSubscriber(destination) ***REMOVED***
        return _super.call(this, destination) || this;
    ***REMOVED***
    DeMaterializeSubscriber.prototype._next = function (value) ***REMOVED***
        value.observe(this.destination);
    ***REMOVED***;
    return DeMaterializeSubscriber;
***REMOVED***(Subscriber));
//# sourceMappingURL=dematerialize.js.map
