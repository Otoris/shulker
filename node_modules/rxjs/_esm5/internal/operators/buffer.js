/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */
import * as tslib_1 from "tslib";
import ***REMOVED*** OuterSubscriber ***REMOVED*** from '../OuterSubscriber';
import ***REMOVED*** subscribeToResult ***REMOVED*** from '../util/subscribeToResult';
export function buffer(closingNotifier) ***REMOVED***
    return function bufferOperatorFunction(source) ***REMOVED***
        return source.lift(new BufferOperator(closingNotifier));
    ***REMOVED***;
***REMOVED***
var BufferOperator = /*@__PURE__*/ (function () ***REMOVED***
    function BufferOperator(closingNotifier) ***REMOVED***
        this.closingNotifier = closingNotifier;
    ***REMOVED***
    BufferOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
    ***REMOVED***;
    return BufferOperator;
***REMOVED***());
var BufferSubscriber = /*@__PURE__*/ (function (_super) ***REMOVED***
    tslib_1.__extends(BufferSubscriber, _super);
    function BufferSubscriber(destination, closingNotifier) ***REMOVED***
        var _this = _super.call(this, destination) || this;
        _this.buffer = [];
        _this.add(subscribeToResult(_this, closingNotifier));
        return _this;
    ***REMOVED***
    BufferSubscriber.prototype._next = function (value) ***REMOVED***
        this.buffer.push(value);
    ***REMOVED***;
    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) ***REMOVED***
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
    ***REMOVED***;
    return BufferSubscriber;
***REMOVED***(OuterSubscriber));
//# sourceMappingURL=buffer.js.map
