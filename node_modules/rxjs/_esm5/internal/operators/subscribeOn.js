/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */
import ***REMOVED*** SubscribeOnObservable ***REMOVED*** from '../observable/SubscribeOnObservable';
export function subscribeOn(scheduler, delay) ***REMOVED***
    if (delay === void 0) ***REMOVED***
        delay = 0;
    ***REMOVED***
    return function subscribeOnOperatorFunction(source) ***REMOVED***
        return source.lift(new SubscribeOnOperator(scheduler, delay));
    ***REMOVED***;
***REMOVED***
var SubscribeOnOperator = /*@__PURE__*/ (function () ***REMOVED***
    function SubscribeOnOperator(scheduler, delay) ***REMOVED***
        this.scheduler = scheduler;
        this.delay = delay;
    ***REMOVED***
    SubscribeOnOperator.prototype.call = function (subscriber, source) ***REMOVED***
        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);
    ***REMOVED***;
    return SubscribeOnOperator;
***REMOVED***());
//# sourceMappingURL=subscribeOn.js.map
