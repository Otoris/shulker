/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */
import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
import ***REMOVED*** isScheduler ***REMOVED*** from '../util/isScheduler';
import ***REMOVED*** mergeAll ***REMOVED*** from '../operators/mergeAll';
import ***REMOVED*** fromArray ***REMOVED*** from './fromArray';
export function merge() ***REMOVED***
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) ***REMOVED***
        observables[_i] = arguments[_i];
    ***REMOVED***
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (isScheduler(last)) ***REMOVED***
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') ***REMOVED***
            concurrent = observables.pop();
        ***REMOVED***
    ***REMOVED***
    else if (typeof last === 'number') ***REMOVED***
        concurrent = observables.pop();
    ***REMOVED***
    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) ***REMOVED***
        return observables[0];
    ***REMOVED***
    return mergeAll(concurrent)(fromArray(observables, scheduler));
***REMOVED***
//# sourceMappingURL=merge.js.map
