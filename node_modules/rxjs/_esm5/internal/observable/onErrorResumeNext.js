/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */
import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
import ***REMOVED*** from ***REMOVED*** from './from';
import ***REMOVED*** isArray ***REMOVED*** from '../util/isArray';
import ***REMOVED*** EMPTY ***REMOVED*** from './empty';
export function onErrorResumeNext() ***REMOVED***
    var sources = [];
    for (var _i = 0; _i < arguments.length; _i++) ***REMOVED***
        sources[_i] = arguments[_i];
    ***REMOVED***
    if (sources.length === 0) ***REMOVED***
        return EMPTY;
    ***REMOVED***
    var first = sources[0], remainder = sources.slice(1);
    if (sources.length === 1 && isArray(first)) ***REMOVED***
        return onErrorResumeNext.apply(void 0, first);
    ***REMOVED***
    return new Observable(function (subscriber) ***REMOVED***
        var subNext = function () ***REMOVED*** return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); ***REMOVED***;
        return from(first).subscribe(***REMOVED***
            next: function (value) ***REMOVED*** subscriber.next(value); ***REMOVED***,
            error: subNext,
            complete: subNext,
        ***REMOVED***);
    ***REMOVED***);
***REMOVED***
//# sourceMappingURL=onErrorResumeNext.js.map
