import ***REMOVED*** Subject ***REMOVED*** from '../Subject';
import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';
import ***REMOVED*** Subscription ***REMOVED*** from '../Subscription';
import ***REMOVED*** Scheduler ***REMOVED*** from '../Scheduler';
import ***REMOVED*** TestMessage ***REMOVED*** from './TestMessage';
import ***REMOVED*** SubscriptionLog ***REMOVED*** from './SubscriptionLog';
import ***REMOVED*** SubscriptionLoggable ***REMOVED*** from './SubscriptionLoggable';
import ***REMOVED*** applyMixins ***REMOVED*** from '../util/applyMixins';

/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends ***REMOVED***Ignored***REMOVED***
 */
export class HotObservable<T> extends Subject<T> implements SubscriptionLoggable ***REMOVED***
  public subscriptions: SubscriptionLog[] = [];
  scheduler: Scheduler;
  logSubscribedFrame: () => number;
  logUnsubscribedFrame: (index: number) => void;

  constructor(public messages: TestMessage[],
              scheduler: Scheduler) ***REMOVED***
    super();
    this.scheduler = scheduler;
  ***REMOVED***

  /** @deprecated This is an internal implementation detail, do not use. */
  _subscribe(subscriber: Subscriber<any>): Subscription ***REMOVED***
    const subject: HotObservable<T> = this;
    const index = subject.logSubscribedFrame();
    const subscription = new Subscription();
    subscription.add(new Subscription(() => ***REMOVED***
      subject.logUnsubscribedFrame(index);
    ***REMOVED***));
    subscription.add(super._subscribe(subscriber));
    return subscription;
  ***REMOVED***

  setup() ***REMOVED***
    const subject = this;
    const messagesLength = subject.messages.length;
    /* tslint:disable:no-var-keyword */
    for (var i = 0; i < messagesLength; i++) ***REMOVED***
      (() => ***REMOVED***
        var message = subject.messages[i];
   /* tslint:enable */
        subject.scheduler.schedule(
          () => ***REMOVED*** message.notification.observe(subject); ***REMOVED***,
          message.frame
        );
      ***REMOVED***)();
    ***REMOVED***
  ***REMOVED***
***REMOVED***
applyMixins(HotObservable, [SubscriptionLoggable]);
