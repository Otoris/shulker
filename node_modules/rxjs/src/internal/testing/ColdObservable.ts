import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
import ***REMOVED*** Subscription ***REMOVED*** from '../Subscription';
import ***REMOVED*** Scheduler ***REMOVED*** from '../Scheduler';
import ***REMOVED*** TestMessage ***REMOVED*** from './TestMessage';
import ***REMOVED*** SubscriptionLog ***REMOVED*** from './SubscriptionLog';
import ***REMOVED*** SubscriptionLoggable ***REMOVED*** from './SubscriptionLoggable';
import ***REMOVED*** applyMixins ***REMOVED*** from '../util/applyMixins';
import ***REMOVED*** Subscriber ***REMOVED*** from '../Subscriber';

/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends ***REMOVED***Ignored***REMOVED***
 */
export class ColdObservable<T> extends Observable<T> implements SubscriptionLoggable ***REMOVED***
  public subscriptions: SubscriptionLog[] = [];
  scheduler: Scheduler;
  logSubscribedFrame: () => number;
  logUnsubscribedFrame: (index: number) => void;

  constructor(public messages: TestMessage[],
              scheduler: Scheduler) ***REMOVED***
    super(function (this: Observable<T>, subscriber: Subscriber<any>) ***REMOVED***
      const observable: ColdObservable<T> = this as any;
      const index = observable.logSubscribedFrame();
      const subscription = new Subscription();
      subscription.add(new Subscription(() => ***REMOVED***
        observable.logUnsubscribedFrame(index);
      ***REMOVED***));
      observable.scheduleMessages(subscriber);
      return subscription;
    ***REMOVED***);
    this.scheduler = scheduler;
  ***REMOVED***

  scheduleMessages(subscriber: Subscriber<any>) ***REMOVED***
    const messagesLength = this.messages.length;
    for (let i = 0; i < messagesLength; i++) ***REMOVED***
      const message = this.messages[i];
      subscriber.add(
        this.scheduler.schedule((***REMOVED*** message, subscriber ***REMOVED***) => ***REMOVED*** message.notification.observe(subscriber); ***REMOVED***,
          message.frame,
          ***REMOVED*** message, subscriber ***REMOVED***)
      );
    ***REMOVED***
  ***REMOVED***
***REMOVED***
applyMixins(ColdObservable, [SubscriptionLoggable]);
