import ***REMOVED*** AsyncAction ***REMOVED*** from './AsyncAction';
import ***REMOVED*** AsyncScheduler ***REMOVED*** from './AsyncScheduler';

export class AsapScheduler extends AsyncScheduler ***REMOVED***
  public flush(action?: AsyncAction<any>): void ***REMOVED***

    this.active = true;
    this.scheduled = undefined;

    const ***REMOVED***actions***REMOVED*** = this;
    let error: any;
    let index: number = -1;
    let count: number = actions.length;
    action = action || actions.shift();

    do ***REMOVED***
      if (error = action.execute(action.state, action.delay)) ***REMOVED***
        break;
      ***REMOVED***
    ***REMOVED*** while (++index < count && (action = actions.shift()));

    this.active = false;

    if (error) ***REMOVED***
      while (++index < count && (action = actions.shift())) ***REMOVED***
        action.unsubscribe();
      ***REMOVED***
      throw error;
    ***REMOVED***
  ***REMOVED***
***REMOVED***
