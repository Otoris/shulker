import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
import ***REMOVED*** BehaviorSubject ***REMOVED*** from '../BehaviorSubject';
import ***REMOVED*** multicast ***REMOVED*** from './multicast';
import ***REMOVED*** ConnectableObservable ***REMOVED*** from '../observable/ConnectableObservable';
import ***REMOVED*** UnaryFunction ***REMOVED*** from '../types';

/**
 * @param value
 * @return ***REMOVED***ConnectableObservable<T>***REMOVED***
 * @method publishBehavior
 * @owner Observable
 */
export function publishBehavior<T>(value: T):  UnaryFunction<Observable<T>, ConnectableObservable<T>> ***REMOVED***
  return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;
***REMOVED***
