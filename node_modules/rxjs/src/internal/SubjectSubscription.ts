import ***REMOVED*** Subject ***REMOVED*** from './Subject';
import ***REMOVED*** Observer ***REMOVED*** from './types';
import ***REMOVED*** Subscription ***REMOVED*** from './Subscription';

/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends ***REMOVED***Ignored***REMOVED***
 */
export class SubjectSubscription<T> extends Subscription ***REMOVED***
  closed: boolean = false;

  constructor(public subject: Subject<T>, public subscriber: Observer<T>) ***REMOVED***
    super();
  ***REMOVED***

  unsubscribe() ***REMOVED***
    if (this.closed) ***REMOVED***
      return;
    ***REMOVED***

    this.closed = true;

    const subject = this.subject;
    const observers = subject.observers;

    this.subject = null;

    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) ***REMOVED***
      return;
    ***REMOVED***

    const subscriberIndex = observers.indexOf(this.subscriber);

    if (subscriberIndex !== -1) ***REMOVED***
      observers.splice(subscriberIndex, 1);
    ***REMOVED***
  ***REMOVED***
***REMOVED***
