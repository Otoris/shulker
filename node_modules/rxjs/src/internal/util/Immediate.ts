let nextHandle = 1;
const RESOLVED = (() => Promise.resolve())();
const activeHandles: ***REMOVED*** [key: number]: any ***REMOVED*** = ***REMOVED******REMOVED***;

/**
 * Finds the handle in the list of active handles, and removes it.
 * Returns `true` if found, `false` otherwise. Used both to clear
 * Immediate scheduled tasks, and to identify if a task should be scheduled.
 */
function findAndClearHandle(handle: number): boolean ***REMOVED***
  if (handle in activeHandles) ***REMOVED***
    delete activeHandles[handle];
    return true;
  ***REMOVED***
  return false;
***REMOVED***

/**
 * Helper functions to schedule and unschedule microtasks.
 */
export const Immediate = ***REMOVED***
  setImmediate(cb: () => void): number ***REMOVED***
    const handle = nextHandle++;
    activeHandles[handle] = true;
    RESOLVED.then(() => findAndClearHandle(handle) && cb());
    return handle;
  ***REMOVED***,

  clearImmediate(handle: number): void ***REMOVED***
    findAndClearHandle(handle);
  ***REMOVED***,
***REMOVED***;

/**
 * Used for internal testing purposes only. Do not export from library.
 */
export const TestTools = ***REMOVED***
  pending() ***REMOVED***
    return Object.keys(activeHandles).length;
  ***REMOVED***
***REMOVED***;
