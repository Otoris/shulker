import ***REMOVED*** Observable ***REMOVED*** from '../Observable';
import ***REMOVED*** SchedulerLike ***REMOVED*** from '../types';
import ***REMOVED*** subscribeToIterable ***REMOVED*** from '../util/subscribeToIterable';
import ***REMOVED*** scheduleIterable ***REMOVED*** from '../scheduled/scheduleIterable';

export function fromIterable<T>(input: Iterable<T>, scheduler?: SchedulerLike) ***REMOVED***
  if (!input) ***REMOVED***
    throw new Error('Iterable cannot be null');
  ***REMOVED***
  if (!scheduler) ***REMOVED***
    return new Observable<T>(subscribeToIterable(input));
  ***REMOVED*** else ***REMOVED***
    return scheduleIterable(input, scheduler);
  ***REMOVED***
***REMOVED***
