###-begin-npm-completion-###
#
# npm command completion script
#
# Installation: npm completion >> ~/.bashrc  (or ~/.zshrc)
# Or, maybe: npm completion > /usr/local/etc/bash_completion.d/npm
#

COMP_WORDBREAKS=$***REMOVED***COMP_WORDBREAKS/=/***REMOVED***
COMP_WORDBREAKS=$***REMOVED***COMP_WORDBREAKS/@/***REMOVED***
export COMP_WORDBREAKS

if type complete &>/dev/null; then
  _npm_completion () ***REMOVED***
    local si="$IFS"
    IFS=$'\n' COMPREPLY=($(COMP_CWORD="$COMP_CWORD" \
                           COMP_LINE="$COMP_LINE" \
                           COMP_POINT="$COMP_POINT" \
                           npm completion -- "$***REMOVED***COMP_WORDS[@]***REMOVED***" \
                           2>/dev/null)) || return $?
    IFS="$si"
  ***REMOVED***
  complete -F _npm_completion npm
elif type compdef &>/dev/null; then
  _npm_completion() ***REMOVED***
    si=$IFS
    compadd -- $(COMP_CWORD=$((CURRENT-1)) \
                 COMP_LINE=$BUFFER \
                 COMP_POINT=0 \
                 npm completion -- "$***REMOVED***words[@]***REMOVED***" \
                 2>/dev/null)
    IFS=$si
  ***REMOVED***
  compdef _npm_completion npm
elif type compctl &>/dev/null; then
  _npm_completion () ***REMOVED***
    local cword line point words si
    read -Ac words
    read -cn cword
    let cword-=1
    read -l line
    read -ln point
    si="$IFS"
    IFS=$'\n' reply=($(COMP_CWORD="$cword" \
                       COMP_LINE="$line" \
                       COMP_POINT="$point" \
                       npm completion -- "$***REMOVED***words[@]***REMOVED***" \
                       2>/dev/null)) || return $?
    IFS="$si"
  ***REMOVED***
  compctl -K _npm_completion npm
fi
###-end-npm-completion-###
