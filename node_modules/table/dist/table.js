"use strict";

Object.defineProperty(exports, "__esModule", ***REMOVED***
  value: true
***REMOVED***);
exports.default = void 0;

var _drawTable = _interopRequireDefault(require("./drawTable"));

var _calculateCellWidthIndex = _interopRequireDefault(require("./calculateCellWidthIndex"));

var _makeConfig = _interopRequireDefault(require("./makeConfig"));

var _calculateRowHeightIndex = _interopRequireDefault(require("./calculateRowHeightIndex"));

var _mapDataUsingRowHeightIndex = _interopRequireDefault(require("./mapDataUsingRowHeightIndex"));

var _alignTableData = _interopRequireDefault(require("./alignTableData"));

var _padTableData = _interopRequireDefault(require("./padTableData"));

var _validateTableData = _interopRequireDefault(require("./validateTableData"));

var _stringifyTableData = _interopRequireDefault(require("./stringifyTableData"));

var _truncateTableData = _interopRequireDefault(require("./truncateTableData"));

function _interopRequireDefault(obj) ***REMOVED*** return obj && obj.__esModule ? obj : ***REMOVED*** default: obj ***REMOVED***; ***REMOVED***

/**
 * @typedef ***REMOVED***string***REMOVED*** table~cell
 */

/**
 * @typedef ***REMOVED***table~cell[]***REMOVED*** table~row
 */

/**
 * @typedef ***REMOVED***Object***REMOVED*** table~columns
 * @property ***REMOVED***string***REMOVED*** alignment Cell content alignment (enum: left, center, right) (default: left).
 * @property ***REMOVED***number***REMOVED*** width Column width (default: auto).
 * @property ***REMOVED***number***REMOVED*** truncate Number of characters are which the content will be truncated (default: Infinity).
 * @property ***REMOVED***boolean***REMOVED*** wrapWord When true the text is broken at the nearest space or one of the special characters
 * @property ***REMOVED***number***REMOVED*** paddingLeft Cell content padding width left (default: 1).
 * @property ***REMOVED***number***REMOVED*** paddingRight Cell content padding width right (default: 1).
 */

/**
 * @typedef ***REMOVED***Object***REMOVED*** table~border
 * @property ***REMOVED***string***REMOVED*** topBody
 * @property ***REMOVED***string***REMOVED*** topJoin
 * @property ***REMOVED***string***REMOVED*** topLeft
 * @property ***REMOVED***string***REMOVED*** topRight
 * @property ***REMOVED***string***REMOVED*** bottomBody
 * @property ***REMOVED***string***REMOVED*** bottomJoin
 * @property ***REMOVED***string***REMOVED*** bottomLeft
 * @property ***REMOVED***string***REMOVED*** bottomRight
 * @property ***REMOVED***string***REMOVED*** bodyLeft
 * @property ***REMOVED***string***REMOVED*** bodyRight
 * @property ***REMOVED***string***REMOVED*** bodyJoin
 * @property ***REMOVED***string***REMOVED*** joinBody
 * @property ***REMOVED***string***REMOVED*** joinLeft
 * @property ***REMOVED***string***REMOVED*** joinRight
 * @property ***REMOVED***string***REMOVED*** joinJoin
 */

/**
 * Used to tell whether to draw a horizontal line.
 * This callback is called for each non-content line of the table.
 * The default behavior is to always return true.
 *
 * @typedef ***REMOVED***Function***REMOVED*** drawHorizontalLine
 * @param ***REMOVED***number***REMOVED*** index
 * @param ***REMOVED***number***REMOVED*** size
 * @returns ***REMOVED***boolean***REMOVED***
 */

/**
 * @typedef ***REMOVED***Object***REMOVED*** table~config
 * @property ***REMOVED***table~border***REMOVED*** border
 * @property ***REMOVED***table~columns[]***REMOVED*** columns Column specific configuration.
 * @property ***REMOVED***table~columns***REMOVED*** columnDefault Default values for all columns. Column specific settings overwrite the default values.
 * @property ***REMOVED***table~drawHorizontalLine***REMOVED*** drawHorizontalLine
 * @property ***REMOVED***table~singleLine***REMOVED*** singleLine Horizontal lines inside the table are not drawn.
 */

/**
 * Generates a text table.
 *
 * @param ***REMOVED***table~row[]***REMOVED*** data
 * @param ***REMOVED***table~config***REMOVED*** userConfig
 * @returns ***REMOVED***string***REMOVED***
 */
const table = (data, userConfig = ***REMOVED******REMOVED***) => ***REMOVED***
  let rows;
  (0, _validateTableData.default)(data);
  rows = (0, _stringifyTableData.default)(data);
  const config = (0, _makeConfig.default)(rows, userConfig);
  rows = (0, _truncateTableData.default)(data, config);
  const rowHeightIndex = (0, _calculateRowHeightIndex.default)(rows, config);
  rows = (0, _mapDataUsingRowHeightIndex.default)(rows, rowHeightIndex, config);
  rows = (0, _alignTableData.default)(rows, config);
  rows = (0, _padTableData.default)(rows, config);
  const cellWidthIndex = (0, _calculateCellWidthIndex.default)(rows[0]);
  return (0, _drawTable.default)(rows, config.border, cellWidthIndex, rowHeightIndex, config.drawHorizontalLine, config.singleLine);
***REMOVED***;

var _default = table;
exports.default = _default;
//# sourceMappingURL=table.js.map