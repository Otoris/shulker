"use strict";

Object.defineProperty(exports, "__esModule", ***REMOVED***
  value: true
***REMOVED***);
exports.default = void 0;

var _sliceAnsi = _interopRequireDefault(require("slice-ansi"));

var _stringWidth = _interopRequireDefault(require("string-width"));

function _interopRequireDefault(obj) ***REMOVED*** return obj && obj.__esModule ? obj : ***REMOVED*** default: obj ***REMOVED***; ***REMOVED***

/**
 * Creates an array of strings split into groups the length of size.
 * This function works with strings that contain ASCII characters.
 *
 * wrapText is different from would-be "chunk" implementation
 * in that whitespace characters that occur on a chunk size limit are trimmed.
 *
 * @param ***REMOVED***string***REMOVED*** subject
 * @param ***REMOVED***number***REMOVED*** size
 * @returns ***REMOVED***Array***REMOVED***
 */
const wrapString = (subject, size) => ***REMOVED***
  let subjectSlice;
  subjectSlice = subject;
  const chunks = [];

  do ***REMOVED***
    chunks.push((0, _sliceAnsi.default)(subjectSlice, 0, size));
    subjectSlice = (0, _sliceAnsi.default)(subjectSlice, size).trim();
  ***REMOVED*** while ((0, _stringWidth.default)(subjectSlice));

  return chunks;
***REMOVED***;

var _default = wrapString;
exports.default = _default;
//# sourceMappingURL=wrapString.js.map