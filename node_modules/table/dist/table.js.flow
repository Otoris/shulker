import drawTable from './drawTable';
import calculateCellWidthIndex from './calculateCellWidthIndex';
import makeConfig from './makeConfig';
import calculateRowHeightIndex from './calculateRowHeightIndex';
import mapDataUsingRowHeightIndex from './mapDataUsingRowHeightIndex';
import alignTableData from './alignTableData';
import padTableData from './padTableData';
import validateTableData from './validateTableData';
import stringifyTableData from './stringifyTableData';
import truncateTableData from './truncateTableData';

/**
 * @typedef ***REMOVED***string***REMOVED*** table~cell
 */

/**
 * @typedef ***REMOVED***table~cell[]***REMOVED*** table~row
 */

/**
 * @typedef ***REMOVED***Object***REMOVED*** table~columns
 * @property ***REMOVED***string***REMOVED*** alignment Cell content alignment (enum: left, center, right) (default: left).
 * @property ***REMOVED***number***REMOVED*** width Column width (default: auto).
 * @property ***REMOVED***number***REMOVED*** truncate Number of characters are which the content will be truncated (default: Infinity).
 * @property ***REMOVED***boolean***REMOVED*** wrapWord When true the text is broken at the nearest space or one of the special characters
 * @property ***REMOVED***number***REMOVED*** paddingLeft Cell content padding width left (default: 1).
 * @property ***REMOVED***number***REMOVED*** paddingRight Cell content padding width right (default: 1).
 */

/**
 * @typedef ***REMOVED***Object***REMOVED*** table~border
 * @property ***REMOVED***string***REMOVED*** topBody
 * @property ***REMOVED***string***REMOVED*** topJoin
 * @property ***REMOVED***string***REMOVED*** topLeft
 * @property ***REMOVED***string***REMOVED*** topRight
 * @property ***REMOVED***string***REMOVED*** bottomBody
 * @property ***REMOVED***string***REMOVED*** bottomJoin
 * @property ***REMOVED***string***REMOVED*** bottomLeft
 * @property ***REMOVED***string***REMOVED*** bottomRight
 * @property ***REMOVED***string***REMOVED*** bodyLeft
 * @property ***REMOVED***string***REMOVED*** bodyRight
 * @property ***REMOVED***string***REMOVED*** bodyJoin
 * @property ***REMOVED***string***REMOVED*** joinBody
 * @property ***REMOVED***string***REMOVED*** joinLeft
 * @property ***REMOVED***string***REMOVED*** joinRight
 * @property ***REMOVED***string***REMOVED*** joinJoin
 */

/**
 * Used to tell whether to draw a horizontal line.
 * This callback is called for each non-content line of the table.
 * The default behavior is to always return true.
 *
 * @typedef ***REMOVED***Function***REMOVED*** drawHorizontalLine
 * @param ***REMOVED***number***REMOVED*** index
 * @param ***REMOVED***number***REMOVED*** size
 * @returns ***REMOVED***boolean***REMOVED***
 */

/**
 * @typedef ***REMOVED***Object***REMOVED*** table~config
 * @property ***REMOVED***table~border***REMOVED*** border
 * @property ***REMOVED***table~columns[]***REMOVED*** columns Column specific configuration.
 * @property ***REMOVED***table~columns***REMOVED*** columnDefault Default values for all columns. Column specific settings overwrite the default values.
 * @property ***REMOVED***table~drawHorizontalLine***REMOVED*** drawHorizontalLine
 * @property ***REMOVED***table~singleLine***REMOVED*** singleLine Horizontal lines inside the table are not drawn.
 */

/**
 * Generates a text table.
 *
 * @param ***REMOVED***table~row[]***REMOVED*** data
 * @param ***REMOVED***table~config***REMOVED*** userConfig
 * @returns ***REMOVED***string***REMOVED***
 */
export default (data, userConfig = ***REMOVED******REMOVED***) => ***REMOVED***
  let rows;

  validateTableData(data);

  rows = stringifyTableData(data);

  const config = makeConfig(rows, userConfig);

  rows = truncateTableData(data, config);

  const rowHeightIndex = calculateRowHeightIndex(rows, config);

  rows = mapDataUsingRowHeightIndex(rows, rowHeightIndex, config);
  rows = alignTableData(rows, config);
  rows = padTableData(rows, config);

  const cellWidthIndex = calculateCellWidthIndex(rows[0]);

  return drawTable(rows, config.border, cellWidthIndex, rowHeightIndex, config.drawHorizontalLine, config.singleLine);
***REMOVED***;
