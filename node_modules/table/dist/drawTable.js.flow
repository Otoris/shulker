import ***REMOVED***
  drawBorderTop,
  drawBorderJoin,
  drawBorderBottom
***REMOVED*** from './drawBorder';
import drawRow from './drawRow';

/**
 * @param ***REMOVED***Array***REMOVED*** rows
 * @param ***REMOVED***Object***REMOVED*** border
 * @param ***REMOVED***Array***REMOVED*** columnSizeIndex
 * @param ***REMOVED***Array***REMOVED*** rowSpanIndex
 * @param ***REMOVED***Function***REMOVED*** drawHorizontalLine
 * @param ***REMOVED***boolean***REMOVED*** singleLine
 * @returns ***REMOVED***string***REMOVED***
 */
export default (rows, border, columnSizeIndex, rowSpanIndex, drawHorizontalLine, singleLine) => ***REMOVED***
  let output;
  let realRowIndex;
  let rowHeight;

  const rowCount = rows.length;

  realRowIndex = 0;

  output = '';

  if (drawHorizontalLine(realRowIndex, rowCount)) ***REMOVED***
    output += drawBorderTop(columnSizeIndex, border);
  ***REMOVED***

  rows.forEach((row, index0) => ***REMOVED***
    output += drawRow(row, border);

    if (!rowHeight) ***REMOVED***
      rowHeight = rowSpanIndex[realRowIndex];

      realRowIndex++;
    ***REMOVED***

    rowHeight--;

    if (!singleLine && rowHeight === 0 && index0 !== rowCount - 1 && drawHorizontalLine(realRowIndex, rowCount)) ***REMOVED***
      output += drawBorderJoin(columnSizeIndex, border);
    ***REMOVED***
  ***REMOVED***);

  if (drawHorizontalLine(realRowIndex, rowCount)) ***REMOVED***
    output += drawBorderBottom(columnSizeIndex, border);
  ***REMOVED***

  return output;
***REMOVED***;
