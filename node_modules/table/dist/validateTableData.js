"use strict";

Object.defineProperty(exports, "__esModule", ***REMOVED***
  value: true
***REMOVED***);
exports.default = void 0;

/**
 * @typedef ***REMOVED***string***REMOVED*** cell
 */

/**
 * @typedef ***REMOVED***cell[]***REMOVED*** validateData~column
 */

/**
 * @param ***REMOVED***column[]***REMOVED*** rows
 * @returns ***REMOVED***undefined***REMOVED***
 */
const validateTableData = rows => ***REMOVED***
  if (!Array.isArray(rows)) ***REMOVED***
    throw new TypeError('Table data must be an array.');
  ***REMOVED***

  if (rows.length === 0) ***REMOVED***
    throw new Error('Table must define at least one row.');
  ***REMOVED***

  if (rows[0].length === 0) ***REMOVED***
    throw new Error('Table must define at least one column.');
  ***REMOVED***

  const columnNumber = rows[0].length;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try ***REMOVED***
    for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) ***REMOVED***
      const cells = _step.value;

      if (!Array.isArray(cells)) ***REMOVED***
        throw new TypeError('Table row data must be an array.');
      ***REMOVED***

      if (cells.length !== columnNumber) ***REMOVED***
        throw new Error('Table must have a consistent number of cells.');
      ***REMOVED***

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try ***REMOVED***
        for (var _iterator2 = cells[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) ***REMOVED***
          const cell = _step2.value;

          // eslint-disable-next-line no-control-regex
          if (/[\u0001-\u0006\u0008-\u0009\u000B-\u001A]/.test(cell)) ***REMOVED***
            throw new Error('Table data must not contain control characters.');
          ***REMOVED***
        ***REMOVED***
      ***REMOVED*** catch (err) ***REMOVED***
        _didIteratorError2 = true;
        _iteratorError2 = err;
      ***REMOVED*** finally ***REMOVED***
        try ***REMOVED***
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) ***REMOVED***
            _iterator2.return();
          ***REMOVED***
        ***REMOVED*** finally ***REMOVED***
          if (_didIteratorError2) ***REMOVED***
            throw _iteratorError2;
          ***REMOVED***
        ***REMOVED***
      ***REMOVED***
    ***REMOVED***
  ***REMOVED*** catch (err) ***REMOVED***
    _didIteratorError = true;
    _iteratorError = err;
  ***REMOVED*** finally ***REMOVED***
    try ***REMOVED***
      if (!_iteratorNormalCompletion && _iterator.return != null) ***REMOVED***
        _iterator.return();
      ***REMOVED***
    ***REMOVED*** finally ***REMOVED***
      if (_didIteratorError) ***REMOVED***
        throw _iteratorError;
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***
***REMOVED***;

var _default = validateTableData;
exports.default = _default;
//# sourceMappingURL=validateTableData.js.map