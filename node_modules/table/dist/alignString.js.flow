import _ from 'lodash';
import stringWidth from 'string-width';

const alignments = [
  'left',
  'right',
  'center'
];

/**
 * @param ***REMOVED***string***REMOVED*** subject
 * @param ***REMOVED***number***REMOVED*** width
 * @returns ***REMOVED***string***REMOVED***
 */
const alignLeft = (subject, width) => ***REMOVED***
  return subject + ' '.repeat(width);
***REMOVED***;

/**
 * @param ***REMOVED***string***REMOVED*** subject
 * @param ***REMOVED***number***REMOVED*** width
 * @returns ***REMOVED***string***REMOVED***
 */
const alignRight = (subject, width) => ***REMOVED***
  return ' '.repeat(width) + subject;
***REMOVED***;

/**
 * @param ***REMOVED***string***REMOVED*** subject
 * @param ***REMOVED***number***REMOVED*** width
 * @returns ***REMOVED***string***REMOVED***
 */
const alignCenter = (subject, width) => ***REMOVED***
  let halfWidth;

  halfWidth = width / 2;

  if (halfWidth % 2 === 0) ***REMOVED***
    return ' '.repeat(halfWidth) + subject + ' '.repeat(halfWidth);
  ***REMOVED*** else ***REMOVED***
    halfWidth = Math.floor(halfWidth);

    return ' '.repeat(halfWidth) + subject + ' '.repeat(halfWidth + 1);
  ***REMOVED***
***REMOVED***;

/**
 * Pads a string to the left and/or right to position the subject
 * text in a desired alignment within a container.
 *
 * @param ***REMOVED***string***REMOVED*** subject
 * @param ***REMOVED***number***REMOVED*** containerWidth
 * @param ***REMOVED***string***REMOVED*** alignment One of the valid options (left, right, center).
 * @returns ***REMOVED***string***REMOVED***
 */
export default (subject, containerWidth, alignment) => ***REMOVED***
  if (!_.isString(subject)) ***REMOVED***
    throw new TypeError('Subject parameter value must be a string.');
  ***REMOVED***

  if (!_.isNumber(containerWidth)) ***REMOVED***
    throw new TypeError('Container width parameter value must be a number.');
  ***REMOVED***

  const subjectWidth = stringWidth(subject);

  if (subjectWidth > containerWidth) ***REMOVED***
    // console.log('subjectWidth', subjectWidth, 'containerWidth', containerWidth, 'subject', subject);

    throw new Error('Subject parameter value width cannot be greater than the container width.');
  ***REMOVED***

  if (!_.isString(alignment)) ***REMOVED***
    throw new TypeError('Alignment parameter value must be a string.');
  ***REMOVED***

  if (!alignments.includes(alignment)) ***REMOVED***
    throw new Error('Alignment parameter value must be a known alignment parameter value (left, right, center).');
  ***REMOVED***

  if (subjectWidth === 0) ***REMOVED***
    return ' '.repeat(containerWidth);
  ***REMOVED***

  const availableWidth = containerWidth - subjectWidth;

  if (alignment === 'left') ***REMOVED***
    return alignLeft(subject, availableWidth);
  ***REMOVED***

  if (alignment === 'right') ***REMOVED***
    return alignRight(subject, availableWidth);
  ***REMOVED***

  return alignCenter(subject, availableWidth);
***REMOVED***;
