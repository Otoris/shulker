import _ from 'lodash';
import getBorderCharacters from './getBorderCharacters';
import validateConfig from './validateConfig';
import calculateMaximumColumnWidthIndex from './calculateMaximumColumnWidthIndex';

/**
 * Merges user provided border characters with the default border ("honeywell") characters.
 *
 * @param ***REMOVED***Object***REMOVED*** border
 * @returns ***REMOVED***Object***REMOVED***
 */
const makeBorder = (border = ***REMOVED******REMOVED***) => ***REMOVED***
  return Object.assign(***REMOVED******REMOVED***, getBorderCharacters('honeywell'), border);
***REMOVED***;

/**
 * Creates a configuration for every column using default
 * values for the missing configuration properties.
 *
 * @param ***REMOVED***Array[]***REMOVED*** rows
 * @param ***REMOVED***Object***REMOVED*** columns
 * @param ***REMOVED***Object***REMOVED*** columnDefault
 * @returns ***REMOVED***Object***REMOVED***
 */
const makeColumns = (rows, columns = ***REMOVED******REMOVED***, columnDefault = ***REMOVED******REMOVED***) => ***REMOVED***
  const maximumColumnWidthIndex = calculateMaximumColumnWidthIndex(rows);

  _.times(rows[0].length, (index) => ***REMOVED***
    if (_.isUndefined(columns[index])) ***REMOVED***
      columns[index] = ***REMOVED******REMOVED***;
    ***REMOVED***

    columns[index] = Object.assign(***REMOVED***
      alignment: 'left',
      paddingLeft: 1,
      paddingRight: 1,
      truncate: Infinity,
      width: maximumColumnWidthIndex[index],
      wrapWord: false
    ***REMOVED***, columnDefault, columns[index]);
  ***REMOVED***);

  return columns;
***REMOVED***;

/**
 * Makes a new configuration object out of the userConfig object
 * using default values for the missing configuration properties.
 *
 * @param ***REMOVED***Array[]***REMOVED*** rows
 * @param ***REMOVED***Object***REMOVED*** userConfig
 * @returns ***REMOVED***Object***REMOVED***
 */
export default (rows, userConfig = ***REMOVED******REMOVED***) => ***REMOVED***
  validateConfig('config.json', userConfig);

  const config = _.cloneDeep(userConfig);

  config.border = makeBorder(config.border);
  config.columns = makeColumns(rows, config.columns, config.columnDefault);

  if (!config.drawHorizontalLine) ***REMOVED***
    /**
         * @returns ***REMOVED***boolean***REMOVED***
         */
    config.drawHorizontalLine = () => ***REMOVED***
      return true;
    ***REMOVED***;
  ***REMOVED***

  if (config.singleLine === undefined) ***REMOVED***
    config.singleLine = false;
  ***REMOVED***

  return config;
***REMOVED***;
