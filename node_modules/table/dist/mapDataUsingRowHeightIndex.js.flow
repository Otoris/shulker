import _ from 'lodash';
import wrapCell from './wrapCell';

/**
 * @param ***REMOVED***Array***REMOVED*** unmappedRows
 * @param ***REMOVED***number[]***REMOVED*** rowHeightIndex
 * @param ***REMOVED***Object***REMOVED*** config
 * @returns ***REMOVED***Array***REMOVED***
 */
export default (unmappedRows, rowHeightIndex, config) => ***REMOVED***
  const tableWidth = unmappedRows[0].length;

  const mappedRows = unmappedRows.map((cells, index0) => ***REMOVED***
    const rowHeight = _.times(rowHeightIndex[index0], () => ***REMOVED***
      return new Array(tableWidth).fill('');
    ***REMOVED***);

    // rowHeight
    //     [***REMOVED***row index within rowSaw; index2***REMOVED***]
    //     [***REMOVED***cell index within a virtual row; index1***REMOVED***]

    cells.forEach((value, index1) => ***REMOVED***
      const cellLines = wrapCell(value, config.columns[index1].width, config.columns[index1].wrapWord);

      cellLines.forEach((cellLine, index2) => ***REMOVED***
        rowHeight[index2][index1] = cellLine;
      ***REMOVED***);
    ***REMOVED***);

    return rowHeight;
  ***REMOVED***);

  return _.flatten(mappedRows);
***REMOVED***;
