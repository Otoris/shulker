/**
 * @typedef ***REMOVED***string***REMOVED*** cell
 */

/**
 * @typedef ***REMOVED***cell[]***REMOVED*** validateData~column
 */

/**
 * @param ***REMOVED***column[]***REMOVED*** rows
 * @returns ***REMOVED***undefined***REMOVED***
 */
export default (rows) => ***REMOVED***
  if (!Array.isArray(rows)) ***REMOVED***
    throw new TypeError('Table data must be an array.');
  ***REMOVED***

  if (rows.length === 0) ***REMOVED***
    throw new Error('Table must define at least one row.');
  ***REMOVED***

  if (rows[0].length === 0) ***REMOVED***
    throw new Error('Table must define at least one column.');
  ***REMOVED***

  const columnNumber = rows[0].length;

  for (const cells of rows) ***REMOVED***
    if (!Array.isArray(cells)) ***REMOVED***
      throw new TypeError('Table row data must be an array.');
    ***REMOVED***

    if (cells.length !== columnNumber) ***REMOVED***
      throw new Error('Table must have a consistent number of cells.');
    ***REMOVED***

    for (const cell of cells) ***REMOVED***
      // eslint-disable-next-line no-control-regex
      if (/[\u0001-\u0006\u0008-\u0009\u000B-\u001A]/.test(cell)) ***REMOVED***
        throw new Error('Table data must not contain control characters.');
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***
***REMOVED***;
