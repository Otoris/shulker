/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = Object.setPrototypeOf ||
    (***REMOVED*** __proto__: [] ***REMOVED*** instanceof Array && function (d, b) ***REMOVED*** d.__proto__ = b; ***REMOVED***) ||
    function (d, b) ***REMOVED*** for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; ***REMOVED***;

export function __extends(d, b) ***REMOVED***
    extendStatics(d, b);
    function __() ***REMOVED*** this.constructor = d; ***REMOVED***
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
***REMOVED***

export var __assign = Object.assign || function __assign(t) ***REMOVED***
    for (var s, i = 1, n = arguments.length; i < n; i++) ***REMOVED***
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    ***REMOVED***
    return t;
***REMOVED***

export function __rest(s, e) ***REMOVED***
    var t = ***REMOVED******REMOVED***;
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
***REMOVED***

export function __decorate(decorators, target, key, desc) ***REMOVED***
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
***REMOVED***

export function __param(paramIndex, decorator) ***REMOVED***
    return function (target, key) ***REMOVED*** decorator(target, key, paramIndex); ***REMOVED***
***REMOVED***

export function __metadata(metadataKey, metadataValue) ***REMOVED***
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
***REMOVED***

export function __awaiter(thisArg, _arguments, P, generator) ***REMOVED***
    return new (P || (P = Promise))(function (resolve, reject) ***REMOVED***
        function fulfilled(value) ***REMOVED*** try ***REMOVED*** step(generator.next(value)); ***REMOVED*** catch (e) ***REMOVED*** reject(e); ***REMOVED*** ***REMOVED***
        function rejected(value) ***REMOVED*** try ***REMOVED*** step(generator["throw"](value)); ***REMOVED*** catch (e) ***REMOVED*** reject(e); ***REMOVED*** ***REMOVED***
        function step(result) ***REMOVED*** result.done ? resolve(result.value) : new P(function (resolve) ***REMOVED*** resolve(result.value); ***REMOVED***).then(fulfilled, rejected); ***REMOVED***
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    ***REMOVED***);
***REMOVED***

export function __generator(thisArg, body) ***REMOVED***
    var _ = ***REMOVED*** label: 0, sent: function() ***REMOVED*** if (t[0] & 1) throw t[1]; return t[1]; ***REMOVED***, trys: [], ops: [] ***REMOVED***, f, y, t, g;
    return g = ***REMOVED*** next: verb(0), "throw": verb(1), "return": verb(2) ***REMOVED***, typeof Symbol === "function" && (g[Symbol.iterator] = function() ***REMOVED*** return this; ***REMOVED***), g;
    function verb(n) ***REMOVED*** return function (v) ***REMOVED*** return step([n, v]); ***REMOVED***; ***REMOVED***
    function step(op) ***REMOVED***
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try ***REMOVED***
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) ***REMOVED***
                case 0: case 1: t = op; break;
                case 4: _.label++; return ***REMOVED*** value: op[1], done: false ***REMOVED***;
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) ***REMOVED*** _ = 0; continue; ***REMOVED***
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) ***REMOVED*** _.label = op[1]; break; ***REMOVED***
                    if (op[0] === 6 && _.label < t[1]) ***REMOVED*** _.label = t[1]; t = op; break; ***REMOVED***
                    if (t && _.label < t[2]) ***REMOVED*** _.label = t[2]; _.ops.push(op); break; ***REMOVED***
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            ***REMOVED***
            op = body.call(thisArg, _);
        ***REMOVED*** catch (e) ***REMOVED*** op = [6, e]; y = 0; ***REMOVED*** finally ***REMOVED*** f = t = 0; ***REMOVED***
        if (op[0] & 5) throw op[1]; return ***REMOVED*** value: op[0] ? op[1] : void 0, done: true ***REMOVED***;
    ***REMOVED***
***REMOVED***

export function __exportStar(m, exports) ***REMOVED***
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
***REMOVED***

export function __values(o) ***REMOVED***
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return ***REMOVED***
        next: function () ***REMOVED***
            if (o && i >= o.length) o = void 0;
            return ***REMOVED*** value: o && o[i++], done: !o ***REMOVED***;
        ***REMOVED***
    ***REMOVED***;
***REMOVED***

export function __read(o, n) ***REMOVED***
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try ***REMOVED***
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    ***REMOVED***
    catch (error) ***REMOVED*** e = ***REMOVED*** error: error ***REMOVED***; ***REMOVED***
    finally ***REMOVED***
        try ***REMOVED***
            if (r && !r.done && (m = i["return"])) m.call(i);
        ***REMOVED***
        finally ***REMOVED*** if (e) throw e.error; ***REMOVED***
    ***REMOVED***
    return ar;
***REMOVED***

export function __spread() ***REMOVED***
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
***REMOVED***

export function __await(v) ***REMOVED***
    return this instanceof __await ? (this.v = v, this) : new __await(v);
***REMOVED***

export function __asyncGenerator(thisArg, _arguments, generator) ***REMOVED***
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = ***REMOVED******REMOVED***, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () ***REMOVED*** return this; ***REMOVED***, i;
    function verb(n) ***REMOVED*** if (g[n]) i[n] = function (v) ***REMOVED*** return new Promise(function (a, b) ***REMOVED*** q.push([n, v, a, b]) > 1 || resume(n, v); ***REMOVED***); ***REMOVED***; ***REMOVED***
    function resume(n, v) ***REMOVED*** try ***REMOVED*** step(g[n](v)); ***REMOVED*** catch (e) ***REMOVED*** settle(q[0][3], e); ***REMOVED*** ***REMOVED***
    function step(r) ***REMOVED*** r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  ***REMOVED***
    function fulfill(value) ***REMOVED*** resume("next", value); ***REMOVED***
    function reject(value) ***REMOVED*** resume("throw", value); ***REMOVED***
    function settle(f, v) ***REMOVED*** if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); ***REMOVED***
***REMOVED***

export function __asyncDelegator(o) ***REMOVED***
    var i, p;
    return i = ***REMOVED******REMOVED***, verb("next"), verb("throw", function (e) ***REMOVED*** throw e; ***REMOVED***), verb("return"), i[Symbol.iterator] = function () ***REMOVED*** return this; ***REMOVED***, i;
    function verb(n, f) ***REMOVED*** if (o[n]) i[n] = function (v) ***REMOVED*** return (p = !p) ? ***REMOVED*** value: __await(o[n](v)), done: n === "return" ***REMOVED*** : f ? f(v) : v; ***REMOVED***; ***REMOVED***
***REMOVED***

export function __asyncValues(o) ***REMOVED***
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator];
    return m ? m.call(o) : typeof __values === "function" ? __values(o) : o[Symbol.iterator]();
***REMOVED***

export function __makeTemplateObject(cooked, raw) ***REMOVED***
    if (Object.defineProperty) ***REMOVED*** Object.defineProperty(cooked, "raw", ***REMOVED*** value: raw ***REMOVED***); ***REMOVED*** else ***REMOVED*** cooked.raw = raw; ***REMOVED***
    return cooked;
***REMOVED***;

export function __importStar(mod) ***REMOVED***
    if (mod && mod.__esModule) return mod;
    var result = ***REMOVED******REMOVED***;
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
***REMOVED***

export function __importDefault(mod) ***REMOVED***
    return (mod && mod.__esModule) ? mod : ***REMOVED*** default: mod ***REMOVED***;
***REMOVED***
