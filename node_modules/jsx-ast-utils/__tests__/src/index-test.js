/* eslint-env mocha */
import fs from 'fs';
import path from 'path';
import assert from 'assert';
import core from '../../src/index';

const src = fs.readdirSync(path.resolve(__dirname, '../../src'))
  .filter(f => f.indexOf('.js') >= 0)
  .map(f => path.basename(f, '.js'));

describe('main export', () => ***REMOVED***
  it('should export an object', () => ***REMOVED***
    const expected = 'object';
    const actual = typeof core;

    assert.equal(expected, actual);
  ***REMOVED***);

  src.filter(f => f !== 'index').forEach((f) => ***REMOVED***
    it(`should export $***REMOVED***f***REMOVED***`, () => ***REMOVED***
      assert.equal(
        core[f],
        require(path.join('../../src/', f)).default // eslint-disable-line
      );
    ***REMOVED***);

    it(`should export $***REMOVED***f***REMOVED*** from root`, () => ***REMOVED***
      const file = `$***REMOVED***f***REMOVED***.js`;
      const expected = true;
      const actual = fs.statSync(path.join(path.resolve('.'), file)).isFile();

      assert.equal(expected, actual);
    ***REMOVED***);
  ***REMOVED***);
***REMOVED***);
