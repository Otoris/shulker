/**
 * Returns the string value of a template literal object.
 * Tries to build it as best as it can based on the passed
 * prop. For instance `This is a $***REMOVED***prop***REMOVED***` will return 'This is a ***REMOVED***prop***REMOVED***'.
 *
 * If the template literal builds to undefined (`$***REMOVED***undefined***REMOVED***`), then
 * this should return "undefined".
 */
export default function extractValueFromTemplateLiteral(value) ***REMOVED***
  const ***REMOVED***
    quasis,
    expressions,
  ***REMOVED*** = value;
  const partitions = quasis.concat(expressions);

  return partitions.sort((a, b) => a.start - b.start).reduce((raw, part) => ***REMOVED***
    const ***REMOVED***
      type,
    ***REMOVED*** = part;
    if (type === 'TemplateElement') ***REMOVED***
      return raw + part.value.raw;
    ***REMOVED***

    if (type === 'Identifier') ***REMOVED***
      return part.name === 'undefined' ? `$***REMOVED***raw***REMOVED***$***REMOVED***part.name***REMOVED***` : `$***REMOVED***raw***REMOVED******REMOVED***$***REMOVED***part.name***REMOVED******REMOVED***`;
    ***REMOVED***

    if (type.indexOf('Expression') > -1) ***REMOVED***
      return `$***REMOVED***raw***REMOVED******REMOVED***$***REMOVED***type***REMOVED******REMOVED***`;
    ***REMOVED***

    return raw;
  ***REMOVED***, '');
***REMOVED***
