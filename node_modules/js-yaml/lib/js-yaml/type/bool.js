'use strict';

var Type = require('../type');

function resolveYamlBoolean(data) ***REMOVED***
  if (data === null) return false;

  var max = data.length;

  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||
         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));
***REMOVED***

function constructYamlBoolean(data) ***REMOVED***
  return data === 'true' ||
         data === 'True' ||
         data === 'TRUE';
***REMOVED***

function isBoolean(object) ***REMOVED***
  return Object.prototype.toString.call(object) === '[object Boolean]';
***REMOVED***

module.exports = new Type('tag:yaml.org,2002:bool', ***REMOVED***
  kind: 'scalar',
  resolve: resolveYamlBoolean,
  construct: constructYamlBoolean,
  predicate: isBoolean,
  represent: ***REMOVED***
    lowercase: function (object) ***REMOVED*** return object ? 'true' : 'false'; ***REMOVED***,
    uppercase: function (object) ***REMOVED*** return object ? 'TRUE' : 'FALSE'; ***REMOVED***,
    camelcase: function (object) ***REMOVED*** return object ? 'True' : 'False'; ***REMOVED***
  ***REMOVED***,
  defaultStyle: 'lowercase'
***REMOVED***);
