'use strict';
const ***REMOVED***stdin***REMOVED*** = process;

module.exports = () => ***REMOVED***
	let result = '';

	return new Promise(resolve => ***REMOVED***
		if (stdin.isTTY) ***REMOVED***
			resolve(result);
			return;
		***REMOVED***

		stdin.setEncoding('utf8');

		stdin.on('readable', () => ***REMOVED***
			let chunk;

			while ((chunk = stdin.read())) ***REMOVED***
				result += chunk;
			***REMOVED***
		***REMOVED***);

		stdin.on('end', () => ***REMOVED***
			resolve(result);
		***REMOVED***);
	***REMOVED***);
***REMOVED***;

module.exports.buffer = () => ***REMOVED***
	const result = [];
	let length = 0;

	return new Promise(resolve => ***REMOVED***
		if (stdin.isTTY) ***REMOVED***
			resolve(Buffer.concat([]));
			return;
		***REMOVED***

		stdin.on('readable', () => ***REMOVED***
			let chunk;

			while ((chunk = stdin.read())) ***REMOVED***
				result.push(chunk);
				length += chunk.length;
			***REMOVED***
		***REMOVED***);

		stdin.on('end', () => ***REMOVED***
			resolve(Buffer.concat(result, length));
		***REMOVED***);
	***REMOVED***);
***REMOVED***;
