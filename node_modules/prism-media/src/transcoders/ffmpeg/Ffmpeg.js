const ChildProcess = require('child_process');
const FfmpegProcess = require('./FfmpegProcess');

class FfmpegTranscoder ***REMOVED***
  constructor(mediaTranscoder) ***REMOVED***
    this.mediaTranscoder = mediaTranscoder;
    this.command = FfmpegTranscoder.selectFfmpegCommand();
    this.processes = [];
  ***REMOVED***

  static verifyOptions(options) ***REMOVED***
    if (!options) throw new Error('Options not provided!');
    if (!options.media) throw new Error('Media must be provided');
    if (!options.ffmpegArguments || !(options.ffmpegArguments instanceof Array)) ***REMOVED***
      throw new Error('FFMPEG Arguments must be an array');
    ***REMOVED***
    if (options.ffmpegArguments.includes('-i')) return options;
    if (typeof options.media === 'string') ***REMOVED***
      options.ffmpegArguments = ['-i', `$***REMOVED***options.media***REMOVED***`].concat(options.ffmpegArguments).concat(['pipe:1']);
    ***REMOVED*** else ***REMOVED***
      options.ffmpegArguments = ['-i', '-'].concat(options.ffmpegArguments).concat(['pipe:1']);
    ***REMOVED***
    return options;
  ***REMOVED***

  /**
   * Transcodes an input using FFMPEG
   * @param ***REMOVED***FfmpegTranscoderOptions***REMOVED*** options the options to use
   * @returns ***REMOVED***FfmpegProcess***REMOVED*** the created FFMPEG process
   * @throws ***REMOVED***FFMPEGOptionsError***REMOVED***
   */
  transcode(options) ***REMOVED***
    if (!this.command) this.command = FfmpegTranscoder.selectFfmpegCommand();
    const proc = new FfmpegProcess(this, FfmpegTranscoder.verifyOptions(options));
    this.processes.push(proc);
    return proc;
  ***REMOVED***

  static selectFfmpegCommand() ***REMOVED***
    try ***REMOVED***
      const ffmpegStatic = require('ffmpeg-static');
      return ffmpegStatic.path || ffmpegStatic;
    ***REMOVED*** catch (err1) ***REMOVED***
      try ***REMOVED***
        return require('ffmpeg-binaries');
      ***REMOVED*** catch (err2) ***REMOVED***
        for (const command of ['ffmpeg', 'avconv', './ffmpeg', './avconv']) ***REMOVED***
          if (!ChildProcess.spawnSync(command, ['-h']).error) return command;
        ***REMOVED***
        throw new Error('FFMPEG not found');
      ***REMOVED***
    ***REMOVED***
  ***REMOVED***
***REMOVED***

module.exports = FfmpegTranscoder;
