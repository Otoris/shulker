const Ffmpeg = require('./ffmpeg/Ffmpeg');

const transcoders = [
  'ffmpeg',
];

class MediaTranscoder ***REMOVED***
  constructor(prism) ***REMOVED***
    this.prism = prism;
    this.ffmpeg = new Ffmpeg(this);
  ***REMOVED***

  static verifyOptions(options) ***REMOVED***
    if (!options) throw new Error('Options must be passed to MediaTranscoder.transcode()');
    if (!options.type) throw new Error('Options.type must be passed to MediaTranscoder.transcode()');
    if (!transcoders.includes(options.type)) throw new Error(`Options.type must be: $***REMOVED***transcoders.join(' ')***REMOVED***`);
    return options;
  ***REMOVED***

  /**
   * Transcodes a media stream based on specified options
   * @param ***REMOVED***Object***REMOVED*** options the options to use when transcoding
   * @returns ***REMOVED***ReadableStream***REMOVED*** the transcodeed stream
   */
  transcode(options) ***REMOVED***
    options = MediaTranscoder.verifyOptions(options);
    return this[options.type].transcode(options);
  ***REMOVED***
***REMOVED***

module.exports = MediaTranscoder;
