/**
 * @author Toru Nagashima <https://github.com/mysticatea>
 * See LICENSE file in root directory for full license.
 */
"use strict"

const ***REMOVED*** READ, ReferenceTracker ***REMOVED*** = require("eslint-utils")

module.exports = ***REMOVED***
    meta: ***REMOVED***
        docs: ***REMOVED***
            description: "disallow the subclassing of the built-in classes.",
            category: "ES2015",
            recommended: false,
            url:
                "http://mysticatea.github.io/eslint-plugin-es/rules/no-subclassing-builtins.html",
        ***REMOVED***,
        fixable: null,
        messages: ***REMOVED***
            forbidden: "ES2015 subclassing of '***REMOVED******REMOVED***name***REMOVED******REMOVED***' is forbidden.",
        ***REMOVED***,
        schema: [],
        type: "problem",
    ***REMOVED***,
    create(context) ***REMOVED***
        return ***REMOVED***
            "Program:exit"() ***REMOVED***
                const tracker = new ReferenceTracker(context.getScope())
                for (const ***REMOVED*** node, path ***REMOVED*** of tracker.iterateGlobalReferences(***REMOVED***
                    Array: ***REMOVED*** [READ]: true ***REMOVED***,
                    Boolean: ***REMOVED*** [READ]: true ***REMOVED***,
                    Error: ***REMOVED*** [READ]: true ***REMOVED***,
                    RegExp: ***REMOVED*** [READ]: true ***REMOVED***,
                    Function: ***REMOVED*** [READ]: true ***REMOVED***,
                    Map: ***REMOVED*** [READ]: true ***REMOVED***,
                    Number: ***REMOVED*** [READ]: true ***REMOVED***,
                    Promise: ***REMOVED*** [READ]: true ***REMOVED***,
                    Set: ***REMOVED*** [READ]: true ***REMOVED***,
                    String: ***REMOVED*** [READ]: true ***REMOVED***,
                ***REMOVED***)) ***REMOVED***
                    if (
                        node.parent.type.startsWith("Class") &&
                        node.parent.superClass === node
                    ) ***REMOVED***
                        context.report(***REMOVED***
                            node,
                            messageId: "forbidden",
                            data: ***REMOVED*** name: path.join(".") ***REMOVED***,
                        ***REMOVED***)
                    ***REMOVED***
                ***REMOVED***
            ***REMOVED***,
        ***REMOVED***
    ***REMOVED***,
***REMOVED***
