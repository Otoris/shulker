/**
 * @author Toru Nagashima <https://github.com/mysticatea>
 * See LICENSE file in root directory for full license.
 */
"use strict"

const ***REMOVED*** isCommaToken ***REMOVED*** = require("../utils")

module.exports = ***REMOVED***
    meta: ***REMOVED***
        docs: ***REMOVED***
            description:
                "disallow trailing commas in parameter/argument lists.",
            category: "ES2017",
            recommended: false,
            url:
                "http://mysticatea.github.io/eslint-plugin-es/rules/no-trailing-function-commas.html",
        ***REMOVED***,
        fixable: "code",
        messages: ***REMOVED***
            forbidden:
                "ES2017 trailing commas in parameter/argument lists are forbidden.",
        ***REMOVED***,
        schema: [],
        type: "problem",
    ***REMOVED***,
    create(context) ***REMOVED***
        const sourceCode = context.getSourceCode()
        return ***REMOVED***
            ":function"(node) ***REMOVED***
                const length = node.params.length
                if (length === 0) ***REMOVED***
                    return
                ***REMOVED***

                const lastParam = node.params[length - 1]
                const token = sourceCode.getTokenAfter(lastParam)
                if (isCommaToken(token)) ***REMOVED***
                    context.report(***REMOVED***
                        loc: token.loc,
                        messageId: "forbidden",
                        fix(fixer) ***REMOVED***
                            return fixer.remove(token)
                        ***REMOVED***,
                    ***REMOVED***)
                ***REMOVED***
            ***REMOVED***,
            "CallExpression, NewExpression"(node) ***REMOVED***
                const token = sourceCode.getLastToken(node, 1)
                if (node.arguments.length >= 1 && isCommaToken(token)) ***REMOVED***
                    context.report(***REMOVED***
                        loc: token.loc,
                        messageId: "forbidden",
                        fix(fixer) ***REMOVED***
                            return fixer.remove(token)
                        ***REMOVED***,
                    ***REMOVED***)
                ***REMOVED***
            ***REMOVED***,
        ***REMOVED***
    ***REMOVED***,
***REMOVED***
