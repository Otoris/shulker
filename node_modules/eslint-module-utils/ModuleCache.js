'use strict'
exports.__esModule = true

const log = require('debug')('eslint-module-utils:ModuleCache')

class ModuleCache ***REMOVED***
  constructor(map) ***REMOVED***
    this.map = map || new Map()
  ***REMOVED***

  /**
   * returns value for returning inline
   * @param ***REMOVED***[type]***REMOVED*** cacheKey [description]
   * @param ***REMOVED***[type]***REMOVED*** result   [description]
   */
  set(cacheKey, result) ***REMOVED***
    this.map.set(cacheKey, ***REMOVED*** result, lastSeen: process.hrtime() ***REMOVED***)
    log('setting entry for', cacheKey)
    return result
  ***REMOVED***

  get(cacheKey, settings) ***REMOVED***
    if (this.map.has(cacheKey)) ***REMOVED***
      const f = this.map.get(cacheKey)
      // check fresness
      if (process.hrtime(f.lastSeen)[0] < settings.lifetime) return f.result
    ***REMOVED*** else log('cache miss for', cacheKey)
    // cache miss
    return undefined
  ***REMOVED***

***REMOVED***

ModuleCache.getSettings = function (settings) ***REMOVED***
  const cacheSettings = Object.assign(***REMOVED***
    lifetime: 30,  // seconds
  ***REMOVED***, settings['import/cache'])

  // parse infinity
  if (cacheSettings.lifetime === 'âˆž' || cacheSettings.lifetime === 'Infinity') ***REMOVED***
    cacheSettings.lifetime = Infinity
  ***REMOVED***

  return cacheSettings
***REMOVED***

exports.default = ModuleCache
